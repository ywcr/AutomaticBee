var BonreeAgent = (function (exports) {
  "use strict";
  var version = "2.4.5";
  function A$9() {
    return "labels" in HTMLInputElement.prototype;
  }
  function f$4(Et) {
    if (!Et.isContentEditable) {
      if ("innerText" in Et) {
        let is = Et.innerText;
        if (!y$5()) {
          var es = "script, style",
            ts = Et.querySelectorAll(es);
          for (let ns = 0; ns < ts.length; ns += 1) {
            const rs = ts[ns];
            if ("innerText" in rs) {
              const ss = rs.innerText;
              ss && 0 < ss.trim().length && (is = is.replace(ss, ""));
            }
          }
        }
        return is;
      }
      return Et.textContent;
    }
  }
  function E$7(Et, es) {
    var ts = 0;
    if (ts < Et.length) return es(ts);
  }
  function N$5(Et, es, ts = "") {
    var is = Et.charCodeAt(es - 1),
      is = 55296 <= is && is <= 56319 ? es + 1 : es;
    return Et.length <= is ? Et : "" + Et.slice(0, is) + ts;
  }
  function p$9(Et) {
    return 100 < Et.length ? N$5(Et, 100) + " [...]" : Et;
  }
  function g$7(Et) {
    return Et.replace(/\s+/g, " ");
  }
  function m$8(Et, es) {
    return Et.ownerDocument ? Et.ownerDocument.getElementById(es) : null;
  }
  const b$5 = [
    (Et) => {
      var es;
      if (A$9()) {
        if ("labels" in Et && Et.labels && 0 < Et.labels.length)
          return f$4(Et.labels[0]);
      } else if (Et.id)
        return (
          (es =
            Et.ownerDocument &&
            E$7(
              Et.ownerDocument.querySelectorAll("label"),
              (ts) => ts.htmlFor === Et.id
            )) && f$4(es)
        );
    },
    (Et) => {
      if (Et.nodeName === "INPUT") {
        var es = Et.getAttribute("type"),
          ts = Et.getAttribute("bonree-value");
        if (
          ts === "part" ||
          ts == "all" ||
          es === "button" ||
          es === "submit" ||
          es === "reset"
        )
          return Et.value;
      }
    },
    (Et) => {
      if (
        Et.nodeName === "BUTTON" ||
        Et.nodeName === "LABEL" ||
        Et.getAttribute("role") === "button"
      )
        return f$4(Et);
    },
    (Et) => Et.getAttribute("aria-label"),
    (Et) => {
      var es = Et.getAttribute("aria-labelledby");
      if (es)
        return es
          .split(/\s+/)
          .map((ts) => m$8(Et, ts))
          .filter((ts) => !!ts)
          .map((ts) => f$4(ts))
          .join(" ");
    },
    (Et) => Et.getAttribute("alt"),
    (Et) => Et.getAttribute("name"),
    (Et) => Et.getAttribute("title"),
    (Et) => Et.getAttribute("placeholder"),
    (Et) => {
      if ("options" in Et && 0 < Et.options.length) return f$4(Et.options[0]);
    },
  ];
  function y$5() {
    return !h$f();
  }
  function h$f() {
    return document.documentMode;
  }
  const R$4 = [(Et) => f$4(Et)],
    S$7 = 10;
  function d$d(Et, es) {
    let ts = Et,
      is = 0;
    for (
      ;
      is <= S$7 &&
      ts &&
      ts.nodeName !== "BODY" &&
      ts.nodeName !== "HTML" &&
      ts.nodeName !== "HEAD";

    ) {
      for (const ns of es) {
        const rs = ns(ts);
        if (typeof rs == "string") {
          const ss = rs.trim();
          if (ss) return p$9(g$7(ss));
        }
      }
      if (ts.nodeName === "FORM") break;
      (ts = ts.parentElement), (is += 1);
    }
  }
  function C$6(Et) {
    return Et.textContent.replace(/\s+/g, "");
  }
  function x$6(Et, es = 10) {
    return es != 0 &&
      Et &&
      !Et.hasAttribute("bonree-title") &&
      Et.nodeName !== "BODY" &&
      Et.nodeName !== "HTML" &&
      Et.nodeName !== "HEAD"
      ? x$6(Et.parentElement, es - 1)
      : Et;
  }
  function w$c(Et, es, ts = "##") {
    if (
      ((es = (Et = x$6(Et, es)).getAttribute("bonree-content")),
      Et.hasAttribute("bonree-title"))
    ) {
      var is = Et.getAttribute("bonree-title");
      if (
        (isDefined(es) &&
          !isEmpty(es) &&
          new RegExp(es) instanceof RegExp &&
          new RegExp(es).test(is) &&
          is &&
          is != "" &&
          is != "null") ||
        (is && !isEmpty(is))
      )
        return is;
    }
    return (
      (is = T$9(Et, es, ts)), (Et = -ts.length), Et == 0 ? is : is.slice(0, Et)
    );
  }
  function T$9(Et, es, ts) {
    let is = "";
    for (let ss = 0; ss < Et.childNodes.length; ss++) {
      var ns = Et.childNodes[ss];
      if (ns.nodeType === 3) {
        var rs = C$6(ns);
        isDefined(es) && !isEmpty(es) && new RegExp(es) instanceof RegExp
          ? new RegExp(es).test(rs) &&
            rs &&
            rs != "" &&
            rs != "null" &&
            (is += rs + ts)
          : rs && 0 < rs.length && (is += rs + ts);
      } else if (ns.nodeType === 1 && ns.nodeName == "INPUT")
        for (const os of b$5) {
          const ds = os(ns);
          let as = ds;
          (as = typeof ds == "string" ? ds.trim() : as) &&
            (is += p$9(g$7(as)) + ts);
        }
      else
        ns.nodeType === 1 &&
          ns.nodeName !== "SCRIPT" &&
          (is += T$9(ns, es, ts));
    }
    return !(
      isDefined(es) &&
      !isEmpty(es) &&
      new RegExp(es) instanceof RegExp
    ) ||
      (new RegExp(es).test(is) && is && is != "" && is != "null")
      ? is
      : "";
  }
  function getActionText(Et, es, ts) {
    return isDefined(es) && 0 < es
      ? w$c(Et, es, ts)
      : d$d(Et, b$5) || d$d(Et, R$4) || "";
  }
  function t(Et) {
    var es = Math.floor(100 * Math.random());
    return !(0 <= Et && Et <= 100) || es < Et;
  }
  var d$c = 8;
  function hex_md5(Et) {
    return p$8(w$b(k$3(Et), Et.length * d$c));
  }
  function w$b(Et, es) {
    (Et[es >> 5] |= 128 << es % 32), (Et[14 + (((es + 64) >>> 9) << 4)] = es);
    for (
      var ts = 1732584193,
        is = -271733879,
        ns = -1732584194,
        rs = 271733878,
        ss = 0;
      ss < Et.length;
      ss += 16
    ) {
      var os = ts,
        ds = is,
        as = ns,
        cs = rs,
        ts = v$c(ts, is, ns, rs, Et[ss + 0], 7, -680876936),
        rs = v$c(rs, ts, is, ns, Et[ss + 1], 12, -389564586),
        ns = v$c(ns, rs, ts, is, Et[ss + 2], 17, 606105819),
        is = v$c(is, ns, rs, ts, Et[ss + 3], 22, -1044525330);
      (ts = v$c(ts, is, ns, rs, Et[ss + 4], 7, -176418897)),
        (rs = v$c(rs, ts, is, ns, Et[ss + 5], 12, 1200080426)),
        (ns = v$c(ns, rs, ts, is, Et[ss + 6], 17, -1473231341)),
        (is = v$c(is, ns, rs, ts, Et[ss + 7], 22, -45705983)),
        (ts = v$c(ts, is, ns, rs, Et[ss + 8], 7, 1770035416)),
        (rs = v$c(rs, ts, is, ns, Et[ss + 9], 12, -1958414417)),
        (ns = v$c(ns, rs, ts, is, Et[ss + 10], 17, -42063)),
        (is = v$c(is, ns, rs, ts, Et[ss + 11], 22, -1990404162)),
        (ts = v$c(ts, is, ns, rs, Et[ss + 12], 7, 1804603682)),
        (rs = v$c(rs, ts, is, ns, Et[ss + 13], 12, -40341101)),
        (ns = v$c(ns, rs, ts, is, Et[ss + 14], 17, -1502002290)),
        (ts = f$3(
          ts,
          (is = v$c(is, ns, rs, ts, Et[ss + 15], 22, 1236535329)),
          ns,
          rs,
          Et[ss + 1],
          5,
          -165796510
        )),
        (rs = f$3(rs, ts, is, ns, Et[ss + 6], 9, -1069501632)),
        (ns = f$3(ns, rs, ts, is, Et[ss + 11], 14, 643717713)),
        (is = f$3(is, ns, rs, ts, Et[ss + 0], 20, -373897302)),
        (ts = f$3(ts, is, ns, rs, Et[ss + 5], 5, -701558691)),
        (rs = f$3(rs, ts, is, ns, Et[ss + 10], 9, 38016083)),
        (ns = f$3(ns, rs, ts, is, Et[ss + 15], 14, -660478335)),
        (is = f$3(is, ns, rs, ts, Et[ss + 4], 20, -405537848)),
        (ts = f$3(ts, is, ns, rs, Et[ss + 9], 5, 568446438)),
        (rs = f$3(rs, ts, is, ns, Et[ss + 14], 9, -1019803690)),
        (ns = f$3(ns, rs, ts, is, Et[ss + 3], 14, -187363961)),
        (is = f$3(is, ns, rs, ts, Et[ss + 8], 20, 1163531501)),
        (ts = f$3(ts, is, ns, rs, Et[ss + 13], 5, -1444681467)),
        (rs = f$3(rs, ts, is, ns, Et[ss + 2], 9, -51403784)),
        (ns = f$3(ns, rs, ts, is, Et[ss + 7], 14, 1735328473)),
        (ts = o$2(
          ts,
          (is = f$3(is, ns, rs, ts, Et[ss + 12], 20, -1926607734)),
          ns,
          rs,
          Et[ss + 5],
          4,
          -378558
        )),
        (rs = o$2(rs, ts, is, ns, Et[ss + 8], 11, -2022574463)),
        (ns = o$2(ns, rs, ts, is, Et[ss + 11], 16, 1839030562)),
        (is = o$2(is, ns, rs, ts, Et[ss + 14], 23, -35309556)),
        (ts = o$2(ts, is, ns, rs, Et[ss + 1], 4, -1530992060)),
        (rs = o$2(rs, ts, is, ns, Et[ss + 4], 11, 1272893353)),
        (ns = o$2(ns, rs, ts, is, Et[ss + 7], 16, -155497632)),
        (is = o$2(is, ns, rs, ts, Et[ss + 10], 23, -1094730640)),
        (ts = o$2(ts, is, ns, rs, Et[ss + 13], 4, 681279174)),
        (rs = o$2(rs, ts, is, ns, Et[ss + 0], 11, -358537222)),
        (ns = o$2(ns, rs, ts, is, Et[ss + 3], 16, -722521979)),
        (is = o$2(is, ns, rs, ts, Et[ss + 6], 23, 76029189)),
        (ts = o$2(ts, is, ns, rs, Et[ss + 9], 4, -640364487)),
        (rs = o$2(rs, ts, is, ns, Et[ss + 12], 11, -421815835)),
        (ns = o$2(ns, rs, ts, is, Et[ss + 15], 16, 530742520)),
        (ts = F$2(
          ts,
          (is = o$2(is, ns, rs, ts, Et[ss + 2], 23, -995338651)),
          ns,
          rs,
          Et[ss + 0],
          6,
          -198630844
        )),
        (rs = F$2(rs, ts, is, ns, Et[ss + 7], 10, 1126891415)),
        (ns = F$2(ns, rs, ts, is, Et[ss + 14], 15, -1416354905)),
        (is = F$2(is, ns, rs, ts, Et[ss + 5], 21, -57434055)),
        (ts = F$2(ts, is, ns, rs, Et[ss + 12], 6, 1700485571)),
        (rs = F$2(rs, ts, is, ns, Et[ss + 3], 10, -1894986606)),
        (ns = F$2(ns, rs, ts, is, Et[ss + 10], 15, -1051523)),
        (is = F$2(is, ns, rs, ts, Et[ss + 1], 21, -2054922799)),
        (ts = F$2(ts, is, ns, rs, Et[ss + 8], 6, 1873313359)),
        (rs = F$2(rs, ts, is, ns, Et[ss + 15], 10, -30611744)),
        (ns = F$2(ns, rs, ts, is, Et[ss + 6], 15, -1560198380)),
        (is = F$2(is, ns, rs, ts, Et[ss + 13], 21, 1309151649)),
        (ts = F$2(ts, is, ns, rs, Et[ss + 4], 6, -145523070)),
        (rs = F$2(rs, ts, is, ns, Et[ss + 11], 10, -1120210379)),
        (ns = F$2(ns, rs, ts, is, Et[ss + 2], 15, 718787259)),
        (is = F$2(is, ns, rs, ts, Et[ss + 9], 21, -343485551)),
        (ts = h$e(ts, os)),
        (is = h$e(is, ds)),
        (ns = h$e(ns, as)),
        (rs = h$e(rs, cs));
    }
    return Array(ts, is, ns, rs);
  }
  function _$2(Et, es, ts, is, ns, rs) {
    return h$e(C$5(h$e(h$e(es, Et), h$e(is, rs)), ns), ts);
  }
  function v$c(Et, es, ts, is, ns, rs, ss) {
    return _$2((es & ts) | (~es & is), Et, es, ns, rs, ss);
  }
  function f$3(Et, es, ts, is, ns, rs, ss) {
    return _$2((es & is) | (ts & ~is), Et, es, ns, rs, ss);
  }
  function o$2(Et, es, ts, is, ns, rs, ss) {
    return _$2(es ^ ts ^ is, Et, es, ns, rs, ss);
  }
  function F$2(Et, es, ts, is, ns, rs, ss) {
    return _$2(ts ^ (es | ~is), Et, es, ns, rs, ss);
  }
  function h$e(Et, es) {
    var ts = (65535 & Et) + (65535 & es);
    return (((Et >> 16) + (es >> 16) + (ts >> 16)) << 16) | (65535 & ts);
  }
  function C$5(Et, es) {
    return (Et << es) | (Et >>> (32 - es));
  }
  function k$3(Et) {
    for (
      var es = Array(), ts = (1 << d$c) - 1, is = 0;
      is < Et.length * d$c;
      is += d$c
    )
      es[is >> 5] |= (Et.charCodeAt(is / d$c) & ts) << is % 32;
    return es;
  }
  function p$8(Et) {
    for (var es = "0123456789abcdef", ts = "", is = 0; is < 4 * Et.length; is++)
      ts +=
        es.charAt((Et[is >> 2] >> ((is % 4) * 8 + 4)) & 15) +
        es.charAt((Et[is >> 2] >> ((is % 4) * 8)) & 15);
    return ts;
  }
  let e$5 = {
    "3dm": "x-world/x-3dmf",
    "3dmf": "x-world/x-3dmf",
    a: "application/octet-stream",
    aab: "application/x-authorware-bin",
    aam: "application/x-authorware-map",
    aas: "application/x-authorware-seg",
    abc: "text/vndabc",
    acgi: "text/html",
    afl: "video/animaflex",
    ai: "application/postscript",
    aif: "audio/x-aiff",
    aifc: "audio/x-aiff",
    aiff: "audio/x-aiff",
    aim: "application/x-aim",
    aip: "text/x-audiosoft-intra",
    ani: "application/x-navi-animation",
    aos: "application/x-nokia-9000-communicator-add-on-software",
    aps: "application/mime",
    arc: "application/octet-stream",
    arj: "application/octet-stream",
    art: "image/x-jg",
    asf: "video/x-ms-asf",
    asm: "text/x-asm",
    asp: "text/asp",
    asx: "application/x-mplayer2",
    au: "audio/x-au",
    avi: "video/avi",
    bcpio: "application/x-bcpio",
    bin: "application/x-macbinary",
    bm: "image/bmp",
    bmp: "image/x-windows-bmp",
    boo: "application/book",
    book: "application/book",
    boz: "application/x-bzip2",
    bsh: "application/x-bsh",
    bz: "application/x-bzip",
    bz2: "application/x-bzip2",
    c: "text/plain",
    "c++": "text/plain",
    cat: "application/vndms-pki.seccat",
    cc: "text/plain",
    ccad: "application/clariscad",
    cco: "application/x-cocoa",
    cdf: "application/x-cdf",
    cer: "application/pkix-cert",
    cha: "application/x-chat",
    chat: "application/x-chat",
    class: "application/x-java-class",
    com: "application/octet-stream",
    conf: "text/plain",
    cpio: "application/x-cpio",
    cpp: "text/x-c",
    cpt: "application/x-cpt",
    crl: "application/pkcs-crl",
    crt: "application/x-x509-ca-cert",
    csh: "application/x-csh",
    css: "application/x-pointplus",
    cxx: "text/plain",
    dcr: "application/x-director",
    deepv: "application/x-deepv",
    der: "application/x-x509-ca-cert",
    dif: "video/x-dv",
    dir: "application/x-director",
    dl: "video/dl",
    doc: "application/msword",
    dot: "application/msword",
    dp: "application/commonground",
    drw: "application/drafting",
    dump: "application/octet-stream",
    dv: "video/x-dv",
    dvi: "application/x-dvi",
    dwf: "model/vnd.dwf",
    dwg: "application/acad",
    dxf: "application/dxf",
    dxr: "application/x-director",
    el: "text/x-script.elisp",
    elc: "application/x-bytecode.elisp compiled elisp)",
    env: "application/x-envoy",
    eps: "application/postscript",
    es: "application/x-esrehber",
    etx: "text/x-setext",
    evy: "application/x-envoy",
    exe: "application/octet-stream",
    f: "text/x-fortran",
    f77: "text/x-fortran",
    f90: "text/x-fortran",
    fdf: "application/vnd.fdf",
    fif: "application/fractals",
    fli: "video/x-fli",
    flo: "image/florian",
    flx: "text/vnd.fmi.flexstor",
    fmf: "video/x-atomic3d-feature",
    for: "text/x-fortran",
    fpx: "image/vnd.net-fpx",
    frl: "application/freeloader",
    funk: "audio/make",
    g: "text/plain",
    g3: "image/g3fax",
    gif: "image/gif",
    gl: "video/x-gl",
    gsd: "audio/x-gsm",
    gsm: "audio/x-gsm",
    gsp: "application/x-gsp",
    gss: "application/x-gss",
    gtar: "application/x-gtar",
    gz: "application/x-compressed",
    gzip: "application/x-gzip",
    h: "text/x-h",
    hdf: "application/x-hdf",
    help: "application/x-helpfile",
    hgl: "application/vnd.hp-hpgl",
    hh: "text/x-h",
    hlb: "text/x-script",
    hlp: "application/x-winhelp",
    hpg: "application/vnd.hp-hpgl",
    hpgl: "application/vnd.hp-hpgl",
    hqx: "application/binhex",
    hta: "application/hta",
    htc: "text/x-component",
    htm: "text/html",
    html: "text/html",
    htmls: "text/html",
    htt: "text/webviewhtml",
    htx: "text/html",
    ice: "x-conference/x-cooltalk",
    ico: "image/x-icon",
    idc: "text/plain",
    ief: "image/ief",
    iefs: "image/ief",
    iges: "application/iges",
    igs: "model/iges",
    ima: "application/x-ima",
    imap: "application/x-httpd-imap",
    inf: "application/inf",
    ins: "application/x-internett-signup",
    ip: "application/x-ip2",
    isu: "video/x-isvideo",
    it: "audio/it",
    iv: "application/x-inventor",
    ivr: "i-world/i-vrml",
    ivy: "application/x-livescreen",
    jam: "audio/x-jam",
    jav: "text/x-java-source",
    java: "text/x-java-source",
    jcm: "application/x-java-commerce",
    jfif: "image/pjpeg",
    "jfif-tbnl": "image/jpeg",
    jpe: "image/pjpeg",
    jpeg: "image/pjpeg",
    jpg: "image/pjpeg",
    jps: "image/x-jps",
    js: "application/x-javascript",
    jut: "image/jutvision",
    kar: "audio/midi",
    ksh: "application/x-ksh",
    la: "audio/x-nspaudio",
    lam: "audio/x-liveaudio",
    latex: "application/x-latex",
    lha: "application/octet-stream",
    lhx: "application/octet-stream",
    list: "text/plain",
    lma: "audio/x-nspaudio",
    log: "text/plain",
    lsp: "application/x-lisp",
    lst: "text/plain",
    lsx: "text/x-la-asf",
    ltx: "application/x-latex",
    lzh: "application/octet-stream",
    lzx: "application/octet-stream",
    m: "text/x-m",
    m1v: "video/mpeg",
    m2a: "audio/mpeg",
    m2v: "video/mpeg",
    m3u: "audio/x-mpequrl",
    man: "application/x-troff-man",
    map: "application/x-navimap",
    mar: "text/plain",
    mbd: "application/mbedlet",
    mc$: "application/x-magic-cap-package-1.0",
    mcd: "application/x-mathcad",
    mcf: "text/mcf",
    mcp: "application/netmc",
    me: "application/x-troff-me",
    mht: "message/rfc822",
    mhtml: "message/rfc822",
    mid: "application/x-midi",
    midi: "application/x-midi",
    mif: "application/x-mif",
    mime: "www/mime",
    mjf: "audio/x-vnd.audioexplosion.mjuicemediafile",
    mjpg: "video/x-motion-jpeg",
    mm: "application/x-meme",
    mod: "audio/x-mod",
    moov: "video/quicktime",
    mov: "video/quicktime",
    movie: "video/x-sgi-movie",
    mp2: "audio/x-mpeg",
    mp3: "audio/x-mpeg-3",
    mpa: "audio/mpeg",
    mpc: "application/x-project",
    mpe: "video/mpeg",
    mpeg: "video/mpeg",
    mpg: "video/mpeg",
    mpga: "audio/mpeg",
    mpp: "application/vnd.ms-project",
    mpt: "application/x-project",
    mpv: "application/x-project",
    mpx: "application/x-project",
    mrc: "application/marc",
    ms: "application/x-troff-ms",
    mv: "video/x-sgi-movie",
    my: "audio/make",
    mzz: "application/x-vnd.audioexplosion.mzz",
    nap: "image/naplps",
    naplps: "image/naplps",
    nc: "application/x-netcdf",
    ncm: "application/vnd.nokia.configuration-message",
    nif: "image/x-niff",
    niff: "image/x-niff",
    nix: "application/x-mix-transfer",
    nsc: "application/x-conference",
    nvd: "application/x-navidoc",
    o: "application/octet-stream",
    oda: "application/oda",
    omc: "application/x-omc",
    omcd: "application/x-omcdatamaker",
    omcr: "application/x-omcregerator",
    p: "text/x-pascal",
    p10: "application/x-pkcs10",
    p12: "application/x-pkcs12",
    p7a: "application/x-pkcs7-signature",
    p7c: "application/x-pkcs7-mime",
    p7m: "application/x-pkcs7-mime",
    p7r: "application/x-pkcs7-certreqresp",
    p7s: "application/pkcs7-signature",
    part: "application/pro_eng",
    pas: "text/pascal",
    pbm: "image/x-portable-bitmap",
    pcl: "application/x-pcl",
    pcx: "image/x-pcx",
    pdb: "chemical/x-pdb",
    pdf: "application/pdf",
    pfunk: "audio/make.my.funk",
    pgm: "image/x-portable-greymap",
    pic: "image/pict",
    pict: "image/pict",
    pkg: "application/x-newton-compatible-pkg",
    pko: "application/vnd.ms-pki.pko",
    pl: "text/x-script.perl",
    plx: "application/x-pixclscript",
    pm: "text/x-script.perl-module",
    pm4: "application/x-pagemaker",
    pm5: "application/x-pagemaker",
    png: "image/png",
    pnm: "application/x-portable-anymap",
    pot: "application/mspowerpoint",
    pov: "model/x-pov",
    ppa: "application/vnd.ms-powerpoint",
    ppm: "image/x-portable-pixmap",
    pps: "application/vnd.ms-powerpoint",
    ppt: "application/powerpoint",
    ppz: "application/mspowerpoint",
    pre: "application/x-freelance",
    prt: "application/pro_eng",
    ps: "application/postscript",
    psd: "application/octet-stream",
    pvu: "paleovu/x-pv",
    pwz: "application/vnd.ms-powerpoint",
    py: "text/x-script.phyton",
    pyc: "application/x-bytecode.python",
    qcp: "audio/vnd.qcelp",
    qd3: "x-world/x-3dmf",
    qd3d: "x-world/x-3dmf",
    qif: "image/x-quicktime",
    qt: "video/quicktime",
    qtc: "video/x-qtc",
    qti: "image/x-quicktime",
    qtif: "image/x-quicktime",
    ra: "audio/x-realaudio",
    ram: "audio/x-pn-realaudio",
    ras: "application/x-cmu-raster",
    rast: "image/cmu-raster",
    rexx: "text/x-script.rexx",
    rf: "image/vnd.rn-realflash",
    rgb: "image/x-rgb",
    rm: "application/vnd.rn-realmedia",
    rmm: "audio/x-pn-realaudio",
    rmp: "audio/x-pn-realaudio-plugin",
    rng: "application/vnd.nokia.ringing-tone",
    rnx: "application/vnd.rn-realplayer",
    roff: "application/x-troff",
    rp: "image/vnd.rn-realpix",
    rpm: "audio/x-pn-realaudio-plugin",
    rt: "text/vnd.rn-realtext",
    rtf: "application/x-rtf",
    rtx: "application/rtf",
    rv: "video/vnd.rn-realvideo",
    s: "text/x-asm",
    s3m: "audio/s3m",
    saveme: "application/octet-stream",
    sbk: "application/x-tbook",
    scm: "application/x-lotusscreencam",
    sdml: "text/plain",
    sdp: "application/x-sdp",
    sdr: "application/sounder",
    sea: "application/x-sea",
    set: "application/set",
    sgm: "text/x-sgml",
    sgml: "text/x-sgml",
    sh: "application/x-sh",
    shar: "application/x-shar",
    shtml: "text/x-server-parsed-html",
    sid: "audio/x-psid",
    sit: "application/x-sit",
    skd: "application/x-koan",
    skm: "application/x-koan",
    skp: "application/x-koan",
    skt: "application/x-koan",
    sl: "application/x-seelogo",
    smi: "application/smil",
    smil: "application/smil",
    snd: "audio/x-adpcm",
    sol: "application/solids",
    spc: "application/x-pkcs7-certificates",
    spl: "application/futuresplash",
    spr: "application/x-sprite",
    sprite: "application/x-sprite",
    src: "application/x-wais-source",
    ssi: "text/x-server-parsed-html",
    ssm: "application/streamingmedia",
    sst: "application/vnd.ms-pki.certstore",
    step: "application/step",
    stl: "application/vnd.ms-pki.stl",
    stp: "application/step",
    sv4cpio: "application/x-sv4cpio",
    sv4crc: "application/x-sv4crc",
    svf: "image/x-dwg",
    svr: "application/x-world",
    swf: "application/x-shockwave-flash",
    t: "application/x-troff",
    talk: "text/x-speech",
    tar: "application/x-tar",
    tbk: "application/toolbook",
    tcl: "application/x-tcl",
    tcsh: "text/x-script.tcsh",
    tex: "application/x-tex",
    texi: "application/x-texinfo",
    texinfo: "application/x-texinfo",
    text: "application/plain",
    tgz: "application/gnutar",
    tif: "image/x-tiff",
    tiff: "image/x-tiff",
    tr: "application/x-troff",
    tsi: "audio/tsp-audio",
    tsp: "application/dsptype",
    tsv: "text/tab-separated-values",
    turbot: "image/florian",
    txt: "text/plain",
    uil: "text/x-uil",
    uni: "text/uri-list",
    unis: "text/uri-list",
    unv: "application/i-deas",
    uri: "text/uri-list",
    uris: "text/uri-list",
    ustar: "application/x-ustar",
    uu: "application/octet-stream",
    uue: "text/x-uuencode",
    vcd: "application/x-cdlink",
    vcs: "text/x-vcalendar",
    vda: "application/vda",
    vdo: "video/vdo",
    vew: "application/groupwise",
    viv: "video/vivo",
    vivo: "video/vivo",
    vmd: "application/vocaltec-media-desc",
    vmf: "application/vocaltec-media-file",
    voc: "audio/x-voc",
    vos: "video/vosaic",
    vox: "audio/voxware",
    vqe: "audio/x-twinvq-plugin",
    vqf: "audio/x-twinvq",
    vql: "audio/x-twinvq-plugin",
    vrml: "application/x-vrml",
    vrt: "x-world/x-vrt",
    vsd: "application/x-visio",
    vst: "application/x-visio",
    vsw: "application/x-visio",
    w60: "application/wordperfect6.0",
    w61: "application/wordperfect6.1",
    w6w: "application/msword",
    wav: "audio/x-wav",
    wb1: "application/x-qpro",
    wbmp: "image/vnd.wap.wbmp",
    web: "application/vnd.xara",
    wiz: "application/msword",
    wk1: "application/x-123",
    wmf: "windows/metafile",
    wml: "text/vnd.wap.wml",
    wmlc: "application/vnd.wap.wmlc",
    wmls: "text/vnd.wap.wmlscript",
    wmlsc: "application/vnd.wap.wmlscriptc",
    word: "application/msword",
    wp: "application/wordperfect",
    wp5: "application/wordperfect",
    wp6: "application/wordperfect",
    wpd: "application/wordperfect",
    wq1: "application/x-lotus",
    wri: "application/x-wri",
    wrl: "application/x-world",
    wrz: "model/vrml",
    wsc: "text/scriplet",
    wsrc: "application/x-wais-source",
    wtk: "application/x-wintalk",
    xbm: "image/x-xbitmap",
    xdr: "video/x-amt-demorun",
    xgz: "xgl/drawing",
    xif: "image/vnd.xiff",
    xl: "application/excel",
    xla: "application/x-msexcel",
    xlb: "application/x-excel",
    xlc: "application/x-excel",
    xld: "application/x-excel",
    xlk: "application/x-excel",
    xll: "application/x-excel",
    xlm: "application/x-excel",
    xls: "application/excel",
    xlt: "application/excel",
    xlv: "application/x-excel",
    xlw: "application/vnd.ms-excel",
    xm: "audio/xm",
    xml: "application/xml",
    xmz: "xgl/movie",
    xpix: "application/x-vnd.ls-xpix",
    xpm: "image/x-xpixmap",
    "x-png": "image/png",
    xsr: "video/x-amt-showrun",
    xwd: "image/x-xwindowdump",
    xyz: "chemical/x-pdb",
    z: "application/x-compressed",
    zip: "multipart/x-zip",
    zoo: "application/octet-stream",
    zsh: "text/x-script.zsh",
  };
  function getMineTypeByHeader(Et, es = "text/html") {
    return isEmpty(Et)
      ? es
      : (Et["Content-Type"] || Et["content-type"] || es).split(";")[0].trim();
  }
  function getMineTypeByUrl(Et) {
    var es = "text/html";
    return isEmpty(Et) ? es : l$3(c$6(Et), es);
  }
  function c$6(Et) {
    if (isEmpty(Et)) return "";
    let es = "",
      ts = Et.lastIndexOf(".");
    if (ts != -1) {
      let is = Et.indexOf("?", ts);
      is == -1 && (is = Et.length), (es = Et.substring(ts + 1, is));
    }
    return es;
  }
  function l$3(Et, es) {
    return isEmpty(Et) || isEmpty((Et = e$5[Et])) ? es : Et;
  }
  function getRandom(Et) {
    return Et < 0
      ? NaN
      : Et <= 30
      ? 0 | (Math.random() * (1 << Et))
      : Et <= 53
      ? (0 | (Math.random() * 1073741824)) +
        (0 | (Math.random() * (1 << (Et - 30)))) * 1073741824
      : NaN;
  }
  function r$3(Et, es) {
    for (
      var ts = Et.toString(16), is = es - ts.length, ns = "0";
      0 < is;
      is >>>= 1, ns += ns
    )
      1 & is && (ts = ns + ts);
    return ts;
  }
  function uuid() {
    return (
      r$3(getRandom(32), 8) +
      "-" +
      r$3(getRandom(16), 4) +
      "-" +
      r$3(16384 | getRandom(12), 4) +
      "-" +
      r$3(32768 | getRandom(14), 4) +
      "-" +
      r$3(getRandom(48), 12)
    );
  }
  function uuidWithLength(Et) {
    return Et == 16
      ? r$3(getRandom(32), 8) + r$3(getRandom(32), 8)
      : Et == 32
      ? r$3(getRandom(32), 8) +
        r$3(getRandom(32), 8) +
        r$3(getRandom(32), 8) +
        r$3(getRandom(32), 8)
      : void 0;
  }
  function skyUuid() {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (Et) => {
      var es = (16 * Math.random()) | 0;
      return (Et === "x" ? es : (3 & es) | 8).toString(16);
    });
  }
  function buildViewID() {
    return (
      Date.now().toString(36) + Math.ceil(1e3 * Math.random()).toString(16)
    );
  }
  function enBase64(Et) {
    for (
      var es = [], ts = 0, is = (Et = new TextEncoder().encode(Et)).length;
      ts < is;
      ts += 4096
    )
      es.push(
        String.fromCharCode.bind(String).apply(null, Et.subarray(ts, ts + 4096))
      );
    return btoa(es.join(""));
  }
  function traceId(Et) {
    return 0 <= Et && Et <= 100 && t(Et)
      ? "00-" +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          "-" +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          "-01"
      : "00-" +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          "-" +
          r$3(getRandom(32), 8) +
          r$3(getRandom(32), 8) +
          "-00";
  }
  var $global = window || {};
  function isDefined(Et) {
    try {
      return Et != null;
    } catch (es) {
      return !1;
    }
  }
  function log(Et, es) {
    (es ||
      (isDefined(window.BonreeAgent) &&
        isDefined(window.BonreeAgent.isDebuge)) ||
      (isDefined(window.BonreeClient) &&
        isDefined(window.BonreeClient.isDebuge))) &&
      isDefined(window.console) &&
      ((window.console.$bonree = !0),
      console.log(Et),
      (window.console.$bonree = !1));
  }
  function extend(Et, es) {
    return (
      Et &&
        es &&
        forEachOwn(es, function (ts, is) {
          Et[is] = ts;
        }),
      Et
    );
  }
  function isString(Et) {
    return typeof Et == "string";
  }
  function isJSON(Et) {
    if (isString(Et))
      try {
        var es = JSON.parse(Et);
        return !(typeof es != "object" || !es);
      } catch (ts) {
        return !1;
      }
  }
  function NIL_FN() {}
  function hasOwnProperty(Et, es) {
    return Et && Object.prototype.hasOwnProperty.call(Et, es);
  }
  function isObject(Et) {
    return typeof Et == "object";
  }
  function overwrite(Et, es) {
    return (
      Et &&
        es &&
        forEachOwn(es, function (ts, is) {
          hasOwnProperty(Et, is) && (Et[is] = ts);
        }),
      Et
    );
  }
  function forEachOwn(Et, es, ts) {
    if (isDefined(Et)) {
      for (var is in Et)
        if (hasOwnProperty(Et, is)) {
          var ns = Et[is];
          try {
            if (es(ns, is) === !1) break;
          } catch (rs) {
            log("3333", rs);
          }
        }
      ts && ts();
    }
  }
  function isFunction(Et) {
    return typeof Et == "function";
  }
  function isArray(Et) {
    return isDefined(Et) && Et instanceof Array;
  }
  function forEach(Et, es, ts) {
    (isArray(Et) ? forEachArray : forEachOwn)(Et, es, ts);
  }
  function forEachArray(Et, es, ts) {
    if (isArray(Et)) {
      for (var is = 0, ns = Et.length; is < ns && es(Et[is], is) !== !1; is++);
      ts && ts();
    }
  }
  function bind(Et, es) {
    return function () {
      return Et.apply(es, arguments);
    };
  }
  function isEmpty(Et) {
    if (isDefined(Et)) {
      if (hasOwnProperty(Et, "length")) return !Et.length;
      if (hasOwnProperty(Et, "size")) return !Et.size;
      for (var es in Et) if (hasOwnProperty(Et, es)) return;
    }
    return 1;
  }
  function setCookie(Et, es, ts) {
    try {
      var is = Et + "=" + es;
      isDefined((ts = ts || {}).domain) && (is += ";domain=" + ts.domain),
        isDefined(ts.path) && (is += ";path=" + ts.path),
        isDefined(ts.expires) &&
          (typeof ts.expires == "string"
            ? (is += ";expires=" + ts.expires)
            : (is += ";expires=" + ts.expires.toUTCString())),
        (document.cookie = is),
        window.sessionStorage && window.sessionStorage.setItem(Et, es),
        window.localStorage && window.localStorage.setItem(Et, es);
    } catch (ns) {
      log("C107");
    }
  }
  function getLocaStore(Et) {
    let es = "";
    return (es = window.localStorage
      ? window.localStorage.getItem(Et) || ""
      : es);
  }
  function getCookie(Et) {
    try {
      var es = document.cookie.split(/;\s?/);
      if (document.cookie)
        for (var ts = 0, is = es.length; ts < is; ts++) {
          var ns = es[ts].split("="),
            rs = ns[0],
            ss = ns[1];
          if (rs === Et && isDefined(ss)) return ss;
        }
      return getSession(Et) || "";
    } catch (os) {
      return log("C108"), "";
    }
  }
  function getSession(Et) {
    let es = "";
    return (es =
      window.sessionStorage &&
      isDefined((es = window.sessionStorage.getItem(Et) || "")) &&
      es != ""
        ? es
        : getLocaStore(Et) || "");
  }
  function setLocalStore(Et, es) {
    window.localStorage && window.localStorage.setItem(Et, es);
  }
  function isReadable(Et) {
    return isDefined(Et) && !isEmpty(Et);
  }
  function dateNow() {
    return Date.now ? Date.now() : new Date().getTime();
  }
  var nowtime = (function () {
    var Et = dateNow();
    return function (es) {
      var ts;
      return isDefined($global.performance) &&
        isDefined($global.performance.now) &&
        isDefined($global.performance.timing)
        ? [
            1e3 * (ts = es === 0 ? 0 : Math.round($global.performance.now())),
            1e3 * (ts + $global.performance.timing.navigationStart),
          ]
        : [1e3 * ((ts = es === 0 ? Et : dateNow()) - Et), 1e3 * ts];
    };
  })();
  function now(Et) {
    return nowtime(Et)[1];
  }
  function tillNow(Et) {
    return nowtime(Et)[0];
  }
  function getTime() {
    var Et = nowtime();
    return { startTime: Et[0], timestamp: Et[1] };
  }
  function args(Et) {
    return isDefined(Et.length) ? Array.prototype.slice.call(Et) : Et;
  }
  function map(Et, es) {
    var ts = [];
    return (
      forEach(Et, function (is, ns) {
        (is = es && es(is, ns)), isDefined(is) && ts.push(is);
      }),
      ts
    );
  }
  var getFixedMetric = function (Et, es) {
      return (Et = Et[es]), isDefined(Et) && 0 < Et ? Math.round(Et) : 0;
    },
    getContentSize = function (Et) {
      return isDefined(Et)
        ? window.ArrayBuffer && Et instanceof ArrayBuffer
          ? Et.byteLength
          : window.Blob && Et instanceof Blob
          ? Et.size
          : Et.toJSON
          ? stringify(Et.toJSON()).length
          : Et.length || 0
        : 0;
    },
    getRequestParam = function (Et) {
      if (!isDefined(Et)) return "";
      var es = "";
      if (typeof Et == "string") es = Et;
      else if (window.FormData && Et instanceof FormData) {
        var ts = {};
        try {
          forEach(iterate(Et.entries()), function (ss) {
            var ns,
              rs = ss[0],
              ss = ss[1];
            window.File && ss instanceof File
              ? 0 < ss.size &&
                ((ns = ss.name ? " " + ss.name : ""), (ts[rs] = "[File]" + ns))
              : (ts[rs] = ss);
          });
        } catch (is) {
          (ts = {}), log("C145");
        }
        es = "[FormData] " + stringify(ts);
      } else {
        if (window.Blob && Et instanceof Blob) return "[Blob]";
        if (window.ArrayBuffer && Et instanceof ArrayBuffer)
          return "[ArrayBuffer]";
        if (Et.toJSON) es = stringify(Et.toJSON());
        else {
          if (!Et.toString) return "[unknown]";
          es = Et.toString();
        }
      }
      return withLength(es, 2e3);
    };
  function getIP(Et) {
    return Et
      ? ((Et = Et.split("?")[0]),
        /(\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\:([0-9]{1,5})/.test(
          Et
        )
          ? [
              `${RegExp.$1}.${RegExp.$2}.${RegExp.$3}.` + RegExp.$4,
              Number(RegExp.$5),
            ]
          : /\:([0-9]{1,5})/.test(Et)
          ? ["", Number(RegExp.$1)]
          : -1 < Et.indexOf("https")
          ? ["", 443]
          : ["", 80])
      : ["", ""];
  }
  function getUrl(Et = "") {
    return window.location.protocol !== "file:" || startWith(Et, "http")
      ? isDefined(Et) && Et.indexOf("http") === 0
        ? Et
        : /^\/{2}/.test(Et)
        ? (window && window.location.protocol + Et) || "http:" + Et
        : /^\?/.test(Et)
        ? (window && window.location.origin + window.location.pathname + Et) ||
          Et
        : /^\/{1}/.test(Et)
        ? (window && window.location.origin + Et) || Et
        : /^\.{1,}/.test(Et)
        ? (window &&
            window.location.origin + Et.replace(/^(\.{1,}\/){1,}/, "/")) ||
          Et
        : (isDefined(Et) && window && window.location.origin + "/" + Et) || Et
      : Et || (window && window.location.href + Et);
  }
  var stringify = isDefined($global.JSON)
    ? $global.JSON.stringify
    : function (Et) {
        var es,
          ts,
          is = typeof Et;
        return is == "undefined"
          ? '"undefined"'
          : is == "boolean"
          ? Et
            ? "true"
            : "false"
          : is == "number"
          ? Et.toString()
          : is == "string"
          ? '"' +
            (es = Et.replace(/(["\\])/g, "\\$1")
              .replace(/\r/g, "\\r")
              .replace(/\n/g, "\\n")) +
            '"'
          : is == "object"
          ? Et
            ? Et instanceof Array
              ? ((es = "["),
                forEach(Et, function (ns, rs) {
                  0 < rs && (es += ","), (es += stringify(ns));
                }),
                (es += "]"))
              : ((es = "{"),
                (ts = 0),
                forEachOwn(Et, function (ns, rs) {
                  0 < ts && (es += ","),
                    (es += stringify(rs) + ":" + stringify(ns)),
                    ts++;
                }),
                (es += "}"))
            : "null"
          : "[none]";
      };
  function addListener(Et, es, ts, is) {
    Et && Et.addEventListener && Et.addEventListener(es, ts, is);
  }
  function on$1(Et, es, ts, is) {
    if (Et && Et.addEventListener) return Et.addEventListener(es, ts, is);
    Et && Et.attachEvent && Et.attachEvent("on" + es, ts);
  }
  function delay(Et, es) {
    return (Et.$$original = !0), setTimeout(Et, isDefined(es) ? es : 0);
  }
  function last(Et) {
    if (isArray(Et) && !isEmpty(Et)) return Et[Et.length - 1];
  }
  var unicode = function (Et) {
      for (var es = "", ts = 0; ts < Et.length; ts++)
        es += "\\u" + ("0000" + Et.charCodeAt(ts).toString(16)).slice(-4);
      return es;
    },
    hack = function (Et, es, ts, is) {
      var ns;
      return (Et = isDefined(Et) ? Et : function () {}).$$original
        ? Et
        : (((ns = function () {
            var rs,
              ss = args(arguments);
            try {
              return isDefined(es) && es.apply(this, ss), Et.apply(this, ss);
            } catch (os) {
              isDefined(is)
                ? is.apply(this, ss.concat(os))
                : ((rs = os),
                  isDefined(window.console) &&
                    ((window.console.$bonree = !0),
                    (isDefined(window.console.error)
                      ? window.console.error(rs)
                      : NIL_FN)(rs),
                    (window.console.$bonree = !1)));
            } finally {
              if (
                (isDefined(ts) && ts.apply(this, ss),
                ss &&
                  ss[0] &&
                  ss[0] instanceof Error &&
                  Et &&
                  Et.name !== "error")
              )
                throw ss[0];
            }
          }).$$original = Et),
          ns);
    },
    xpath = function (Et) {
      if (!Et) return "";
      var es = Et.id;
      if (es) return '//*[@id="' + es + '"]';
      for (var ts = [], is = Et; is; ) {
        var ns =
          (is.tagName && is.tagName.toLowerCase && is.tagName.toLowerCase()) ||
          null;
        if (!ns) break;
        var rs = (is.parentElement && is.parentElement) || null;
        if (!isDefined(rs)) {
          ts.unshift(ns);
          break;
        }
        for (
          var ss = rs.children, os = ss.length, ds = 0, as = 0, cs = 0;
          cs < os;
          cs++
        ) {
          var fs = ss[cs];
          if (fs.tagName.toLowerCase() === ns && (as++, 0 < ds)) break;
          fs === is && (ds = as);
        }
        ts.unshift(as === 1 ? ns : ns + "[" + ds + "]"), (is = rs);
      }
      return "/" + ts.join("/");
    },
    prop = function (Et, es) {
      return isDefined(Et) && hasOwnProperty(Et, es) ? Et[es] : null;
    };
  function includes(Et, es) {
    for (let ts = 0, is = Et.length; ts < is; ++ts)
      if (Et[ts] === es) return !0;
    return !1;
  }
  function isObj(Et) {
    return typeof Et == "object";
  }
  function getUserAgent() {
    try {
      var Et = {
          Chrome: /Chrome/,
          IE: /MSIE/,
          Firefox: /Firefox/,
          Opera: /Presto/,
          Safari: /Version\/([\d.]+).*Safari/,
          360: /360SE/,
          QQBrowswe: /QQ/,
        },
        es = {
          iPhone: /iPhone/,
          iPad: /iPad/,
          Android: /Android/,
          Windows: /Windows/,
          Mac: /Macintosh/,
        },
        ts = navigator && navigator.userAgent;
      if (!ts) return null;
      var is,
        ns,
        rs = {
          browserName: "",
          browserVersion: "",
          osName: "",
          osVersion: "",
          deviceName: "",
        };
      for (is in Et)
        Et[is].test(ts) &&
          ((rs.browserName = is),
          is === "Chrome"
            ? (rs.browserVersion = ts.split("Chrome/")[1].split(" ")[0])
            : is === "IE"
            ? (rs.browserVersion = ts.split("MSIE ")[1].split(" ")[1])
            : is === "Firefox"
            ? (rs.browserVersion = ts.split("Firefox/")[1])
            : is === "Opera"
            ? (rs.browserVersion = ts.split("Version/")[1])
            : is === "Safari"
            ? (rs.browserVersion = ts.split("Version/")[1].split(" ")[0])
            : is === "360"
            ? (rs.browserVersion = "")
            : is === "QQBrowswe" &&
              (rs.browserVersion = ts.split("Version/")[1].split(" ")[0]));
      for (ns in es)
        es[ns].test(ts) &&
          ((rs.osName = ns),
          ns === "Windows"
            ? (rs.osVersion = ts.split("Windows NT ")[1].split(";")[0])
            : ns === "Mac"
            ? (rs.osVersion = ts.split("Mac OS X ")[1].split(")")[0])
            : ns === "iPhone"
            ? (rs.osVersion = ts.split("iPhone OS ")[1].split(" ")[0])
            : ns === "iPad"
            ? (rs.osVersion = ts.split("iPad; CPU OS ")[1].split(" ")[0])
            : ns === "Android" &&
              ((rs.osVersion = ts.split("Android ")[1].split(";")[0]),
              (rs.deviceName = ts
                .split("(Linux; Android ")[1]
                .split("; ")[1]
                .split(" Build")[0])));
      return rs;
    } catch (ss) {
      log("C123");
    }
  }
  function getElementForNum(Et, es) {
    var ts;
    return isObj(Et)
      ? ((ts = {}),
        Object.keys(Et).map((is, ns) => {
          ns <= es && (ts[is] = Et[is]);
        }),
        ts)
      : {};
  }
  function iterate(Et) {
    var es = [];
    if (isDefined(Et) && isDefined(Et.next))
      for (var ts = Et.next(); !ts.done; ) es.push(ts.value), (ts = Et.next());
    return es;
  }
  function readBytesFromStream(Et, es, ts) {
    if (Et.getReader) {
      let ss = function () {
        var os;
        is.cancel().catch(noop);
        {
          let ds;
          if (ns.length === 1) ds = ns[0];
          else {
            ds = new Uint8Array(rs);
            let as = 0;
            ns.forEach((cs) => {
              ds.set(cs, as), (as += cs.length);
            });
          }
          return (
            (os = ds.slice(0, es.bytesLimit)),
            ds.length,
            es.bytesLimit,
            os.length
          );
        }
      };
      const is = Et.getReader(),
        ns = [];
      let rs = 0;
      (function os() {
        is.read().then((ds) => {
          var as;
          ds.done
            ? ((as = ss()), ts(as))
            : (ns.push(ds.value),
              (rs += ds.value.length) > es.bytesLimit
                ? ((as = ss()), ts(as))
                : os());
        });
      })();
    }
  }
  function noop() {}
  function tryToClone(Et) {
    try {
      return Et.clone();
    } catch (es) {}
  }
  function set_64_keys(data, emit) {
    var reData = {},
      keys;
    if (isDefined(data)) {
      if (typeof data == "string" && data !== "") {
        if (((data = eval("(" + data + ")")), !isJSON(data))) return data;
        data = JSON.parse(data);
      }
      return typeof data != "object"
        ? data
        : ((keys = Object.keys(data)),
          keys.length > emit
            ? ((keys = keys.slice(0, emit)),
              keys.forEach(function (Et) {
                reData[Et] = data[Et];
              }),
              reData)
            : data);
    }
    return reData;
  }
  function filter(Et, es) {
    var ts = [];
    return (
      forEach(Et, function (is, ns) {
        es && es(is, ns) === !0 && ts.push(is);
      }),
      ts
    );
  }
  function setDeviceForLog(Et) {
    window.bonreeRUM && Et && (window.bonreeRUM.fingerId = Et);
  }
  function size(Et) {
    if (Et) {
      if (typeof Et == "string") return strSize(Et);
      if (Et instanceof ArrayBuffer) return Et.byteLength;
      if (isObject(Et)) {
        let es = "";
        try {
          es = JSON.stringify(Et);
        } catch (ts) {}
        return strSize(es);
      }
    }
    return 0;
  }
  function strSize(Et) {
    let es = 0;
    for (let is = 0, ns = Et.length; is < ns; is++) {
      var ts = Et.charCodeAt(is);
      es += ts <= 127 ? 1 : ts <= 2047 ? 2 : ts <= 65535 ? 3 : 4;
    }
    return es;
  }
  function trim(Et) {
    return Et
      ? String.prototype.trim
        ? String.prototype.trim.call(Et)
        : Et.toString().replace(/(^\s+)|(\s+$)/g, "")
      : "";
  }
  function startWith(Et, es) {
    return Et && Et.indexOf && Et.indexOf(es) === 0;
  }
  function endWith(Et, es) {
    return (
      !!areUrlsEqual(Et, es) ||
      (!!(Et && es && Et.length >= es.length) &&
        (Et.slice(-1) === "/" && (es += "/"),
        Et.substring(Et.length - es.length) === es))
    );
  }
  function areUrlsEqual(Et, es) {
    try {
      var ts = new URL(Et),
        is = new URL(es);
      return (
        ts.protocol === is.protocol &&
        ts.host === is.host &&
        ts.pathname === is.pathname &&
        ts.search === is.search &&
        ts.hash === is.hash
      );
    } catch (ns) {}
  }
  function withLength(Et, es) {
    try {
      return Et ? (Et.length <= es ? Et : Et.substr(0, es - 3) + "...") : "";
    } catch (ts) {
      return "The data cannot be parsed normally, please handle it manually";
    }
  }
  function toUpper(Et, es) {
    return (
      isDefined(es) || (es = ""), Et && Et.toUpperCase ? Et.toUpperCase() : es
    );
  }
  function toLower(Et, es) {
    return (
      isDefined(es) || (es = ""), Et && Et.toLowerCase ? Et.toLowerCase() : es
    );
  }
  var stringify = isDefined(window.JSON)
    ? window.JSON.stringify
    : function (Et) {
        var es,
          ts,
          is = typeof Et;
        return is == "undefined"
          ? '"undefined"'
          : is == "boolean"
          ? Et
            ? "true"
            : "false"
          : is == "number"
          ? Et.toString()
          : is == "string"
          ? '"' +
            (es = Et.replace(/(["\\])/g, "\\$1")
              .replace(/\r/g, "\\r")
              .replace(/\n/g, "\\n")) +
            '"'
          : is == "object"
          ? Et
            ? Et instanceof Array
              ? ((es = "["),
                forEach(Et, function (ns, rs) {
                  0 < rs && (es += ","), (es += stringify(ns));
                }),
                (es += "]"))
              : ((es = "{"),
                (ts = 0),
                forEachOwn(Et, function (ns, rs) {
                  0 < ts && (es += ","),
                    (es += stringify(rs) + ":" + stringify(ns)),
                    ts++;
                }),
                (es += "}"))
            : "null"
          : "[none]";
      };
  function toString(Et) {
    return typeof Et == "string" ? Et : JSON.stringify(Et);
  }
  function set_length(Et, es) {
    return Et && (Et.length > es ? Et.slice(0, es) : Et);
  }
  function getDataSize(Et, es) {
    return (
      typeof Et != "string" && (Et = JSON.stringify(Et)),
      (Et = new Blob([Et]).size / 1048576),
      isDefined(es) ? Et < es : Et
    );
  }
  function isNumber(Et) {
    return typeof Et == "number" && !isNaN(Et);
  }
  function isRightTimestamp(Et) {
    return isNumber(Et) && isFinite(Et) && 0 <= Et;
  }
  function i$3(Et, es) {
    return (Et = JSON.parse(Et)), (Et.k = es), Et;
  }
  function checkMoudle(Et) {
    return (
      isDefined(E$6.secondSett) &&
      isDefined(E$6.secondSett.mn) &&
      E$6.secondSett.mn.indexOf(Et) !== -1
    );
  }
  const v$b = {
    addAtt: function (Et) {
      try {
        var es = E$6.secondSett;
        if (!getDataSize(Et, 5)) return !1;
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKAddEventAttributes.postMessage(
              stringify(Et)
            )
          : B$6(es.osType) ||
            window.bonreePrivateInterface.addEventAttribute(stringify(Et));
      } catch (ts) {}
    },
    delAtt: function (Et) {
      try {
        var es = E$6.secondSett;
        if (!getDataSize(Et, 5)) return !1;
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKRemoveEventAttributes.postMessage(
              stringify(Et)
            )
          : B$6(es.osType) ||
            window.bonreePrivateInterface.removeEventAttribute(stringify(Et));
      } catch (ts) {}
    },
    delAttAll: function () {
      try {
        var Et = E$6.secondSett;
        U$9(Et.osType)
          ? window.webkit.messageHandlers.brsWKRemoveAllEventAttributes.postMessage(
              ""
            )
          : B$6(Et.osType) ||
            window.bonreePrivateInterface.removeAllEventAttributes();
      } catch (es) {}
    },
    setUserProperty: function (Et) {
      try {
        var es = E$6.secondSett;
        if (!getDataSize(Et, 5)) return !1;
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKUserChangeEvent.postMessage(Et)
          : B$6(es.osType) ||
            window.bonreePrivateInterface.webViewEventBus(
              stringify({ userchange: [i$3(Et, "userchange")] }),
              es.webviewID
            );
      } catch (ts) {}
    },
    shadeArea: function (Et, es) {
      try {
        var ts = { sensitiveInfos: { masks: Et } };
        if (!getDataSize(ts, 5)) return !1;
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKSensitiveInfos.postMessage(
              stringify(ts)
            )
          : B$6(es.osType) ||
            window.bonreePrivateInterface.webViewEventBus(
              stringify(ts),
              es.webviewID
            );
      } catch (is) {}
    },
    log: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKLog.postMessage(Et)
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(stringify({ log: Et }))
          : window.bonreePrivateInterface.log(Et);
      } catch (ts) {}
    },
    webviewPerformanceTimingEvent: function (Et, es, ts) {
      if (!getDataSize(Et, 5)) return !1;
      if (checkMoudle("h5")) {
        this.log("webviewPerformanceTimingEvent=>" + Et, es);
        try {
          U$9(es.osType)
            ? window.webkit.messageHandlers.brsWKWebviewPerformanceTimingEvent.postMessage(
                Et
              )
            : B$6(es.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ h5: [i$3(Et, "h5")], imd: ts })
              )
            : window.bonreePrivateInterface.webViewEventBus(
                stringify({ h5: [i$3(Et, "h5")], imd: ts }),
                es.webviewID
              );
        } catch (is) {}
      }
    },
    webviewJSErrorEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      if (checkMoudle("jserror")) {
        this.log("webviewJSErrorEvent=>" + Et, es);
        try {
          U$9(es.osType)
            ? window.webkit.messageHandlers.brsWKWebviewJSErrorEvent.postMessage(
                Et
              )
            : B$6(es.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ jserror: [i$3(Et, "jserror")] })
              )
            : window.bonreePrivateInterface.webViewEventBus(
                stringify({ jserror: [i$3(Et, "jserror")] }),
                es.webviewID
              );
        } catch (ts) {}
      }
    },
    NetworkEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      if (checkMoudle("network")) {
        this.log("NetworkEvent=>" + Et);
        try {
          U$9(es.osType)
            ? window.webkit.messageHandlers.brsWKAjaxPerformanceTimingEvent.postMessage(
                Et
              )
            : B$6(es.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ network: [i$3(Et, "network")] })
              )
            : window.bonreePrivateInterface.webViewEventBus(
                stringify({ network: [i$3(Et, "network")], imd: 2 }),
                es.webviewID
              );
        } catch (ts) {}
      }
    },
    webviewActionEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      if (checkMoudle("action")) {
        this.log("webviewActionEvent=>" + Et, es);
        var ts = JSON.parse(Et);
        try {
          U$9(es.osType)
            ? (isDefined(ts.v.ice) ? (ts.v.isa = !0) : (ts.v.isa = !1),
              window.webkit.messageHandlers.brsWKWebviewActionEvent.postMessage(
                stringify(ts)
              ))
            : B$6(es.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ action: [i$3(Et, "action")] })
              )
            : window.bonreePrivateInterface.webViewEventBus(
                stringify({ action: [i$3(Et, "action")] }),
                es.webviewID
              );
        } catch (is) {}
      }
    },
    webviewPageEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("webviewPageEvent=>" + Et);
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKWebviewPageEvent.postMessage(Et)
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(
              stringify({ view: [i$3(Et, "view")] })
            )
          : window.bonreePrivateInterface.webViewEventBus(
              stringify({ view: [i$3(Et, "view")] }),
              es.webviewID
            );
      } catch (ts) {}
    },
    routeChangeData: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      if (checkMoudle("routechange")) {
        this.log("routeChangeData=>" + Et, es);
        try {
          U$9(es.osType)
            ? window.webkit.messageHandlers.brsWKRouteChangeEvent.postMessage(
                Et
              )
            : B$6(es.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ routechange: [i$3(Et, "routechange")] })
              )
            : window.bonreePrivateInterface.webViewEventBus(
                stringify({ routechange: [i$3(Et, "routechange")] }),
                es.webviewID
              );
        } catch (ts) {}
      }
    },
    consoleEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      if (checkMoudle("console")) {
        this.log("consoleData=>", Et, es);
        try {
          U$9(es.osType)
            ? window.webkit.messageHandlers.brsWKConsoleEvent.postMessage(Et)
            : B$6(es.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ console: [i$3(Et, "console")] })
              )
            : window.bonreePrivateInterface.webViewEventBus(
                stringify({ console: [i$3(Et, "console")] }),
                es.webviewID
              );
        } catch (ts) {}
      }
    },
    spanEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      if (checkMoudle("span")) {
        this.log("spanData=>" + Et, es);
        try {
          U$9(es.osType)
            ? window.webkit.messageHandlers.brsWKSpanEvent.postMessage(Et)
            : B$6(es.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ span: [i$3(Et, "span")] })
              )
            : window.bonreePrivateInterface.webViewEventBus(
                stringify({ span: [i$3(Et, "span")] }),
                es.webviewID
              );
        } catch (ts) {}
      }
    },
    customLogEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("setCustomLog=>" + Et);
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKSetCustomLog.postMessage(Et)
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(
              stringify({ customlog: [i$3(Et, "customlog")] })
            )
          : window.bonreePrivateInterface.webViewEventBus(
              stringify({ customlog: [i$3(Et, "customlog")] }),
              es.webviewID
            );
      } catch (ts) {}
    },
    customMetricEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("setCustomMetric=>" + Et);
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKSetCustomMetric.postMessage(Et)
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(
              stringify({ custommetric: [i$3(Et, "custommetric")] })
            )
          : window.bonreePrivateInterface.webViewEventBus(
              stringify({ custommetric: [i$3(Et, "custommetric")] }),
              es.webviewID
            );
      } catch (ts) {}
    },
    customExceptionEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("setCustomException=>" + Et);
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKSetCustomException.postMessage(
              Et
            )
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(
              stringify({ crash: [i$3(Et, "crash")] })
            )
          : window.bonreePrivateInterface.webViewEventBus(
              stringify({ crash: [i$3(Et, "crash")] }),
              es.webviewID
            );
      } catch (ts) {}
    },
    customSpeedTestEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("speedTest=>" + Et);
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKsetCustomSpeedTest.postMessage(
              Et
            )
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(
              stringify({ speedtest: [i$3(Et, "speedtest")] })
            )
          : window.bonreePrivateInterface.webViewEventBus(
              stringify({ speedtest: [i$3(Et, "speedtest")] }),
              es.webviewID
            );
      } catch (ts) {}
    },
    customEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("setCustomEvent=>" + Et);
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKsetCustomEvent.postMessage(Et)
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(
              stringify({ customevent: [i$3(Et, "customevent")] })
            )
          : window.bonreePrivateInterface.webViewEventBus(
              stringify({ customevent: [i$3(Et, "customevent")] }),
              es.webviewID
            );
      } catch (ts) {}
    },
    MainDocumentNetworkEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("MainDocumentNetworkEvent=>" + Et);
      try {
        var ts;
        U$9(es.osType)
          ? (((ts = JSON.parse(Et)).imd = 1),
            window.webkit.messageHandlers.brsWKMainDocumentNetworkEvent.postMessage(
              stringify(ts)
            ))
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(
              stringify({ network: [i$3(Et, "network")], imd: 1 })
            )
          : window.bonreePrivateInterface.webViewEventBus(
              stringify({ network: [i$3(Et, "network")], imd: 1 }),
              es.webviewID
            );
      } catch (is) {}
    },
    ResourceNetworkEvent: function (Et, es) {
      if (!getDataSize(Et, 5)) return !1;
      this.log("ResourceNetworkEvent=>" + Et);
      try {
        U$9(es.osType)
          ? window.webkit.messageHandlers.brsWKResourceNetworkEvent.postMessage(
              Et
            )
          : B$6(es.osType)
          ? window.bonreePrivateInterface.call(Et)
          : window.bonreePrivateInterface.webViewEventBus(Et, es.webviewID);
      } catch (ts) {}
    },
  };
  function a$5(Et, es) {
    let ts = null;
    return (ts =
      (ts =
        Et.Zone && typeof Et.Zone.__symbol__ == "function"
          ? Et[Et.Zone.__symbol__(es)]
          : ts) || Et[es]);
  }
  function getMutationObserver() {
    let Et = null;
    var es;
    return (
      window.Zone && (Et = a$5(window, "MutationObserver")),
      window.MutationObserver &&
        Et === window.MutationObserver &&
        ((es = a$5(
          new window.MutationObserver(function () {}),
          "originalInstance"
        )),
        (Et = es && es.constructor)),
      (Et = Et || window.MutationObserver)
    );
  }
  class PageActivityManager {
    constructor(es) {
      (this.mutationRecord = []),
        (this.performanceRecord = []),
        (this.record = !1),
        (this.unlocked = !0),
        window.PerformanceObserver &&
          (this.PerformanceObserver = new PerformanceObserver((ns) => {
            var ns = ns.getEntries(),
              rs = isDefined(window.$bonreeReplayUrl)
                ? window.$bonreeReplayUrl
                : null;
            ns.some((ss) => ss.entryType === "resource") &&
              this.record &&
              (this.performanceRecord.push(now()), isDefined(es)) &&
              es(
                ns.filter(function (ss) {
                  return (
                    ss.entryType === "resource" &&
                    !d$b(
                      [E$6.sett.uploadAddrHttp, E$6.sett.uploadAddrHttps, rs],
                      ss.name.split("?")[0]
                    )
                  );
                })
              );
          }));
      var ts = getMutationObserver();
      isDefined(ts) &&
        (this.mutationObserver = new ts((is) => {
          0 < this.mutationRecord.lengths && this.stopPageActivityObserver(1),
            this.record && this.mutationRecord.push(now());
        }));
    }
    startPageActivityObserver() {
      window.PerformanceObserver &&
        this.PerformanceObserver.observe({ entryTypes: ["resource"] }),
        this.mutationObserver.observe(window.document, {
          attributes: !0,
          attributeOldValue: !0,
          characterData: !0,
          characterDataOldValue: !0,
          childList: !0,
          subtree: !0,
        });
    }
    turnOnRecord() {
      this.record = !0;
    }
    turnOffRecord() {
      (this.record = !1),
        (this.mutationRecord = []),
        (this.performanceRecord = []);
    }
    stopPageActivityObserver(es) {
      (isDefined(es) ||
        (window.PerformanceObserver && this.PerformanceObserver.disconnect(),
        isDefined(this.mutationObserver))) &&
        this.mutationObserver.disconnect();
    }
  }
  function d$b(Et, es) {
    return -1 < Et.indexOf(es);
  }
  function checkRecord(Et, es) {
    if (!(Et.length === 0 || Et[Et.length - 1] < es)) {
      for (var ts = 0; ts <= Et.length; ts++)
        if (0 <= (Et[ts] - es) / 1e3) return !0;
    }
    return !1;
  }
  var T$8 = new PageActivityManager();
  let A$8 = class {
      constructor() {
        (this.isOpen = !1),
          (this.isScroll = !1),
          (this.elements = ["input", "textarea", "select"]),
          (this.stl = null),
          (this.isFirst = !0),
          (this.lastTime = 0),
          (this.observer = null);
      }
      isStart(Et) {
        this.isOpen = Et;
        let es = this,
          ts = (ns) => {
            window.removeEventListener("scroll", this.checkElement.bind(es)),
              isDefined(ns) && (ns.disconnect(), (this.observer = null));
          };
        var is = getMutationObserver();
        Et
          ? (ts.call(this, this.observer),
            setTimeout(() => {
              (es.observer = new is((ns) => {
                es.checkElement.bind(es);
              })),
                es.observer.observe(window.document, {
                  attributes: !0,
                  attributeOldValue: !0,
                  characterData: !0,
                  characterDataOldValue: !0,
                  childList: !0,
                  subtree: !0,
                });
            }, 200),
            setTimeout(() => {
              es.checkElement.call(es);
            }, 500),
            this.listenScroll())
          : ts.call(this, this.observer);
      }
      listenScroll() {
        let Et = null,
          es = this,
          ts = () => {
            (this.isScroll = !1), this.checkElement.call(es);
          };
        document &&
          document.body &&
          document.body.addEventListener("scroll", function () {
            clearTimeout(Et),
              (es.isScroll = !0),
              (Et = setTimeout(ts.bind(es), 300));
          }),
          window &&
            window.addEventListener &&
            window.addEventListener("scroll", function () {
              clearTimeout(Et),
                (es.isScroll = !0),
                (Et = setTimeout(ts.bind(es), 300));
            });
      }
      checkElement() {
        let Et = [],
          es = () => {
            if (!this.isScroll) {
              var is = document.querySelectorAll("input"),
                ns = document.querySelectorAll("textarea"),
                rs = document.querySelectorAll("select"),
                ss = Array.prototype.concat(
                  Array.from(is),
                  Array.from(ns),
                  Array.from(rs)
                ),
                os =
                  window.innerWidth ||
                  document.documentElement.clientWidth ||
                  document.body.clientWidth,
                ds =
                  window.innerHeight ||
                  document.documentElement.clientHeight ||
                  document.body.clientHeight;
              for (let cs = 0, fs = ss.length - 1; cs <= fs; cs++) {
                var as = this.calculatedCoordinates(ss[cs], os, ds);
                isDefined(as) && Et.push(as);
              }
              v$b.shadeArea(Et, E$6.secondSett);
            }
          };
        this.isFirst && (es.call(this), (this.isFirst = !1));
        var ts = Date.now();
        return (
          50 < ts - this.lastTime && es.call(this),
          (this.lastTime = ts),
          { sensitiveInfos: { masks: Et } }
        );
      }
      calculatedCoordinates(Et, es, ts) {
        if (isDefined(Et) && isDefined(es) && isDefined(ts))
          try {
            var is = Et.getClientRects()[0];
            if (
              isDefined(is) &&
              isDefined(is.x) &&
              isDefined(is.y) &&
              isDefined(is.width) &&
              isDefined(is.height)
            ) {
              let ns = is.x,
                rs = is.y,
                ss = is.width,
                os = is.height,
                ds = is.bottom,
                as = is.right;
              return ns > es || rs > ts || ds < 0 || as < 0
                ? null
                : (ns <= 0 && rs <= 0
                    ? ((ss += ns),
                      (ns = 0),
                      (os += rs),
                      (rs = 0),
                      ss > es && (ss = es),
                      os > ts && (os = ts))
                    : ns <= 0 && 0 < rs
                    ? ((ss += ns),
                      (ns = 0),
                      ss > es && (ss = es),
                      os + rs > ts && (os = ts - rs))
                    : 0 < ns &&
                      rs <= 0 &&
                      ((os += rs),
                      (rs = 0),
                      ss + ns > es && (ss = es - ns),
                      os > ts) &&
                      (os = ts),
                  { x: ns, y: rs, w: ss, h: os });
            }
          } catch (ns) {
            log("calculatedCoordinates" + ns);
          }
        return null;
      }
    },
    S$6 = new A$8();
  const GC = {
    BROWSER: 0,
    ANDROID: 1,
    IOS: 2,
    WINDOWS: 3,
    HOS: 4,
    ZERO: 0,
    THOUSAND: 1e3,
    TYPEARR: ["", "android", "ios", "pc"],
    FLUSH_DATA: "data/flush",
    PAGE_READY: "page/ready",
    PAGE_LOAD: "page/load",
    PAGE_DATA: "data/page",
    RESOURCE_DATA: "data/resource",
    CONSOLE_DATA: "data/console",
    USERCHANGE: "userchange",
    TITLE: "title",
    DURATION: "duration",
    NAVIGATION_START: "navigationStart",
    FETCH_START: "fetchStart",
    START_TIME: "startTime",
    UNLOAD_EVENT_START: "unloadEventStart",
    UNLOAD_EVENT_END: "unloadEventEnd",
    REDIRECT_START: "redirectStart",
    REDIRECT_END: "redirectEnd",
    DOMAIN_LOOKUP_START: "domainLookupStart",
    DOMAIN_LOOKUP_END: "domainLookupEnd",
    CONNECT_START: "connectStart",
    CONNECT_END: "connectEnd",
    SECURE_CONNECTION_START: "secureConnectionStart",
    REQUEST_START: "requestStart",
    RESPONSE_START: "responseStart",
    RESPONSE_END: "responseEnd",
    RESPONSE_STATUS: "responseStatus",
    DOM_LOADING: "domLoading",
    DOM_INTERACTIVE: "domInteractive",
    DOM_CONTENT_LOADED_EVENT_START: "domContentLoadedEventStart",
    DOM_CONTENT_LOADED_EVENT_END: "domContentLoadedEventEnd",
    DOM_COMPLETE: "domComplete",
    LOAD_EVENT_START: "loadEventStart",
    LOAD_EVENT_END: "loadEventEnd",
    FIRST_PAINT: "fp",
    FIRST_DAY: "brs_ifd",
    FIRST_CONTENTFUL_PAINT: "fcp",
    LARGEST_CONTENTFUL_PAINT: "lcp",
    REDIRECT_COUNT: "redirectCount",
    WORKER_START: "workerStart",
    NEXT_HOP_PROTOCOL: "nextHopProtocol",
    TRANSFER_SIZE: "transferSize",
    ENCODED_BODY_SIZE: "encodedBodySize",
    DECODED_BODY_SIZE: "decodedBodySize",
    UPLOAD_BODY_SIZE: "uploadBodySize",
    REQUEST_HEADER: "requestHeader",
    RESPONSE_HEADER: "responseHeader",
    CALLBACK_START: "callbackStart",
    CALLBACK_END: "callbackEnd",
    CALLBACK_TIME: "callbackTime",
    USER_TIME: "userTime",
    TIMESTAMP: "timestamp",
    INITIATOR_TYPE: "initiatorType",
    XML_HTTP_REQUEST: "xmlhttprequest",
    FETCH: "fetch",
    TAG_NAME: "tagName",
    TYPE: "type",
    MODEL: "model",
    EMBED: "embed",
    IS_MAIN_DOCUMENT: "isMainDocument",
    PAGE_ID: "pageViewId",
    PAGE_URL: "pageUrl",
    PAGE_TITLE: "pageTitle",
    MESSAGE: "message",
    NAME: "name",
    ERROR_LINE: "line",
    ERROR_FILE: "file",
    ERROR_COLUMN: "column",
    ERROR_STACK: "stack",
    JS_ERROR: "jsError",
    IS_SLOW: "isSlow",
    IS_CUSTOM: "isCustome",
    URL: "url",
    NET_METHOD: "method",
    NET_PORT: "port",
    NET_IP: "ip",
    NET_DT: "domainLookupTime",
    NET_CT: "connectTime",
    NET_SSLT: "ssl",
    NET_DTI: "downloadTime",
    NET_CNA: "cname",
    NET_PT: "protocalType",
    NET_TID: "guid",
    NET_XBR: "xBrResponse",
    NET_TRACE: "traceResponse",
    NET_TPAR: "tpar",
    NET_EOP: "errorOccurrentProcess",
    NET_EC: "code",
    NET_TYPE: "requestType",
    NET_RET: "resourceType",
    CUSTOM_IC: "customIc",
    NET_CBBQ: "requestBodyByKey",
    REQUEST_BODY: "requestBody",
    NET_CBHQ: "requestHeaderByKey",
    NET_CBQ: "reqUrlDta",
    REQUEST_HEADER_ALL: "requestHeaderAll",
    E_TYPE: "eType",
    UA: "userAgent",
    SOURCE_OF_ACTION: "sourceOfAction",
    FRAME_TYPE: "frameType",
    STAY_TIME: "stayTime",
    CORRELATION_ID: "correlationId",
    IS_EXIT: "isExit",
    PAGE_CREATE_TIME: "pageCreateTime",
    REFERRER: "referrer",
    STATUS: "status",
    STATUS_TEXT: "statusText",
    ALIAS: "alias",
    PATH: "path",
    ROOT: "root",
    FULL_URL: "fullUrl",
    FRAME_WORK: "framework",
    CLIENT_TYPE: "clientType",
    VALUE: "value",
    FULL_RESOURCE_LOAD_TIME: "fullResourceLoadTime",
    PAGE_INVISIBLE: "page/invisible",
    PAGE_VISIBLE: "page/visible",
    RESOURCE_DUMP: "resource/dump",
    ERROR_DATA: "data/error",
    REQUEST_INIT: "request/init",
    REQUEST_DATA: "data/request",
    ROUTE_DATA: "data/route",
    ACTION_DATA: "data/event",
    TRACE_ACTION_DATA: "data/traceAction",
    SESSION_CHANGE: "session/change",
    USER_SET: "user/set",
    PARAM: "param",
    SPAN_DATA: "data/span",
    FULLY_COLLECT: 1e3,
    NET: "network",
    VIEW: "view",
    ERROR: "jserror",
    ACTION: "action",
    ROUTE: "routechange",
    WEBVIEWDATA: "h5",
    PAGE: "page",
    RESOURCE: "resource",
    CUSTOM_EVENT: "customevent",
    CUSTOM_METRIC: "custommetric",
    CUSTOM_LOG: "customlog",
    CRASH: "crash",
    SPEED_TEST: "speedtest",
    CONSOLE: "console",
    SPAN: "span",
    GUID_KEY: "br-resp-key",
    X_BR_RESPONSE: "x-br-response",
    TRACE_RESPONSE: "traceresponse",
    BREAK_LINE: `\r
`,
    LIFESTYLE_XHR_START: "XMLHttpRequest_Start",
    LIFESTYLE_REQUEST_END: "Request_Completed",
    LIFESTYLE_FETCH_START: "FETCH_Satrt",
    CUSTOM_ACTION_END: "customActionEnd",
    INIT_SESSION_START: "initSessionStart",
    LIFESTYLE_CALLBACK_REQUEST_START: "CallbackRequest_Start",
    ROUTE_CHANGE_START: "ROUTE_CHANGE_START",
    ROUTE_CHANGE_END: "ROUTE_CHANGE_END",
    SPAN_CALLBACK_DATA: "SPAN_CALLBACK_DATA",
    WEBSOCKET_CONNECTION_START: "WEBSOCKET_CONNECTION_START",
    WEBSOCKET_CONNECTION_END: "WEBSOCKET_CONNECTION_END",
    XHR_CALLBACK_IDENTIFY: "XHR_CALLBACK_IDENTIFY",
    LIMIT_64: 64,
    LIMIT_256: 256,
    LIMIT_512: 512,
    ATT_REG: /^[:0-9a-zA-Z /@._-]{1,}$/,
    BR_ATTRIBUTE: "br-att",
  };
  function u$3(Et) {
    return (
      isDefined(Et) &&
      !(Et instanceof Object) &&
      (isString(Et) || (Et = "" + Et),
      /^[\u4E00-\u9FFFa-zA-Z0-9:_\-@.\s/*#!]+$/.test(Et)) &&
      Et.length <= 256
    );
  }
  let p$7 = class {
      constructor() {
        (this.useAPI = !1),
          (this.configeManage = []),
          (this.originManageData = null),
          (this.cookieArr = []),
          (this.requestArr = []),
          (this.responseArr = []),
          (this.isStopGetValue = 50);
      }
      checkOriginManageData(Et) {
        this.useAPI ||
          (isDefined((Et = (Et && isString(Et) && JSON.parse(Et)) || Et)) &&
            Array.isArray(Et) &&
            (50 < (this.originManageData = Et).length
              ? (this.configeManage = Et.slice(0, 50))
              : (this.configeManage = Et),
            this.startCatchDataFun()));
      }
      startCatchDataFun() {
        for (let es = 0, ts = this.configeManage.length - 1; es <= ts; es++)
          if (this.configeManage[es] && this.configeManage[es].type)
            switch (this.configeManage[es].type) {
              case 1:
                var Et = this.getDataWithType_1(this.configeManage[es].rule);
                isDefined(Et) && setCookie("login_username", Et),
                  (this.configeManage[es].value = Et);
                break;
              case 2:
                this.configeManage[es].value = this.getDataWithType_2(
                  this.configeManage[es].rule
                );
                break;
              case 3:
                this.configeManage[es].value = this.getDataWithType_3(
                  this.configeManage[es].rule
                );
                break;
              case 4:
                this.getDataWithType_4(this.configeManage[es].rule, es);
                break;
              case 5:
                this.configeManage[es].value = this.getDataWithType_5(
                  this.configeManage[es].rule
                );
                break;
              case 6:
                this.getDataWithType_6(this.configeManage[es].rule, es);
                break;
              case 7:
                this.getDataWithType_7(this.configeManage[es].rule, es);
            }
        M$7(), this.checkValueRight();
      }
      checkValueRight() {
        for (let Et = 0, es = this.configeManage.length - 1; Et <= es; Et++)
          if (
            isDefined(this.configeManage[Et]) &&
            isDefined(this.configeManage[Et].value)
          )
            return (
              (this.isStopGetValue = Et),
              void u$1.configUser(this.configeManage[Et].value, !0)
            );
      }
      getDataWithType_1(Et) {
        if (!(Et && 256 < Et.length))
          try {
            if (Et && 0 < Et.indexOf("@")) {
              var es = Et.split("@"),
                ts = (document && document.querySelector(es[0])) || null;
              if (ts && ts[es[1]] && u$3(ts[es[1]])) return ts[es[1]];
            } else {
              var is = (document && document.querySelector(Et)) || null;
              if (is && u$3(is.innerText)) return is.innerText;
            }
          } catch (ns) {
            log("C138");
          }
      }
      getDataWithType_2(Et) {
        if (!(Et && 256 < Et.length) && isDefined(Et)) {
          if (Et.indexOf(".") != -1) {
            let es;
            if (
              (Et.split(".").map(function (ts, is) {
                es = (es && es[ts]) || (is == 0 && window[ts]) || void 0;
              }),
              es && u$3(es))
            )
              return isString(es) ? es : "" + es;
          } else if (u$3(window[Et])) return "" + window[Et];
        }
      }
      getDataWithType_3(Et) {
        if (!(Et && 256 < Et.length))
          try {
            var es = document.head.querySelector(
              `[name~=${Et}][content]`
            ).content;
            if (isDefined(es) && u$3(es)) return es;
          } catch (ts) {
            log("C139");
          }
      }
      getDataWithType_4(Et, es) {
        (Et && 256 < Et.length) || this.cookieArr.push({ rule: Et, index: es });
      }
      getDataWithType_5(Et) {
        try {
          var es;
          if (
            !(Et && 256 < Et.length) &&
            window &&
            window.location &&
            window.location.search
          ) {
            for (es of decodeURI(window.location.search)
              .split("?")[1]
              .split("&"))
              if (es.split("=")[0] == Et && u$3(es.split("=")[1]))
                return es.split("=")[1];
          }
        } catch (ts) {
          log("C140");
        }
      }
      getDataWithType_6(Et, es) {
        if (!(Et && 256 < Et.length)) {
          let ts = !1;
          this.requestArr.map(function (is) {
            is.rule == Et && (ts = !0);
          }),
            ts || this.requestArr.push({ rule: Et, index: es });
        }
      }
      getDataWithType_7(Et, es) {
        if (!(Et && 256 < Et.length)) {
          let ts = !1;
          this.responseArr.map(function (is) {
            is.rule == Et && (ts = !0);
          }),
            ts || this.responseArr.push({ rule: Et, index: es });
        }
      }
      changeUseAPI(Et) {
        this.useAPI = Et;
      }
    },
    g$6 = new p$7();
  function M$7() {
    var Et = g$6.cookieArr,
      es = g$6.configeManage;
    if (0 < Et.length)
      for (let is = 0, ns = Et.length - 1; is <= ns; is++) {
        var ts = getCookie(Et[is].rule);
        if (isDefined(ts) && u$3(ts) && Et[is].index <= g$6.isStopGetValue)
          return (es[Et[is].index].value = "" + ts), g$6.checkValueRight();
      }
  }
  function a$4() {
    this.listeners = {};
  }
  extend(a$4.prototype, {
    on: function (Et, es) {
      var ts;
      isDefined(Et) &&
        isFunction(es) &&
        forEach(
          (ts = isArray((ts = Et)) ? ts : [Et]),
          bind(function (is) {
            var ns = this.listeners[is];
            (ns = isDefined(ns) ? ns : (this.listeners[is] = [])).push(es);
          }, this)
        );
    },
    emit: function (Et) {
      var es;
      isDefined(Et) &&
        isDefined(Et.t) &&
        ((es = Et.t),
        forEach(this.listeners[es], function (ts) {
          ts(Et);
        }));
    },
    remove: function (Et) {
      var es;
      isDefined(Et) &&
        forEach(
          (es = isArray((es = Et)) ? es : [Et]),
          bind(function (ts) {
            delete this.listeners[ts];
          }, this)
        );
    },
  });
  var e$4 = new a$4(),
    v$a = bind(e$4.on, e$4),
    c$5 = bind(e$4.emit, e$4),
    d$a = bind(e$4.remove, e$4);
  let c$4 = !1,
    u$2 = null,
    d$9 = !1,
    w$a = null,
    p$6 = null;
  const sunSendMsg = (Et) => {
      const es = document.querySelectorAll("iframe"),
        ts = Array.from(es).filter((is) => is.src);
      if (ts.length && O$7.isPostMsg === !1) {
        const is = ts.length,
          ns = E$6.sett.appId;
        for (let rs = 0; rs < is; rs++)
          ts[rs].contentWindow.postMessage(
            { sectionvalue: Et, appId: ns },
            "*"
          ),
            rs == is - 1 && O$7.changePostMsgStat(!0);
      }
    },
    S$5 = (Et, es) => {
      if (es) {
        var ts = document.querySelectorAll("iframe"),
          ts = Array.from(ts).filter((is) => is.src === es);
        if (ts.length) {
          const is = E$6.sett.appId;
          ts[0].contentWindow.postMessage({ sectionvalue: Et, appId: is }, "*");
        }
      }
    },
    sunReceiveMsg = (Et) => {
      let es, ts;
      var is = (ns) => {
        let rs = ns.data;
        if (isDefined(rs.sectionvalue)) {
          (es = rs.sectionvalue), (ts = rs.appId), (c$4 = !0);
          const ss = document.querySelectorAll("iframe");
          D$6.changePostMsgStat(!0),
            clearInterval(p$6),
            ss.length === 0
              ? (isDefined(E$6.sett.RecordConfiguration || E$6.sett.mc) &&
                  d$9 === !1 &&
                  ((d$9 = !0),
                  isDefined(window.BonreeRecord) &&
                  isDefined(window.BonreeRecord.BonreeRecord)
                    ? window.BonreeRecord.BonreeRecord(E$6.sett)
                    : isDefined(window.BonreeAgent) &&
                      isDefined(window.BonreeAgent.BonreeRecord) &&
                      window.BonreeAgent.BonreeRecord(E$6.sett)),
                ts && ts == E$6.sett.appId && resetSetCookie(es),
                Et && Et())
              : (isDefined(E$6.sett.RecordConfiguration || E$6.sett.mc) &&
                  d$9 === !1 &&
                  typeof InstallTrigger != "undefined" &&
                  ((d$9 = !0),
                  isDefined(window.BonreeRecord) &&
                  isDefined(window.BonreeRecord.BonreeRecord)
                    ? window.BonreeRecord.BonreeRecord(E$6.sett)
                    : isDefined(window.BonreeAgent) &&
                      isDefined(window.BonreeAgent.BonreeRecord) &&
                      window.BonreeAgent.BonreeRecord(E$6.sett)),
                setTimeout(() => {
                  d$9 === !1 &&
                    (clearInterval(w$a), Et && Et(), sunSendMsg(), (d$9 = !0));
                }, 1e4));
        }
        rs.type &&
          rs.type === "bonree-msg" &&
          (clearInterval(w$a),
          (w$a = setInterval(() => {
            es &&
              (clearInterval(w$a),
              clearInterval(p$6),
              D$6.changePostMsgStat(!0),
              isDefined(E$6.sett.RecordConfiguration || E$6.sett.mc) &&
                d$9 === !1 &&
                ((d$9 = !0),
                isDefined(window.BonreeRecord) &&
                isDefined(window.BonreeRecord.BonreeRecord)
                  ? window.BonreeRecord.BonreeRecord(E$6.sett)
                  : isDefined(window.BonreeAgent) &&
                    isDefined(window.BonreeAgent.BonreeRecord) &&
                    window.BonreeAgent.BonreeRecord(E$6.sett)),
              ts && ts == E$6.sett.appId
                ? (resetSetCookie(es), Et && Et(), S$5(es, rs.src))
                : (Et && Et(), S$5(w$9.getSession().sessionID, rs.src)));
          }, 50))),
          rs.type &&
            rs.type === "to-sun-rest-take-full-snapshot" &&
            (resetSetCookie(rs.sessionID),
            w$9.resetTakeFullSnapshotToSun(rs.sessionID)),
          rs.type &&
            rs.type === "to-parent-rest-take-full-snapshot" &&
            (resetSetCookie(rs.sessionID),
            w$9.resetTakeFullSnapshotToParent(rs.sessionID));
      };
      window.addEventListener
        ? window.addEventListener("message", is)
        : window.attachEvent("onmessage", is);
    },
    sunLoaded = (Et) => {
      if (window.self !== window.parent) {
        const es = {
          type: "bonree-msg",
          src: window.location.href,
          msg: "iframe loaded",
        };
        D$6.isPostMsg === !1 &&
          (clearInterval(p$6),
          (p$6 = setInterval(() => {
            window.parent.postMessage(es, "*");
          }, 50))),
          window.parent.postMessage(es, "*"),
          setTimeout(() => {
            c$4 === !1 &&
              (Et && Et(),
              (c$4 = !0),
              clearInterval(p$6),
              window.document.querySelectorAll("iframe").length) &&
              sunSendMsg(w$9.getSession().sessionID);
          }, 1e4);
      }
    },
    v$9 = () => {
      const Et = document.querySelectorAll("iframe"),
        es = Array.from(Et).filter((ts) => ts.src);
      if (es.length) {
        const ts = es.length,
          is = E$6.sett.appId;
        for (let ns = 0; ns < ts; ns++) {
          const rs = es[ns].contentWindow,
            ss = {
              sectionvalue: w$9.getSession().sessionID,
              appId: is,
              fromsrc: window.location.href,
            };
          rs.postMessage(ss, "*");
        }
      }
    },
    parentReceiveMsg = () => {
      var Et = (es) => {
        (es = es.data),
          isDefined(es.type) &&
            es.type === "bonree-msg" &&
            c$4 === !1 &&
            ((c$4 = !0), v$9()),
          isDefined(es.type) &&
            es.type &&
            es.type === "to-parent-rest-take-full-snapshot" &&
            (resetSetCookie(es.sessionID),
            w$9.resetTakeFullSnapshotToParent(es.sessionID));
      };
      window.addEventListener
        ? window.addEventListener("message", Et, !1)
        : window.attachEvent("onmessage", Et),
        document.querySelectorAll("iframe").length &&
          (u$2 = setInterval(() => {
            c$4 === !1
              ? (clearInterval(u$2), (c$4 = !0), v$9())
              : clearInterval(u$2);
          }, 100));
    };
  function resetSetCookie(Et) {
    var es,
      ts = w$9.getCurrentSesssionKey(E$6.sett.appId || E$6.secondSett.appId),
      is = getCookie(ts),
      ns = JSON.parse(is) || [];
    for (es of ns)
      (es.lastVisitedTime = new Date().getTime()),
        (es.startTime = 0),
        (es.sessionID = Et),
        setCookie(ts, JSON.stringify(ns), w$9.getSessionConfig());
  }
  const notifyToSunChangeSidAndRedraw = (Et) => {
      var es = document.querySelectorAll("iframe"),
        ts = Array.from(es).filter((ns) => ns.src),
        is = { type: "to-sun-rest-take-full-snapshot", sessionID: Et };
      if (ts.length) {
        const ns = ts.length;
        for (let rs = 0; rs < ns; rs++)
          ts[rs].contentWindow.postMessage(is, "*");
      }
    },
    notifyToParentChangeSidAndRedraw = (Et) => {
      window !== window.parent &&
        window.parent.postMessage(
          { type: "to-parent-rest-take-full-snapshot", sessionID: Et },
          "*"
        );
    };
  let T$7 = class {
      constructor() {
        (this.sessionCache = "br-session-cache"),
          (this.current = "br-current-appid");
      }
      newAppid(Et) {
        var es, ts;
        !isDefined(Et) ||
          (getCookie((es = this.getCurrentSesssionKey(Et))) &&
            this.queryAppid(Et)) ||
          ((this.currentAppid = {
            appId: Et,
            sessionID: uuid(),
            lastVisitedTime: new Date().getTime(),
            startTime: 0,
          }),
          getCookie(es)
            ? ((ts = JSON.parse(getCookie(es))).unshift(this.currentAppid),
              setCookie(es, JSON.stringify(ts), this.getSessionConfig()))
            : setCookie(
                es,
                JSON.stringify([this.currentAppid]),
                this.getSessionConfig()
              ),
          setCookie(this.current, Et, this.getSessionConfig()));
      }
      setSessionCookie(Et, es) {
        setCookie(Et, es, this.getSessionConfig());
      }
      getSessionConfig() {
        var Et = { path: "/" };
        return (
          E$6.sett.sessionDomain && (Et.domain = E$6.sett.sessionDomain), Et
        );
      }
      resetTakeFullSnapshotToSun(Et) {
        try {
          isDefined(window.BonreeRecord) &&
          isDefined(window.BonreeRecord.BonreeRecord)
            ? window.BonreeRecord.BonreeRecord.takeFullSnapshot()
            : isDefined(window.BonreeAgent) &&
              isDefined(window.BonreeAgent.BonreeRecord) &&
              window.BonreeAgent.BonreeRecord.takeFullSnapshot(),
            notifyToSunChangeSidAndRedraw(Et);
        } catch (es) {
          log("C155");
        }
      }
      resetTakeFullSnapshotToParent(Et) {
        try {
          isDefined(window.BonreeRecord) &&
          isDefined(window.BonreeRecord.BonreeRecord)
            ? window.BonreeRecord.BonreeRecord.takeFullSnapshot()
            : isDefined(window.BonreeAgent) &&
              isDefined(window.BonreeAgent.BonreeRecord) &&
              window.BonreeAgent.BonreeRecord.takeFullSnapshot(),
            notifyToParentChangeSidAndRedraw(Et);
        } catch (es) {
          log("C155");
        }
      }
      queryAppid(Et) {
        var es,
          ts = this.getCurrentSesssionKey(Et),
          is = getCookie(ts),
          ns = (isJSON(is) && JSON.parse(is)) || [];
        for (es of ns)
          if (es.appId === Et)
            return (
              new Date().getTime() - es.lastVisitedTime >
              E$6.sett.sessionTimeout / 1e3
                ? (E$6.setData("isFirstUpload", 1),
                  E$5.initUsdTime(),
                  (es.sessionID = uuid()),
                  c$5({ t: GC.INIT_SESSION_START }),
                  this.resetTakeFullSnapshotToSun(es.sessionID),
                  window !== window.parent &&
                    this.resetTakeFullSnapshotToParent(es.sessionID),
                  (es.lastVisitedTime = new Date().getTime()),
                  (es.startTime = 0),
                  (es.isRestSID = !0))
                : ((es.isRestSID = !1),
                  (es.lastVisitedTime = new Date().getTime())),
              setCookie(ts, JSON.stringify(ns), this.getSessionConfig()),
              es
            );
        return !1;
      }
      setAppid(is) {
        E$6.setConfig(is, !1, 0);
        var es,
          ts,
          is = is.appId;
        isDefined(is) &&
          (getCookie((es = this.getCurrentSesssionKey(is)))
            ? this.queryAppid(is)
              ? setCookie(this.current, is, this.getSessionConfig())
              : ((ts = JSON.parse(getCookie(es))),
                E$6.setData("isFirstUpload", 1),
                E$5.initUsdTime(),
                c$5({ t: GC.INIT_SESSION_START }),
                (this.currentAppid = {
                  appId: is,
                  sessionID: uuid(),
                  lastVisitedTime: new Date().getTime(),
                  startTime: 0,
                }),
                this.resetTakeFullSnapshotToSun(this.currentAppid.sessionID),
                window !== window.parent &&
                  this.resetTakeFullSnapshotToParent(
                    this.currentAppid.sessionID
                  ),
                ts.unshift(this.currentAppid),
                20 <= ts.length && ts.pop(),
                setCookie(es, JSON.stringify(ts), this.getSessionConfig()))
            : (E$6.setData("isFirstUpload", 1),
              E$5.initUsdTime(),
              c$5({ t: GC.INIT_SESSION_START }),
              (this.currentAppid = {
                appId: is,
                sessionID: uuid(),
                lastVisitedTime: new Date().getTime(),
                startTime: 0,
              }),
              this.resetTakeFullSnapshotToSun(this.currentAppid.sessionID),
              window !== window.parent &&
                this.resetTakeFullSnapshotToParent(this.currentAppid.sessionID),
              setCookie(
                this.getCurrentSesssionKey(is),
                JSON.stringify([this.currentAppid]),
                this.getSessionConfig()
              )),
          setCookie(this.current, is, this.getSessionConfig()));
      }
      getSession() {
        return this.queryAppid(E$6.sett.appId || E$6.secondSett.appId);
      }
      getCurrentSesssionKey(Et) {
        return this.sessionCache + "-" + Et;
      }
    },
    w$9 = new T$7(),
    s$6,
    f$2;
  const c$3 = [];
  function v$8() {
    h$d(),
      v$a([GC.PAGE_READY, GC.PAGE_LOAD], () => {
        g$5();
      });
  }
  function g$5() {
    let Et;
    if (
      (E$6.sett.mutationObserverEles &&
        isArray(E$6.sett.mutationObserverEles) &&
        (Et = E$6.sett.mutationObserverEles),
      E$6.secondSett.mutationObserverEles &&
        isArray(E$6.secondSett.mutationObserverEles) &&
        ((Et = [...Et, ...E$6.secondSett.mutationObserverEles]),
        (Et = new Set(Et))),
      (Et = Array.from(Et)),
      window.IntersectionObserver && Et && isArray(Et) && 0 < Et.length)
    )
      for (let ts = 0; ts < Et.length; ts++) {
        var es = Et[ts];
        es && isString(es) && p$5(es);
      }
  }
  function h$d() {
    f$2 = new IntersectionObserver((Et) => {
      for (let is = 0; is < Et.length; is++) {
        var es = Et[is];
        if (!es) return;
        var ts = es.target;
        if (0 < es.intersectionRatio) {
          const ns = a$3(ts);
          if (ns && ns.target) ns.startTime = Date.now();
          else {
            const rs = { target: ts, startTime: Date.now(), endTime: 0 };
            c$3.push(rs);
          }
        } else {
          const ns = a$3(ts);
          ns &&
            ns.target &&
            ((ns.endTime = Date.now()), s$6) &&
            typeof s$6 == "function" &&
            s$6(ts, 1e3 * (ns.endTime - ns.startTime));
        }
      }
    });
  }
  function p$5(Et) {
    var es = document.querySelectorAll(Et);
    if (es && 0 < es.length)
      for (let is = 0; is < es.length; is++) {
        var ts = es[is];
        if (!ts) return;
        a$3(ts.target) || (f$2 && f$2.observe(ts));
      }
  }
  function a$3(Et) {
    for (let ts = 0; ts < c$3.length; ts++) {
      var es = c$3[ts];
      if (es && es.target === Et) return es;
    }
    return !1;
  }
  function w$8(Et) {
    Et && isFunction(Et)
      ? (s$6 = Et)
      : console.warn(
          "The parameters passed in are incorrect. Please pass in a function!!"
        );
  }
  function f$1() {
    (this.sett = {
      osType: GC.BROWSER,
      probability: GC.THOUSAND,
      sessionPeriod: 18e8,
      sessionTimeout: 3e8,
      sessionEvents: 2e3,
      debounce: 1e3,
      ignoreRequestParams: !1,
      ignoreRequestHeaders: !1,
      ignoreResources: !1,
      ignoreUserEvents: !1,
      isFirstUpload: 1,
      exBrowser: ["Firefox/47"],
      appVersion: "1.0.0",
      agentVersion: version,
      appName: "unKnown",
      appId: "",
      hcs: 1,
      channelId: null,
      deviceId: null,
      pageViewId: uuid(),
      pageUrl: document && document.URL,
      reqBodyKey: null,
      reqURLKey: null,
      reqHeaderKey: null,
      userKey: "br-user",
      isDebuge: !1,
      cycleTime: 10,
      useXHR: !1,
      maxSize: 20,
      enableWebsocket: !0,
      ac: { ac: !0, cp: 30, aot: 3e4 },
      traceConfig: { urlTotalList: [], urlWhiteList: [], urlBlackList: [] },
      typeArr: ["", "android", "ios", "pc"],
      mutationObserverEles: [],
    }),
      (this.oriArr = []),
      (this.initArr = []),
      (this.secondSett = {});
  }
  (f$1.prototype.iptAddAttribute = function (Et) {
    Et
      ? forEach(document.querySelectorAll("input"), function (es) {
          es.setAttribute("bonree-value", "all");
        })
      : forEach(this.sett.inputValue, function (es) {
          forEach(document.querySelectorAll(es), function (ts) {
            ts.setAttribute("bonree-value", "part");
          });
        });
  }),
    (f$1.prototype.elementAddAttribute = function () {
      forEach(this.sett.findEles, function (Et) {
        var es;
        isArray(Et)
          ? ((es = document.querySelectorAll(Et[0])),
            isDefined(Et[1]) && !isEmpty(Et[1])
              ? isDefined(Et[2])
                ? forEach(es, function (ts) {
                    ts.setAttribute("bonree-title", Et[1]),
                      ts.setAttribute("bonree-content", Et[2]);
                  })
                : forEach(es, function (ts) {
                    ts.setAttribute("bonree-title", Et[1]);
                  })
              : isDefined(Et[2])
              ? forEach(es, function (ts) {
                  ts.setAttribute("bonree-title", ""),
                    ts.setAttribute("bonree-content", Et[2]);
                })
              : forEach(es, function (ts) {
                  ts.setAttribute("bonree-title", "");
                }))
          : forEach(document.querySelectorAll(Et), function (ts) {
              ts.setAttribute("bonree-title", "");
            });
      });
    }),
    (f$1.prototype.setConfig = function (Et, es = !0, ts = 0) {
      if (E$6.sett.appId === "" || !isDefined(Et.appId) || ts === 0)
        if (es && isDefined(Et.osType)) {
          if (
            ((this.secondSett = extend(this.secondSett, Et)),
            isDefined(this.secondSett.mn) && isDefined(this.secondSett.sl))
          ) {
            var is = this.secondSett.mn,
              ns = this.secondSett.sl;
            if (is.indexOf("sessionreplay") !== -1 && ns !== 0) {
              let rs = setInterval(() => {
                1 < u$1.state && (S$6.isStart(!0), clearInterval(rs));
              }, 50);
            } else S$6.isStart(!1);
          }
        } else {
          if (!es && ts === 1)
            return isDefined(Et.osType)
              ? void (this.secondSett = extend(this.secondSett, Et))
              : void extend(this.sett, Et);
          isDefined(Et.probability) &&
            (typeof Et.probability == "number"
              ? this.checkProbability(Et.probability)
              : log("C100")),
            this.sett.probability &&
              (extend(this.sett, Et),
              this.sett.appId && es === !0 && w$9.newAppid(this.sett.appId),
              this.sett.userId &&
                (isDefined(this.sett.extraInfo)
                  ? (S$4(this.sett.userId), b$4(this.sett.extraInfo))
                  : S$4(this.sett.userId),
                g$6.changeUseAPI(!0)),
              isDefined(this.sett.userdefine) &&
                g$6.checkOriginManageData(this.sett.userdefine),
              this.sett.isDebuge &&
                isDefined(window.BonreeAgent) &&
                (window.BonreeAgent.isDebuge = !0),
              this.sett.isDebuge &&
                isDefined(window.BonreeClient) &&
                (window.BonreeClient.isDebuge = !0),
              this.findElesFun());
        }
    }),
    (f$1.prototype.findElesFun = function (Et) {
      if (
        (this.sett.inputValue &&
          (isArray(this.sett.inputValue)
            ? 0 < this.sett.inputValue.length &&
              (v$a([GC.PAGE_READY, GC.PAGE_LOAD], () => {
                this.iptAddAttribute.call(this);
              }),
              Et) &&
              this.iptAddAttribute.call(this)
            : this.sett.inputValue === !0 &&
              (v$a([GC.PAGE_READY, GC.PAGE_LOAD], () => {
                this.iptAddAttribute.call(this);
              }),
              Et) &&
              this.iptAddAttribute.call(this, !0)),
        this.sett.findEles && isArray(this.sett.findEles))
      ) {
        v$a([GC.PAGE_READY, GC.PAGE_LOAD], () => {
          this.elementAddAttribute.call(this);
        }),
          Et && this.elementAddAttribute.call(this);
        let es = this.sett.findEles || [],
          ts = this.sett.inputValue || [],
          is = [],
          ns = this;
        0 < es.length &&
          forEach(es, (rs) => {
            isArray(rs) ? is.push(rs[0]) : is.push(rs);
          }),
          document &&
            0 < is.length &&
            new (getMutationObserver())(
              (function (rs, ss) {
                let os = null;
                return function () {
                  os ||
                    (rs.apply(this, arguments),
                    (os = setTimeout(() => {
                      os = null;
                    }, ss)));
                };
              })((rs) => {
                rs.forEach((ss) => {
                  (ss.type !== "childList" && ss.type !== "subtree") ||
                    (g$5 && g$5(),
                    ss.addedNodes.forEach((os) => {
                      os.nodeType === 1 &&
                        (is.forEach((ds) => {
                          os.matches(ds) && ns.elementAddAttribute.call(ns);
                        }),
                        isArray(ts)
                          ? ns.iptAddAttribute.call(ns)
                          : ns.iptAddAttribute.call(ns, !0));
                    }));
                });
              }, 50)
            ).observe(document.body, {
              childList: !0,
              attributes: !0,
              subtree: !0,
            });
      }
    }),
    (f$1.prototype.checkProbability = function (Et) {
      Math.random() * GC.THOUSAND <= Et
        ? (this.sett.probability = GC.THOUSAND)
        : (this.sett.probability = GC.ZERO);
    }),
    (f$1.prototype.setData = function (Et, es) {
      if (!isDefined(Et) || !isDefined(es)) return !1;
      this.sett[Et] = es;
    });
  var E$6 = new f$1();
  function U$9(Et) {
    return Et === GC.IOS;
  }
  function B$6(Et) {
    return Et === GC.HOS;
  }
  function q$4(Et) {
    return Et === GC.BROWSER;
  }
  function d$8(Et) {
    let es = Et.ui;
    document &&
      forEach(document.querySelectorAll("iframe"), function (ts) {
        ts.setAttribute("bonreeID", es);
        let is = ts.contentWindow;
        setTimeout(() => {
          is.postMessage({ bonreeID: es }, "*");
        }, 1e3);
      });
  }
  let U$8 = class {
      constructor() {
        (this.state = 0),
          (this.userInfoMap = {}),
          (this.user = void 0),
          (this.firstUserInfoSetMapKey = ""),
          (this.lastUserInfoSetMapKey = ""),
          (this.setUserInfoTimeStamp = 0),
          (this.title = ""),
          (this.BonreeRecordState = !1),
          (this.eventViewInfo = { n: document && document.URL }),
          (this.eviKey = ""),
          (this.eviMap = {}),
          (this.eei = {}),
          (this.eeiKey = ""),
          (this.eeiMap = {}),
          (this.eeiMapBackup = {}),
          (this.timer = void 0);
      }
      setEeiData(Et) {
        isEmpty(Et)
          ? ((this.eeiKey = ""), (this.eei = {}), (this.eeiMap = {}))
          : ((this.eei = Object.assign({}, Et)),
            (Et = ""),
            isEmpty(this.eei)
              ? (this.eeiKey = "")
              : ((this.eeiKey = Et = hex_md5(String(+new Date()))),
                (this.eeiMap[Et] = this.eei)));
      }
      setEeiMapCopy() {
        var Et;
        this.eeiKey !== "" &&
          isDefined((Et = this.eeiMap[this.eeiKey])) &&
          (this.eeiMapBackup[this.eeiKey] = Et);
      }
      getEeiData(Et) {
        return Et == "key"
          ? (this.setEeiMapCopy(), this.eeiKey)
          : ((Et = Object.assign({}, this.eeiMapBackup)),
            (this.eeiMapBackup = {}),
            Et);
      }
      setEviMap() {
        if (this.eviKey == "")
          (this.eviKey = hex_md5(String(+new Date()))),
            (this.eviMap[this.eviKey] = Object.assign({}, this.eventViewInfo));
        else {
          let ts = !1;
          for (const is in this.eviMap) {
            var Et;
            Object.hasOwnProperty.call(this.eviMap, is) &&
              ((Et = this.eviMap[is]), this.eventViewInfo) &&
              this.eventViewInfo.n === Et.n &&
              this.eventViewInfo.vt === Et.vt &&
              ((ts = !0), (this.eviKey = is));
          }
          var es;
          ts ||
            ((es = ""),
            this.eviMap[this.eviKey] &&
              this.eviMap[this.eviKey].n &&
              (es = this.eviMap[this.eviKey].n),
            (this.eviKey = hex_md5(String(+new Date()))),
            es && (this.eventViewInfo.ru = es),
            (this.eviMap[this.eviKey] = Object.assign({}, this.eventViewInfo)));
        }
      }
      setEviData(Et, es) {
        (this.eventViewInfo[Et] = es),
          isDefined(this.timer) || this.setEviMap(),
          clearTimeout(this.timer),
          (this.timer = setTimeout(() => {
            this.setEviMap();
          }, 50));
      }
      getEviData(Et) {
        return Et == "key"
          ? this.eviKey
          : Et == "value"
          ? this.eventViewInfo
          : this.eviMap;
      }
      setData(Et, es) {
        if (!isDefined(Et) || !isDefined(es)) return !1;
        (this[Et] = es), Et == "title" && es != "" && this.setEviData("vt", es);
      }
      changeState(Et) {
        this.state = Et;
      }
      getUserInfo() {
        var Et;
        return (
          isEmpty(this.userInfoMap) &&
            (Et = this.getUser()) !== "" &&
            this.configUser(Et),
          this.userInfoMap
        );
      }
      getUser() {
        var Et;
        return isDefined(this.user)
          ? user
          : isReadable((Et = this.getLocalUser()))
          ? Et
          : "";
      }
      getLocalUser() {
        var Et, es;
        return isDefined(this.user)
          ? this.user
          : ((es = E$6.sett.userKey),
            (isDefined(window.sessionStorage) &&
              isReadable((Et = sessionStorage.getItem(es)))) ||
            (isDefined(window.localStorage) &&
              isReadable((Et = localStorage.getItem(es))))
              ? Et
              : getCookie(es));
      }
      updateFirstUserInfoSetMapKey(Et) {
        this.firstUserInfoSetMapKey = Et;
      }
      saveUser(Et) {
        setCookie(E$6.sett.userKey, Et);
      }
      configUser(Et, ns = !1) {
        if (!isDefined(Et)) return log("C141"), !1;
        if (Et instanceof Object) return log("C142"), !1;
        if (
          (isString(Et) || (Et = "" + Et),
          !/^[a-zA-Z\u4E00-\u9FFF0-9_ .@/:*#!-]{1,256}$/.test(Et))
        )
          return log("C143"), !1;
        ns || g$6.changeUseAPI(!0);
        let ts = !1;
        if (
          ((ns = hex_md5(Et)), (ts = isDefined(this.userInfoMap[ns]) ? !0 : ts))
        )
          return !1;
        isEmpty(this.userInfoMap) && this.updateFirstUserInfoSetMapKey(ns),
          (this.lastUserInfoSetMapKey = ns),
          (this.setUserInfoTimeStamp = now());
        var is = {},
          ns =
            ((is.ui = Et),
            (this.userInfoMap[ns] = is),
            this.saveUser(Et),
            this.userInfoMap[this.lastUserInfoSetMapKey]);
        return isDefined(ns) && d$8(ns), !0;
      }
      configUserExtraInfo(Et) {
        try {
          switch (typeof Et) {
            case "string":
              if (7e3 < Et.length) return;
              var es;
              (Et = JSON.parse(Et)),
                64 < Object.getOwnPropertyNames(Et).length &&
                  ((es = {}),
                  Object.getOwnPropertyNames(Et)
                    .slice(0, 64)
                    .forEach(function (ts) {
                      es[ts] = Et[ts];
                    }),
                  (Et = es));
              break;
            case "object":
              if (7e3 < JSON.stringify(Et).length || isEmpty(Et)) return;
              64 < Object.getOwnPropertyNames(Et).length &&
                ((es = {}),
                Object.getOwnPropertyNames(Et)
                  .slice(0, 64)
                  .forEach(function (ts) {
                    es[ts] = Et[ts];
                  }),
                (Et = es));
              break;
            default:
              return;
          }
        } catch (ts) {}
        isDefined(Et) &&
          !isEmpty(this.userInfoMap) &&
          (this.userInfoMap[this.lastUserInfoSetMapKey].ei =
            JSON.stringify(Et));
      }
    },
    w$7 = class {
      constructor() {
        this.usdTime = 0;
        var Et = this.queryCookie();
        Et != 0 && (this.usdTime = Et);
      }
      initUsdTime() {
        (this.usdTime = 0), this.saveCookie(0);
      }
      changUsdTime(Et) {
        isDefined(Et) && ((this.usdTime = Et), this.saveCookie(Et));
      }
      saveCookie(Et) {
        setCookie("br_usd_time", Et);
      }
      queryCookie() {
        return getCookie("br_usd_time") || 0;
      }
    },
    M$6 = class {
      constructor() {
        this.isPostMsg = !1;
      }
      changePostMsgStat(Et) {
        this.isPostMsg = Et;
      }
    };
  function S$4(Et, es = !1) {
    u$1.configUser(Et, es);
  }
  function b$4(Et) {
    u$1.configUserExtraInfo(Et);
  }
  let u$1 = new U$8(),
    E$5 = new w$7(),
    O$7 = new M$6(),
    D$6 = new M$6(),
    s$5 = class {
      constructor() {
        this.items = {};
      }
      set(Et, es) {
        this.items[Et] = es;
      }
      get(Et) {
        return this.items.hasOwnProperty(Et) ? this.items[Et] : void 0;
      }
      has(Et) {
        return this.items.hasOwnProperty(Et);
      }
      delete(Et) {
        return !!this.has(Et) && (delete this.items[Et], !0);
      }
      clear() {
        this.items = {};
      }
      size() {
        return Object.keys(this.items).length;
      }
      entries() {
        return Object.entries(this.items);
      }
      keys() {
        return Object.keys(this.items);
      }
      values() {
        return Object.values(this.items);
      }
    };
  var R$3 = "0.7.28",
    z$3 = "",
    N$4 = "?",
    A$7 = "function",
    C$4 = "undefined",
    O$6 = "object",
    B$5 = "string",
    q$3 = "major",
    e$3 = "model",
    o$1 = "name",
    i$2 = "type",
    s$4 = "vendor",
    r$2 = "version",
    c$2 = "architecture",
    v$7 = "console",
    d$7 = "mobile",
    n$2 = "tablet",
    m$7 = "smarttv",
    E$4 = "wearable",
    M$5 = "embedded",
    L$6 = 255,
    p$4 = {
      extend: function (Et, es) {
        var ts,
          is = {};
        for (ts in Et)
          es[ts] && es[ts].length % 2 == 0
            ? (is[ts] = es[ts].concat(Et[ts]))
            : (is[ts] = Et[ts]);
        return is;
      },
      has: function (Et, es) {
        return (
          typeof Et === B$5 && es.toLowerCase().indexOf(Et.toLowerCase()) !== -1
        );
      },
      lowerize: function (Et) {
        return Et.toLowerCase();
      },
      major: function (Et) {
        return typeof Et === B$5
          ? Et.replace(/[^\d\.]/g, "").split(".")[0]
          : void 0;
      },
      trim: function (Et, es) {
        return (
          (Et = Et.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")),
          typeof es === C$4 ? Et : Et.substring(0, L$6)
        );
      },
    },
    f = {
      rgx: function (Et, es) {
        for (var ts, is, ns, rs, ss, os = 0; os < es.length && !rs; ) {
          for (
            var ds = es[os], as = es[os + 1], cs = (ts = 0);
            cs < ds.length && !rs;

          )
            if ((rs = ds[cs++].exec(Et)))
              for (is = 0; is < as.length; is++)
                (ss = rs[++ts]),
                  typeof (ns = as[is]) === O$6 && 0 < ns.length
                    ? ns.length == 2
                      ? typeof ns[1] == A$7
                        ? (this[ns[0]] = ns[1].call(this, ss))
                        : (this[ns[0]] = ns[1])
                      : ns.length == 3
                      ? typeof ns[1] !== A$7 || (ns[1].exec && ns[1].test)
                        ? (this[ns[0]] = ss ? ss.replace(ns[1], ns[2]) : void 0)
                        : (this[ns[0]] = ss
                            ? ns[1].call(this, ss, ns[2])
                            : void 0)
                      : ns.length == 4 &&
                        (this[ns[0]] = ss
                          ? ns[3].call(this, ss.replace(ns[1], ns[2]))
                          : void 0)
                    : (this[ns] = ss || void 0);
          os += 2;
        }
      },
      str: function (Et, es) {
        for (var ts in es)
          if (typeof es[ts] === O$6 && 0 < es[ts].length) {
            for (var is = 0; is < es[ts].length; is++)
              if (p$4.has(es[ts][is], Et)) return ts === N$4 ? void 0 : ts;
          } else if (p$4.has(es[ts], Et)) return ts === N$4 ? void 0 : ts;
        return Et;
      },
    },
    y$4 = {
      browser: {
        oldSafari: {
          version: {
            "1.0": "/8",
            1.2: "/1",
            1.3: "/3",
            "2.0": "/412",
            "2.0.2": "/416",
            "2.0.3": "/417",
            "2.0.4": "/419",
            "?": "/",
          },
        },
        oldEdge: {
          version: {
            0.1: "12.",
            21: "13.",
            31: "14.",
            39: "15.",
            41: "16.",
            42: "17.",
            44: "18.",
          },
        },
      },
      os: {
        windows: {
          version: {
            ME: "4.90",
            "NT 3.11": "NT3.51",
            "NT 4.0": "NT4.0",
            2e3: "NT 5.0",
            XP: ["NT 5.1", "NT 5.2"],
            Vista: "NT 6.0",
            7: "NT 6.1",
            8: "NT 6.2",
            8.1: "NT 6.3",
            10: ["NT 6.4", "NT 10.0"],
            RT: "ARM",
          },
        },
      },
    },
    x$5 = {
      browser: [
        [/\b(?:crmo|crios)\/([\w\.]+)/i],
        [r$2, [o$1, "Chrome"]],
        [/edg(?:e|ios|a)?\/([\w\.]+)/i],
        [r$2, [o$1, "Edge"]],
        [
          /(opera\smini)\/([\w\.-]+)/i,
          /(opera\s[mobiletab]{3,6})\b.+version\/([\w\.-]+)/i,
          /(opera)(?:.+version\/|[\/\s]+)([\w\.]+)/i,
        ],
        [o$1, r$2],
        [/opios[\/\s]+([\w\.]+)/i],
        [r$2, [o$1, "Opera Mini"]],
        [/\sopr\/([\w\.]+)/i],
        [r$2, [o$1, "Opera"]],
        [
          /(kindle)\/([\w\.]+)/i,
          /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i,
          /(avant\s|iemobile|slim)(?:browser)?[\/\s]?([\w\.]*)/i,
          /(ba?idubrowser)[\/\s]?([\w\.]+)/i,
          /(?:ms|\()(ie)\s([\w\.]+)/i,
          /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\/([\w\.-]+)/i,
          /(rekonq|puffin|brave|whale|qqbrowserlite|qq)\/([\w\.]+)/i,
          /(weibo)__([\d\.]+)/i,
        ],
        [o$1, r$2],
        [/(?:[\s\/]uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i],
        [r$2, [o$1, "UCBrowser"]],
        [/(?:windowswechat)?\sqbcore\/([\w\.]+)\b.*(?:windowswechat)?/i],
        [r$2, [o$1, "WeChat(Win) Desktop"]],
        [/micromessenger\/([\w\.]+)/i],
        [r$2, [o$1, "WeChat"]],
        [/konqueror\/([\w\.]+)/i],
        [r$2, [o$1, "Konqueror"]],
        [/trident.+rv[:\s]([\w\.]{1,9})\b.+like\sgecko/i],
        [r$2, [o$1, "IE"]],
        [/yabrowser\/([\w\.]+)/i],
        [r$2, [o$1, "Yandex"]],
        [/(avast|avg)\/([\w\.]+)/i],
        [[o$1, /(.+)/, "$1 Secure Browser"], r$2],
        [/focus\/([\w\.]+)/i],
        [r$2, [o$1, "Firefox Focus"]],
        [/opt\/([\w\.]+)/i],
        [r$2, [o$1, "Opera Touch"]],
        [/coc_coc_browser\/([\w\.]+)/i],
        [r$2, [o$1, "Coc Coc"]],
        [/dolfin\/([\w\.]+)/i],
        [r$2, [o$1, "Dolphin"]],
        [/coast\/([\w\.]+)/i],
        [r$2, [o$1, "Opera Coast"]],
        [/xiaomi\/miuibrowser\/([\w\.]+)/i],
        [r$2, [o$1, "MIUI Browser"]],
        [/fxios\/([\w\.-]+)/i],
        [r$2, [o$1, "Firefox"]],
        [/(qihu|qhbrowser|qihoobrowser|360browser)/i],
        [[o$1, "360 Browser"]],
        [/(oculus|samsung|sailfish)browser\/([\w\.]+)/i],
        [[o$1, /(.+)/, "$1 Browser"], r$2],
        [/(comodo_dragon)\/([\w\.]+)/i],
        [[o$1, /_/g, " "], r$2],
        [
          /\s(electron)\/([\w\.]+)\ssafari/i,
          /(tesla)(?:\sqtcarbrowser|\/(20[12]\d\.[\w\.-]+))/i,
          /m?(qqbrowser|baiduboxapp|2345Explorer)[\/\s]?([\w\.]+)/i,
        ],
        [o$1, r$2],
        [/(MetaSr)[\/\s]?([\w\.]+)/i, /(LBBROWSER)/i],
        [o$1],
        [/;fbav\/([\w\.]+);/i],
        [r$2, [o$1, "Facebook"]],
        [/FBAN\/FBIOS|FB_IAB\/FB4A/i],
        [[o$1, "Facebook"]],
        [
          /safari\s(line)\/([\w\.]+)/i,
          /\b(line)\/([\w\.]+)\/iab/i,
          /(chromium|instagram)[\/\s]([\w\.-]+)/i,
        ],
        [o$1, r$2],
        [/\bgsa\/([\w\.]+)\s.*safari\//i],
        [r$2, [o$1, "GSA"]],
        [/headlesschrome(?:\/([\w\.]+)|\s)/i],
        [r$2, [o$1, "Chrome Headless"]],
        [/\swv\).+(chrome)\/([\w\.]+)/i],
        [[o$1, "Chrome WebView"], r$2],
        [/droid.+\sversion\/([\w\.]+)\b.+(?:mobile\ssafari|safari)/i],
        [r$2, [o$1, "Android Browser"]],
        [/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i],
        [o$1, r$2],
        [/version\/([\w\.]+)\s.*mobile\/\w+\s(safari)/i],
        [r$2, [o$1, "Mobile Safari"]],
        [/version\/([\w\.]+)\s.*(mobile\s?safari|safari)/i],
        [r$2, o$1],
        [/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],
        [o$1, [r$2, f.str, y$4.browser.oldSafari.version]],
        [/(webkit|khtml)\/([\w\.]+)/i],
        [o$1, r$2],
        [/(navigator|netscape)\/([\w\.-]+)/i],
        [[o$1, "Netscape"], r$2],
        [/ile\svr;\srv:([\w\.]+)\).+firefox/i],
        [r$2, [o$1, "Firefox Reality"]],
        [
          /ekiohf.+(flow)\/([\w\.]+)/i,
          /(swiftfox)/i,
          /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,
          /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i,
          /(firefox)\/([\w\.]+)\s[\w\s\-]+\/[\w\.]+$/i,
          /(mozilla)\/([\w\.]+)\s.+rv\:.+gecko\/\d+/i,
          /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,
          /(links)\s\(([\w\.]+)/i,
          /(gobrowser)\/?([\w\.]*)/i,
          /(ice\s?browser)\/v?([\w\._]+)/i,
          /(mosaic)[\/\s]([\w\.]+)/i,
        ],
        [o$1, r$2],
      ],
      cpu: [
        [/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],
        [[c$2, "amd64"]],
        [/(ia32(?=;))/i],
        [[c$2, p$4.lowerize]],
        [/((?:i[346]|x)86)[;\)]/i],
        [[c$2, "ia32"]],
        [/\b(aarch64|armv?8e?l?)\b/i],
        [[c$2, "arm64"]],
        [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
        [[c$2, "armhf"]],
        [/windows\s(ce|mobile);\sppc;/i],
        [[c$2, "arm"]],
        [/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],
        [[c$2, /ower/, "", p$4.lowerize]],
        [/(sun4\w)[;\)]/i],
        [[c$2, "sparc"]],
        [
          /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?:64|(?=v(?:[1-7]|[5-7]1)l?|;|eabi))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i,
        ],
        [[c$2, p$4.lowerize]],
      ],
      device: [
        [
          /\b(sch-i[89]0\d|shw-m380s|sm-[pt]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus\s10)/i,
        ],
        [e$3, [s$4, "Samsung"], [i$2, n$2]],
        [
          /\b((?:s[cgp]h|gt|sm)-\w+|galaxy\snexus)/i,
          /\ssamsung[\s-]([\w-]+)/i,
          /sec-(sgh\w+)/i,
        ],
        [e$3, [s$4, "Samsung"], [i$2, d$7]],
        [/\((ip(?:hone|od)[\s\w]*);/i],
        [e$3, [s$4, "Apple"], [i$2, d$7]],
        [
          /\((ipad);[\w\s\),;-]+apple/i,
          /applecoremedia\/[\w\.]+\s\((ipad)/i,
          /\b(ipad)\d\d?,\d\d?[;\]].+ios/i,
        ],
        [e$3, [s$4, "Apple"], [i$2, n$2]],
        [/\b((?:agr|ags[23]|bah2?|sht?)-a?[lw]\d{2})/i],
        [e$3, [s$4, "Huawei"], [i$2, n$2]],
        [
          /d\/huawei([\w\s-]+)[;\)]/i,
          /\b(nexus\s6p|vog-[at]?l\d\d|ane-[at]?l[x\d]\d|eml-a?l\d\da?|lya-[at]?l\d[\dc]|clt-a?l\d\di?|ele-l\d\d)/i,
          /\b(\w{2,4}-[atu][ln][01259][019])[;\)\s]/i,
        ],
        [e$3, [s$4, "Huawei"], [i$2, d$7]],
        [
          /\b(poco[\s\w]+)(?:\sbuild|\))/i,
          /\b;\s(\w+)\sbuild\/hm\1/i,
          /\b(hm[\s\-_]?note?[\s_]?(?:\d\w)?)\sbuild/i,
          /\b(redmi[\s\-_]?(?:note|k)?[\w\s_]+)(?:\sbuild|\))/i,
          /\b(mi[\s\-_]?(?:a\d|one|one[\s_]plus|note lte)?[\s_]?(?:\d?\w?)[\s_]?(?:plus)?)\sbuild/i,
        ],
        [
          [e$3, /_/g, " "],
          [s$4, "Xiaomi"],
          [i$2, d$7],
        ],
        [/\b(mi[\s\-_]?(?:pad)(?:[\w\s_]+))(?:\sbuild|\))/i],
        [
          [e$3, /_/g, " "],
          [s$4, "Xiaomi"],
          [i$2, n$2],
        ],
        [
          /;\s(\w+)\sbuild.+\soppo/i,
          /\s(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007)\b/i,
        ],
        [e$3, [s$4, "OPPO"], [i$2, d$7]],
        [/\svivo\s(\w+)(?:\sbuild|\))/i, /\s(v[12]\d{3}\w?[at])(?:\sbuild|;)/i],
        [e$3, [s$4, "Vivo"], [i$2, d$7]],
        [/\s(rmx[12]\d{3})(?:\sbuild|;)/i],
        [e$3, [s$4, "Realme"], [i$2, d$7]],
        [
          /\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)\b[\w\s]+build\//i,
          /\smot(?:orola)?[\s-](\w*)/i,
          /((?:moto[\s\w\(\)]+|xt\d{3,4}|nexus\s6)(?=\sbuild|\)))/i,
        ],
        [e$3, [s$4, "Motorola"], [i$2, d$7]],
        [/\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],
        [e$3, [s$4, "Motorola"], [i$2, n$2]],
        [/((?=lg)?[vl]k\-?\d{3})\sbuild|\s3\.[\s\w;-]{10}lg?-([06cv9]{3,4})/i],
        [e$3, [s$4, "LG"], [i$2, n$2]],
        [
          /(lm-?f100[nv]?|nexus\s[45])/i,
          /lg[e;\s\/-]+((?!browser|netcast)\w+)/i,
          /\blg(\-?[\d\w]+)\sbuild/i,
        ],
        [e$3, [s$4, "LG"], [i$2, d$7]],
        [
          /(ideatab[\w\-\s]+)/i,
          /lenovo\s?(s(?:5000|6000)(?:[\w-]+)|tab(?:[\s\w]+)|yt[\d\w-]{6}|tb[\d\w-]{6})/i,
        ],
        [e$3, [s$4, "Lenovo"], [i$2, n$2]],
        [/(?:maemo|nokia).*(n900|lumia\s\d+)/i, /nokia[\s_-]?([\w\.-]*)/i],
        [
          [e$3, /_/g, " "],
          [s$4, "Nokia"],
          [i$2, d$7],
        ],
        [/droid.+;\s(pixel\sc)[\s)]/i],
        [e$3, [s$4, "Google"], [i$2, n$2]],
        [/droid.+;\s(pixel[\s\daxl]{0,6})(?:\sbuild|\))/i],
        [e$3, [s$4, "Google"], [i$2, d$7]],
        [
          /droid.+\s([c-g]\d{4}|so[-l]\w+|xq-a\w[4-7][12])(?=\sbuild\/|\).+chrome\/(?![1-6]{0,1}\d\.))/i,
        ],
        [e$3, [s$4, "Sony"], [i$2, d$7]],
        [/sony\stablet\s[ps]\sbuild\//i, /(?:sony)?sgp\w+(?:\sbuild\/|\))/i],
        [
          [e$3, "Xperia Tablet"],
          [s$4, "Sony"],
          [i$2, n$2],
        ],
        [
          /\s(kb2005|in20[12]5|be20[12][59])\b/i,
          /\ba000(1)\sbuild/i,
          /\boneplus\s(a\d{4})[\s)]/i,
        ],
        [e$3, [s$4, "OnePlus"], [i$2, d$7]],
        [
          /(alexa)webm/i,
          /(kf[a-z]{2}wi)(\sbuild\/|\))/i,
          /(kf[a-z]+)(\sbuild\/|\)).+silk\//i,
        ],
        [e$3, [s$4, "Amazon"], [i$2, n$2]],
        [/(sd|kf)[0349hijorstuw]+(\sbuild\/|\)).+silk\//i],
        [
          [e$3, "Fire Phone"],
          [s$4, "Amazon"],
          [i$2, d$7],
        ],
        [/\((playbook);[\w\s\),;-]+(rim)/i],
        [e$3, s$4, [i$2, n$2]],
        [/((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10;\s(\w+)/i],
        [e$3, [s$4, "BlackBerry"], [i$2, d$7]],
        [
          /(?:\b|asus_)(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus\s7|padfone|p00[cj])/i,
        ],
        [e$3, [s$4, "ASUS"], [i$2, n$2]],
        [/\s(z[es]6[027][01][km][ls]|zenfone\s\d\w?)\b/i],
        [e$3, [s$4, "ASUS"], [i$2, d$7]],
        [/(nexus\s9)/i],
        [e$3, [s$4, "HTC"], [i$2, n$2]],
        [
          /(htc)[;_\s-]{1,2}([\w\s]+(?=\)|\sbuild)|\w+)/i,
          /(zte)-(\w*)/i,
          /(alcatel|geeksphone|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i,
        ],
        [s$4, [e$3, /_/g, " "], [i$2, d$7]],
        [/droid[x\d\.\s;]+\s([ab][1-7]\-?[0178a]\d\d?)/i],
        [e$3, [s$4, "Acer"], [i$2, n$2]],
        [/droid.+;\s(m[1-5]\snote)\sbuild/i, /\bmz-([\w-]{2,})/i],
        [e$3, [s$4, "Meizu"], [i$2, d$7]],
        [
          /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i,
          /(hp)\s([\w\s]+\w)/i,
          /(asus)-?(\w+)/i,
          /(microsoft);\s(lumia[\s\w]+)/i,
          /(lenovo)[_\s-]?([\w-]+)/i,
          /linux;.+(jolla);/i,
          /droid.+;\s(oppo)\s?([\w\s]+)\sbuild/i,
        ],
        [s$4, e$3, [i$2, d$7]],
        [
          /(archos)\s(gamepad2?)/i,
          /(hp).+(touchpad(?!.+tablet)|tablet)/i,
          /(kindle)\/([\w\.]+)/i,
          /\s(nook)[\w\s]+build\/(\w+)/i,
          /(dell)\s(strea[kpr\s\d]*[\dko])/i,
          /[;\/]\s?(le[\s\-]+pan)[\s\-]+(\w{1,9})\sbuild/i,
          /[;\/]\s?(trinity)[\-\s]*(t\d{3})\sbuild/i,
          /\b(gigaset)[\s\-]+(q\w{1,9})\sbuild/i,
          /\b(vodafone)\s([\w\s]+)(?:\)|\sbuild)/i,
        ],
        [s$4, e$3, [i$2, n$2]],
        [/\s(surface\sduo)\s/i],
        [e$3, [s$4, "Microsoft"], [i$2, n$2]],
        [/droid\s[\d\.]+;\s(fp\du?)\sbuild/i],
        [e$3, [s$4, "Fairphone"], [i$2, d$7]],
        [/\s(u304aa)\sbuild/i],
        [e$3, [s$4, "AT&T"], [i$2, d$7]],
        [/sie-(\w*)/i],
        [e$3, [s$4, "Siemens"], [i$2, d$7]],
        [/[;\/]\s?(rct\w+)\sbuild/i],
        [e$3, [s$4, "RCA"], [i$2, n$2]],
        [/[;\/\s](venue[\d\s]{2,7})\sbuild/i],
        [e$3, [s$4, "Dell"], [i$2, n$2]],
        [/[;\/]\s?(q(?:mv|ta)\w+)\sbuild/i],
        [e$3, [s$4, "Verizon"], [i$2, n$2]],
        [/[;\/]\s(?:barnes[&\s]+noble\s|bn[rt])([\w\s\+]*)\sbuild/i],
        [e$3, [s$4, "Barnes & Noble"], [i$2, n$2]],
        [/[;\/]\s(tm\d{3}\w+)\sbuild/i],
        [e$3, [s$4, "NuVision"], [i$2, n$2]],
        [/;\s(k88)\sbuild/i],
        [e$3, [s$4, "ZTE"], [i$2, n$2]],
        [/;\s(nx\d{3}j)\sbuild/i],
        [e$3, [s$4, "ZTE"], [i$2, d$7]],
        [/[;\/]\s?(gen\d{3})\sbuild.*49h/i],
        [e$3, [s$4, "Swiss"], [i$2, d$7]],
        [/[;\/]\s?(zur\d{3})\sbuild/i],
        [e$3, [s$4, "Swiss"], [i$2, n$2]],
        [/[;\/]\s?((zeki)?tb.*\b)\sbuild/i],
        [e$3, [s$4, "Zeki"], [i$2, n$2]],
        [
          /[;\/]\s([yr]\d{2})\sbuild/i,
          /[;\/]\s(dragon[\-\s]+touch\s|dt)(\w{5})\sbuild/i,
        ],
        [[s$4, "Dragon Touch"], e$3, [i$2, n$2]],
        [/[;\/]\s?(ns-?\w{0,9})\sbuild/i],
        [e$3, [s$4, "Insignia"], [i$2, n$2]],
        [/[;\/]\s?((nxa|Next)-?\w{0,9})\sbuild/i],
        [e$3, [s$4, "NextBook"], [i$2, n$2]],
        [/[;\/]\s?(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05]))\sbuild/i],
        [[s$4, "Voice"], e$3, [i$2, d$7]],
        [/[;\/]\s?(lvtel\-)?(v1[12])\sbuild/i],
        [[s$4, "LvTel"], e$3, [i$2, d$7]],
        [/;\s(ph-1)\s/i],
        [e$3, [s$4, "Essential"], [i$2, d$7]],
        [/[;\/]\s?(v(100md|700na|7011|917g).*\b)\sbuild/i],
        [e$3, [s$4, "Envizen"], [i$2, n$2]],
        [/[;\/]\s?(trio[\s\w\-\.]+)\sbuild/i],
        [e$3, [s$4, "MachSpeed"], [i$2, n$2]],
        [/[;\/]\s?tu_(1491)\sbuild/i],
        [e$3, [s$4, "Rotor"], [i$2, n$2]],
        [/(shield[\w\s]+)\sbuild/i],
        [e$3, [s$4, "Nvidia"], [i$2, n$2]],
        [/(sprint)\s(\w+)/i],
        [s$4, e$3, [i$2, d$7]],
        [/(kin\.[onetw]{3})/i],
        [
          [e$3, /\./g, " "],
          [s$4, "Microsoft"],
          [i$2, d$7],
        ],
        [/droid\s[\d\.]+;\s(cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
        [e$3, [s$4, "Zebra"], [i$2, n$2]],
        [/droid\s[\d\.]+;\s(ec30|ps20|tc[2-8]\d[kx])\)/i],
        [e$3, [s$4, "Zebra"], [i$2, d$7]],
        [/\s(ouya)\s/i, /(nintendo)\s([wids3utch]+)/i],
        [s$4, e$3, [i$2, v$7]],
        [/droid.+;\s(shield)\sbuild/i],
        [e$3, [s$4, "Nvidia"], [i$2, v$7]],
        [/(playstation\s[345portablevi]+)/i],
        [e$3, [s$4, "Sony"], [i$2, v$7]],
        [/[\s\(;](xbox(?:\sone)?(?!;\sxbox))[\s\);]/i],
        [e$3, [s$4, "Microsoft"], [i$2, v$7]],
        [/smart-tv.+(samsung)/i],
        [s$4, [i$2, m$7]],
        [/hbbtv.+maple;(\d+)/i],
        [
          [e$3, /^/, "SmartTV"],
          [s$4, "Samsung"],
          [i$2, m$7],
        ],
        [/(?:linux;\snetcast.+smarttv|lg\snetcast\.tv-201\d)/i],
        [
          [s$4, "LG"],
          [i$2, m$7],
        ],
        [/(apple)\s?tv/i],
        [s$4, [e$3, "Apple TV"], [i$2, m$7]],
        [/crkey/i],
        [
          [e$3, "Chromecast"],
          [s$4, "Google"],
          [i$2, m$7],
        ],
        [/droid.+aft([\w])(\sbuild\/|\))/i],
        [e$3, [s$4, "Amazon"], [i$2, m$7]],
        [/\(dtv[\);].+(aquos)/i],
        [e$3, [s$4, "Sharp"], [i$2, m$7]],
        [/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],
        [
          [s$4, p$4.trim],
          [e$3, p$4.trim],
          [i$2, m$7],
        ],
        [/[\s\/\(](android\s|smart[-\s]?|opera\s)tv[;\)\s]/i],
        [[i$2, m$7]],
        [/((pebble))app\/[\d\.]+\s/i],
        [s$4, e$3, [i$2, E$4]],
        [/droid.+;\s(glass)\s\d/i],
        [e$3, [s$4, "Google"], [i$2, E$4]],
        [/droid\s[\d\.]+;\s(wt63?0{2,3})\)/i],
        [e$3, [s$4, "Zebra"], [i$2, E$4]],
        [/(tesla)(?:\sqtcarbrowser|\/20[12]\d\.[\w\.-]+)/i],
        [s$4, [i$2, M$5]],
        [/droid .+?; ([^;]+?)(?: build|\) applewebkit).+? mobile safari/i],
        [e$3, [i$2, d$7]],
        [/droid .+?;\s([^;]+?)(?: build|\) applewebkit).+?(?! mobile) safari/i],
        [e$3, [i$2, n$2]],
        [/\s(tablet|tab)[;\/]/i, /\s(mobile)(?:[;\/]|\ssafari)/i],
        [[i$2, p$4.lowerize]],
        [/(android[\w\.\s\-]{0,9});.+build/i],
        [e$3, [s$4, "Generic"]],
        [/(phone)/i],
        [[i$2, d$7]],
      ],
      engine: [
        [/windows.+\sedge\/([\w\.]+)/i],
        [r$2, [o$1, "EdgeHTML"]],
        [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
        [r$2, [o$1, "Blink"]],
        [
          /(presto)\/([\w\.]+)/i,
          /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
          /ekioh(flow)\/([\w\.]+)/i,
          /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,
          /(icab)[\/\s]([23]\.[\d\.]+)/i,
        ],
        [o$1, r$2],
        [/rv\:([\w\.]{1,9})\b.+(gecko)/i],
        [r$2, o$1],
      ],
      os: [
        [/microsoft\s(windows)\s(vista|xp)/i],
        [o$1, r$2],
        [
          /(windows)\snt\s6\.2;\s(arm)/i,
          /(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i,
          /(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)(?!.+xbox)/i,
        ],
        [o$1, [r$2, f.str, y$4.os.windows.version]],
        [/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],
        [
          [o$1, "Windows"],
          [r$2, f.str, y$4.os.windows.version],
        ],
        [
          /ip[honead]{2,4}\b(?:.*os\s([\w]+)\slike\smac|;\sopera)/i,
          /cfnetwork\/.+darwin/i,
        ],
        [
          [r$2, /_/g, "."],
          [o$1, "iOS"],
        ],
        [
          /(mac\sos\sx)\s?([\w\s\.]*)/i,
          /(macintosh|mac(?=_powerpc)\s)(?!.+haiku)/i,
        ],
        [
          [o$1, "Mac OS"],
          [r$2, /_/g, "."],
        ],
        [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
        [r$2, o$1],
        [
          /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|sailfish|contiki|openharmony)[\/\s-]?([\w\.]*)/i,
          /(blackberry)\w*\/([\w\.]*)/i,
          /(tizen|kaios)[\/\s]([\w\.]+)/i,
          /\((series40);/i,
        ],
        [o$1, r$2],
        [/\(bb(10);/i],
        [r$2, [o$1, "BlackBerry"]],
        [/(?:symbian\s?os|symbos|s60(?=;)|series60)[\/\s-]?([\w\.]*)/i],
        [r$2, [o$1, "Symbian"]],
        [/mozilla.+\(mobile;.+gecko.+firefox/i],
        [[o$1, "Firefox OS"]],
        [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
        [r$2, [o$1, "webOS"]],
        [/crkey\/([\d\.]+)/i],
        [r$2, [o$1, "Chromecast"]],
        [/(cros)\s[\w]+\s([\w\.]+\w)/i],
        [[o$1, "Chromium OS"], r$2],
        [
          /(nintendo|playstation)\s([wids345portablevuch]+)/i,
          /(xbox);\s+xbox\s([^\);]+)/i,
          /(mint)[\/\s\(\)]?(\w*)/i,
          /(mageia|vectorlinux)[;\s]/i,
          /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?=\slinux)|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus|raspbian)(?:\sgnu\/linux)?(?:\slinux)?[\/\s-]?(?!chrom|package)([\w\.-]*)/i,
          /(hurd|linux)\s?([\w\.]*)/i,
          /(gnu)\s?([\w\.]*)/i,
          /\s([frentopc-]{0,4}bsd|dragonfly)\s?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
          /(haiku)\s(\w+)/i,
        ],
        [o$1, r$2],
        [/(sunos)\s?([\w\.\d]*)/i],
        [[o$1, "Solaris"], r$2],
        [
          /((?:open)?solaris)[\/\s-]?([\w\.]*)/i,
          /(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i,
          /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms|fuchsia)/i,
          /(unix)\s?([\w\.]*)/i,
        ],
        [o$1, r$2],
      ],
    },
    h$c =
      typeof window != "undefined" &&
      window.navigator &&
      window.navigator.userAgent
        ? window.navigator.userAgent
        : z$3;
  class UAParser {
    constructor() {
      (this.VERSION = R$3),
        (this.BROWSER = { NAME: o$1, MAJOR: q$3, VERSION: r$2 }),
        (this.CPU = { ARCHITECTURE: c$2 }),
        (this.DEVICE = {
          MODEL: e$3,
          VENDOR: s$4,
          TYPE: i$2,
          CONSOLE: v$7,
          MOBILE: d$7,
          SMARTTV: m$7,
          TABLET: n$2,
          WEARABLE: E$4,
          EMBEDDED: M$5,
        }),
        (this.ENGINE = { NAME: o$1, VERSION: r$2 }),
        (this.OS = { NAME: o$1, VERSION: r$2 });
    }
  }
  (UAParser.prototype.getBrowser = function () {
    var Et = { name: void 0, version: void 0 };
    return (
      f.rgx.call(Et, h$c, x$5.browser), (Et.major = p$4.major(Et.version)), Et
    );
  }),
    (UAParser.prototype.getCPU = function () {
      var Et = { architecture: void 0 };
      return f.rgx.call(Et, h$c, x$5.cpu), Et;
    }),
    (UAParser.prototype.getDevice = function () {
      var Et = { vendor: void 0, model: void 0, type: void 0 };
      return f.rgx.call(Et, h$c, x$5.device), Et;
    }),
    (UAParser.prototype.getEngine = function () {
      var Et = { name: void 0, version: void 0 };
      return f.rgx.call(Et, h$c, x$5.engine), Et;
    }),
    (UAParser.prototype.getOS = function () {
      var Et = { name: void 0, version: void 0 };
      return f.rgx.call(Et, h$c, x$5.os), Et;
    }),
    (UAParser.prototype.getUA = function () {
      return h$c;
    }),
    (UAParser.prototype.getResult = function () {
      return {
        ua: this.getUA(),
        browser: this.getBrowser(),
        engine: this.getEngine(),
        os: this.getOS(),
        device: this.getDevice(),
        cpu: this.getCPU(),
      };
    });
  const resetSeesionId = () => {
    var Et,
      es = E$6.sett.appId,
      ts = w$9.getCurrentSesssionKey(es),
      is = getCookie(ts),
      ns = (isJSON(is) && JSON.parse(is)) || [];
    for (Et of ns)
      Et.appId === es &&
        (E$6.setData("isFirstUpload", 1),
        E$5.initUsdTime(),
        (Et.sessionID = uuid()),
        c$5({ t: GC.INIT_SESSION_START }),
        w$9.resetTakeFullSnapshotToSun(Et.sessionID),
        window !== window.parent &&
          w$9.resetTakeFullSnapshotToParent(Et.sessionID),
        (Et.lastVisitedTime = new Date().getTime()),
        (Et.startTime = 0),
        (Et.isRestSID = !0),
        setCookie(ts, JSON.stringify(ns), w$9.getSessionConfig()));
  };
  var p$3 = (Et, es, ts) =>
      new Promise((is, ns) => {
        var rs = (ds) => {
            try {
              os(ts.next(ds));
            } catch (as) {
              ns(as);
            }
          },
          ss = (ds) => {
            try {
              os(ts.throw(ds));
            } catch (as) {
              ns(as);
            }
          },
          os = (ds) =>
            ds.done ? is(ds.value) : Promise.resolve(ds.value).then(rs, ss);
        os((ts = ts.apply(Et, es)).next());
      }),
    T$6 = "br-client";
  const w$6 = "bonree-device-info",
    c$1 = {};
  let n$1 = {};
  const O$5 = function () {
    var Et = getCookie(T$6);
    return (
      isReadable(Et) ||
        ((Et = uuid()),
        setCookie(T$6, Et, {
          path: "/",
          expires: "Thu, 01 Jan 2099 00:00:01 GMT;",
        })),
      Et
    );
  };
  function M$4() {
    if (isEmpty(n$1) || !UAParser)
      try {
        var Et = new UAParser();
        n$1 = (Et && Et.getResult()) || {};
      } catch (es) {
        log(es);
      }
  }
  function P$6(Et) {
    if (Et)
      return /iphone|ipad|ios/i.test(Et)
        ? 0
        : /android/i.test(Et)
        ? 1
        : /windows/i.test(Et)
        ? 2
        : /harmonyOS|OpenHarmony/i.test(Et)
        ? 3
        : /mac/i.test(Et)
        ? 4
        : 1;
  }
  function E$3() {
    return (getCookie(w$6) && JSON.parse(getCookie(w$6))) || null;
  }
  function getDeviceInfo() {
    try {
      b$3() && M$4(),
        (c$1.di = O$5()),
        (c$1.a = "user"),
        (c$1.ot =
          n$1 && isDefined(n$1.os.name)
            ? n$1.os.name && P$6(n$1.os.name)
            : "1"),
        (c$1.ram =
          (isDefined(navigator.deviceMemory) &&
            1024 * navigator.deviceMemory) ||
          -1),
        (c$1.l = navigator.language || navigator.userLanguage),
        (c$1.ds = window.screen.width + "*" + window.screen.height),
        (c$1.rom = -1),
        (c$1.bn = n$1 && isDefined(n$1.os) ? n$1.os.name : "unknown"),
        (c$1.omv =
          n$1 && n$1.os && n$1.os.version ? n$1.os.version : "unknown"),
        (c$1.ci =
          (n$1 &&
            isDefined(n$1.cpu) &&
            n$1.cpu.architecture &&
            n$1.cpu.architecture) ||
          "unknown"),
        (c$1.ctn =
          n$1 && isDefined(n$1.browser) ? n$1.browser.name : "unknown"),
        (c$1.ctv =
          n$1 && n$1.browser && n$1.browser.version
            ? n$1.browser.version
            : "unknown"),
        isDefined(n$1.device) &&
          isDefined(n$1.device.model) &&
          (c$1.m = n$1.device.model),
        setDeviceForLog(c$1.di);
    } catch (es) {
      return log(es, !0), {};
    }
    const Et = E$3();
    return (
      Et &&
        ["ctn", "ctv", "bn", "omv"].some((es) => Et[es] !== c$1[es]) &&
        resetSeesionId(),
      setCookie(w$6, JSON.stringify(c$1)),
      c$1
    );
  }
  function b$3() {
    try {
      var Et = ["Firefox/47"],
        es =
          (navigator.userAgent &&
            navigator.userAgent.match(
              /(firefox|msie|chrome|safari)[/\s]([\d.]+)/gi
            )) ||
          void 0;
      if (es && 0 < es.length) {
        var ts = es[0].split("/");
        for (let is = 0, ns = Et.length - 1; is <= ns; is++) {
          let rs = Et[is];
          if (
            (rs = rs.split("/"))[0] === ts[0] &&
            Number(ts[1].split(".")[0]) <= Number(rs[1])
          )
            return;
        }
      }
      return 1;
    } catch (is) {
      log(is);
    }
  }
  let K$1 = class {
    zero(Et) {
      if (0 < Et) {
        for (var es = "0", ts = 1; ts < Et; ts++) es += es;
        return es;
      }
      return "";
    }
    stringToArray(Et) {
      for (var es = [], ts = Et.length, is = 0; is < ts; is++) {
        var ns,
          rs,
          ss,
          os,
          ds,
          as = Et.charCodeAt(is);
        19968 < as && as < 40869
          ? ((rs = "1110"),
            (os = ss = "10"),
            (ds = (ns = as.toString(2)).length) <= 6
              ? ((os = os + this.zero(6 - ds) + ns),
                (ss += this.zero(6)),
                (rs += this.zero(4)))
              : 6 < ds && ds <= 12
              ? ((os += ns.slice(-6)),
                (ss = ss + this.zero(12 - ds) + ns.substr(0, ds - 6)),
                (rs += this.zero(4)))
              : ((os += ns.slice(-6)),
                (ss += ns.substr(ds - 12, 6)),
                (rs = rs + this.zero(16 - ds) + ns.substr(0, ds - 12))),
            es.push(parseInt(rs, 2), parseInt(ss, 2), parseInt(os, 2)))
          : es.push(as);
      }
      return es;
    }
    stringToArrayBufferInUtf8(Et) {
      return this.stringToArray(Et);
    }
  };
  Array.prototype.Bonreefill ||
    Object.defineProperty(Array.prototype, "Bonreefill", {
      value: function (Et) {
        if (this == null) throw new TypeError("this is null or not defined");
        for (
          var es = Object(this),
            ts = es.length >>> 0,
            ns = arguments[1] >> 0,
            is = ns < 0 ? Math.max(ts + ns, 0) : Math.min(ns, ts),
            ns = arguments[2],
            ns = ns === void 0 ? ts : ns >> 0,
            rs = ns < 0 ? Math.max(ts + ns, 0) : Math.min(ns, ts);
          is < rs;

        )
          (es[is] = Et), is++;
        return es;
      },
    });
  var l$2 = 16,
    y$3 = new Uint8Array([
      214, 144, 233, 254, 204, 225, 61, 183, 22, 182, 20, 194, 40, 251, 44, 5,
      43, 103, 154, 118, 42, 190, 4, 195, 170, 68, 19, 38, 73, 134, 6, 153, 156,
      66, 80, 244, 145, 239, 152, 122, 51, 84, 11, 67, 237, 207, 172, 98, 228,
      179, 28, 169, 201, 8, 232, 149, 128, 223, 148, 250, 117, 143, 63, 166, 71,
      7, 167, 252, 243, 115, 23, 186, 131, 89, 60, 25, 230, 133, 79, 168, 104,
      107, 129, 178, 113, 100, 218, 139, 248, 235, 15, 75, 112, 86, 157, 53, 30,
      36, 14, 94, 99, 88, 209, 162, 37, 34, 124, 59, 1, 33, 120, 135, 212, 0,
      70, 87, 159, 211, 39, 82, 76, 54, 2, 231, 160, 196, 200, 158, 234, 191,
      138, 210, 64, 199, 56, 181, 163, 247, 242, 206, 249, 97, 21, 161, 224,
      174, 93, 164, 155, 52, 26, 85, 173, 147, 50, 48, 245, 140, 177, 227, 29,
      246, 226, 46, 130, 102, 202, 96, 192, 41, 35, 171, 13, 83, 78, 111, 213,
      219, 55, 69, 222, 253, 142, 47, 3, 255, 106, 114, 109, 108, 91, 81, 141,
      27, 175, 146, 187, 221, 188, 127, 17, 217, 92, 65, 31, 16, 90, 216, 10,
      193, 49, 136, 165, 205, 123, 189, 45, 116, 208, 18, 184, 229, 180, 176,
      137, 105, 151, 74, 12, 150, 119, 126, 101, 185, 241, 9, 197, 110, 198,
      132, 24, 240, 125, 236, 58, 220, 77, 32, 121, 238, 95, 62, 215, 203, 57,
      72,
    ]),
    S$3 =
      ((Uint8Array.prototype.Bonreefill = function () {
        Array.prototype.Bonreefill.apply(this, arguments);
      }),
      Uint8Array.prototype.Bonreeslice ||
        (Uint8Array.prototype.Bonreeslice = function (Et) {
          return new Uint8Array(this).subarray(Et);
        }),
      new Uint32Array([
        462357, 472066609, 943670861, 1415275113, 1886879365, 2358483617,
        2830087869, 3301692121, 3773296373, 4228057617, 404694573, 876298825,
        1347903077, 1819507329, 2291111581, 2762715833, 3234320085, 3705924337,
        4177462797, 337322537, 808926789, 1280531041, 1752135293, 2223739545,
        2695343797, 3166948049, 3638552301, 4110090761, 269950501, 741554753,
        1213159005, 1684763257,
      ])),
    g$4 = new Uint32Array([2746333894, 1453994832, 1736282519, 2993693404]);
  let D$5 = class {
    constructor(Et) {
      if (
        ((this.Crypt = new K$1()),
        (Et = this.Crypt.stringToArrayBufferInUtf8(Et.key)),
        Et.length !== 16)
      )
        throw new Error("key should be a 16 bytes string");
      (this.key = Et),
        (this.mode = "ecb"),
        (this.encryptRoundKeys = new Uint32Array(32)),
        this.spawnEncryptRoundKeys(),
        (Uint32Array.prototype.reverse = function () {
          Array.prototype.reverse.apply(this, arguments);
        }),
        (this.decryptRoundKeys = new Uint32Array(this.encryptRoundKeys)),
        this.decryptRoundKeys.reverse();
    }
    doBlockCrypt(Et, es) {
      var ts = new Uint32Array(36);
      ts.set(Et, 0);
      for (var is = 0; is < 32; is++)
        ts[is + 4] =
          ts[is] ^
          this.tTransform1(ts[is + 1] ^ ts[is + 2] ^ ts[is + 3] ^ es[is]);
      return (
        (Et = new Uint32Array(4)),
        (Et[0] = ts[35]),
        (Et[1] = ts[34]),
        (Et[2] = ts[33]),
        (Et[3] = ts[32]),
        Et
      );
    }
    spawnEncryptRoundKeys() {
      var Et = new Uint32Array(4),
        es =
          ((Et[0] =
            (this.key[0] << 24) |
            (this.key[1] << 16) |
            (this.key[2] << 8) |
            this.key[3]),
          (Et[1] =
            (this.key[4] << 24) |
            (this.key[5] << 16) |
            (this.key[6] << 8) |
            this.key[7]),
          (Et[2] =
            (this.key[8] << 24) |
            (this.key[9] << 16) |
            (this.key[10] << 8) |
            this.key[11]),
          (Et[3] =
            (this.key[12] << 24) |
            (this.key[13] << 16) |
            (this.key[14] << 8) |
            this.key[15]),
          new Uint32Array(36));
      (es[0] = Et[0] ^ g$4[0]),
        (es[1] = Et[1] ^ g$4[1]),
        (es[2] = Et[2] ^ g$4[2]),
        (es[3] = Et[3] ^ g$4[3]);
      for (var ts = 0; ts < 32; ts++)
        (es[ts + 4] =
          es[ts] ^
          this.tTransform2(es[ts + 1] ^ es[ts + 2] ^ es[ts + 3] ^ S$3[ts])),
          (this.encryptRoundKeys[ts] = es[ts + 4]);
    }
    rotateLeft(Et, es) {
      return (Et << es) | (Et >>> (32 - es));
    }
    linearTransform1(Et) {
      return (
        Et ^
        this.rotateLeft(Et, 2) ^
        this.rotateLeft(Et, 10) ^
        this.rotateLeft(Et, 18) ^
        this.rotateLeft(Et, 24)
      );
    }
    linearTransform2(Et) {
      return Et ^ this.rotateLeft(Et, 13) ^ this.rotateLeft(Et, 23);
    }
    tauTransform(Et) {
      return (
        (y$3[(Et >>> 24) & 255] << 24) |
        (y$3[(Et >>> 16) & 255] << 16) |
        (y$3[(Et >>> 8) & 255] << 8) |
        y$3[255 & Et]
      );
    }
    tTransform1(Et) {
      return (Et = this.tauTransform(Et)), this.linearTransform1(Et);
    }
    tTransform2(Et) {
      return (Et = this.tauTransform(Et)), this.linearTransform2(Et);
    }
    padding(Et) {
      var es, ts;
      return Et === null
        ? null
        : ((es = l$2 - (Et.length % l$2)),
          (ts = new Uint8Array(Et.length + es)).set(Et, 0),
          ts.Bonreefill(es, Et.length),
          ts);
    }
    dePadding(Et) {
      var es;
      return Et === null
        ? null
        : ((es = Et[Et.length - 1]), Et.Bonreeslice(0, Et.length - es));
    }
    uint8ToUint32Block(Et, es) {
      es === void 0 && (es = 0);
      var ts = new Uint32Array(4);
      return (
        (ts[0] =
          (Et[es] << 24) | (Et[es + 1] << 16) | (Et[es + 2] << 8) | Et[es + 3]),
        (ts[1] =
          (Et[es + 4] << 24) |
          (Et[es + 5] << 16) |
          (Et[es + 6] << 8) |
          Et[es + 7]),
        (ts[2] =
          (Et[es + 8] << 24) |
          (Et[es + 9] << 16) |
          (Et[es + 10] << 8) |
          Et[es + 11]),
        (ts[3] =
          (Et[es + 12] << 24) |
          (Et[es + 13] << 16) |
          (Et[es + 14] << 8) |
          Et[es + 15]),
        ts
      );
    }
    encrypt(Et) {
      for (
        var Et = this.Crypt.stringToArrayBufferInUtf8(Et),
          es = this.padding(Et),
          ts = es.length / l$2,
          is = new Uint8Array(es.length),
          ns = 0;
        ns < ts;
        ns++
      )
        for (
          var rs = ns * l$2,
            ss = this.uint8ToUint32Block(es, rs),
            os = this.doBlockCrypt(ss, this.encryptRoundKeys),
            ds = 0;
          ds < l$2;
          ds++
        )
          is[rs + ds] = (os[parseInt(ds / 4)] >> (((3 - ds) % 4) * 8)) & 255;
      return is;
    }
  };
  function N$3() {
    return p$3(this, null, function* () {
      let Et = !1;
      var es;
      if (
        (window.webkitRequestFileSystem &&
          window.webkitRequestFileSystem(
            window.TEMPORARY,
            1,
            function () {
              Et = !1;
            },
            function (ts) {
              Et = !0;
            }
          ),
        typeof InstallTrigger != "undefined" &&
          ((es = yield new Promise(function (ts, is) {
            try {
              const ns = indexedDB.open("test");
              (ns.onerror = function () {
                return ts(!0);
              }),
                (ns.onsuccess = function () {
                  return ts(!1);
                });
            } catch (ns) {
              return ts(!1);
            }
          })),
          (Et = !!es)),
        -1 < window.navigator.userAgent.indexOf("Edge") ||
          -1 < window.navigator.userAgent.indexOf("Chrome"))
      )
        if ("storage" in navigator && "estimate" in navigator.storage) {
          const { usage: ts, quota: is } = yield navigator.storage.estimate();
          Et = is < 12e8;
        } else Et = !1;
      return Et;
    });
  }
  function le$3(Et) {
    let es = Et.length;
    for (; 0 <= --es; ) Et[es] = 0;
  }
  document &&
    document.addEventListener("readystatechange", (Et) =>
      p$3(void 0, null, function* () {
        if (Et.target.readyState === "complete" && b$3())
          try {
            var es = yield N$3();
            isDefined(window.bonreeRUM) && (bonreeRUM.isPrivate = es);
          } catch (ts) {
            log(ts);
          }
      })
    );
  const Bi = 0,
    yt$1 = 1,
    Ki = 2,
    Pi = 3,
    Xi = 258,
    Ye$1 = 29,
    ue$3 = 256,
    we$1 = ue$3 + 1 + Ye$1,
    fe$2 = 30,
    Ge = 19,
    mt$1 = 2 * we$1 + 1,
    Q$3 = 15,
    je$1 = 16,
    Yi = 7,
    We$1 = 256,
    zt$1 = 16,
    St$1 = 17,
    At$1 = 18,
    Ve$1 = new Uint8Array([
      0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5,
      5, 5, 5, 0,
    ]),
    Ne$2 = new Uint8Array([
      0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10,
      11, 11, 12, 12, 13, 13,
    ]),
    Gi = new Uint8Array([
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7,
    ]),
    Rt$1 = new Uint8Array([
      16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
    ]),
    ji = 512,
    K = new Array(2 * (we$1 + 2)),
    be$1 = (le$3(K), new Array(2 * fe$2)),
    ge$1 = (le$3(be$1), new Array(ji)),
    pe$3 = (le$3(ge$1), new Array(Xi - Pi + 1)),
    Je$1 = (le$3(pe$3), new Array(Ye$1)),
    Le$1 = (le$3(Je$1), new Array(fe$2));
  function Qe$1(Et, es, ts, is, ns) {
    (this.static_tree = Et),
      (this.extra_bits = es),
      (this.extra_base = ts),
      (this.elems = is),
      (this.max_length = ns),
      (this.has_stree = Et && Et.length);
  }
  let Tt$1, Dt, Zt$1;
  function qe$1(Et, es) {
    (this.dyn_tree = Et), (this.max_code = 0), (this.stat_desc = es);
  }
  le$3(Le$1);
  const It$1 = (Et) => (Et < 256 ? ge$1[Et] : ge$1[256 + (Et >>> 7)]),
    xe$1 = (Et, es) => {
      (Et.pending_buf[Et.pending++] = 255 & es),
        (Et.pending_buf[Et.pending++] = (es >>> 8) & 255);
    },
    N$2 = (Et, es, ts) => {
      Et.bi_valid > je$1 - ts
        ? ((Et.bi_buf |= (es << Et.bi_valid) & 65535),
          xe$1(Et, Et.bi_buf),
          (Et.bi_buf = es >> (je$1 - Et.bi_valid)),
          (Et.bi_valid += ts - je$1))
        : ((Et.bi_buf |= (es << Et.bi_valid) & 65535), (Et.bi_valid += ts));
    },
    F$1 = (Et, es, ts) => {
      N$2(Et, ts[2 * es], ts[2 * es + 1]);
    },
    Ot$1 = (Et, es) => {
      let ts = 0;
      for (; (ts |= 1 & Et), (Et >>>= 1), (ts <<= 1), 0 < --es; );
      return ts >>> 1;
    },
    Wi = (Et) => {
      Et.bi_valid === 16
        ? (xe$1(Et, Et.bi_buf), (Et.bi_buf = 0), (Et.bi_valid = 0))
        : 8 <= Et.bi_valid &&
          ((Et.pending_buf[Et.pending++] = 255 & Et.bi_buf),
          (Et.bi_buf >>= 8),
          (Et.bi_valid -= 8));
    },
    Vi = (Et, es) => {
      var ts = es.dyn_tree,
        is = es.max_code,
        ns = es.stat_desc.static_tree,
        rs = es.stat_desc.has_stree,
        ss = es.stat_desc.extra_bits,
        os = es.stat_desc.extra_base,
        ds = es.stat_desc.max_length;
      let as,
        cs,
        fs,
        us,
        ls,
        hs,
        gs = 0;
      for (us = 0; us <= Q$3; us++) Et.bl_count[us] = 0;
      for (
        ts[2 * Et.heap[Et.heap_max] + 1] = 0, as = Et.heap_max + 1;
        as < mt$1;
        as++
      )
        (cs = Et.heap[as]),
          (us = ts[2 * ts[2 * cs + 1] + 1] + 1) > ds && ((us = ds), gs++),
          (ts[2 * cs + 1] = us),
          cs > is ||
            (Et.bl_count[us]++,
            (ls = 0),
            cs >= os && (ls = ss[cs - os]),
            (hs = ts[2 * cs]),
            (Et.opt_len += hs * (us + ls)),
            !rs) ||
            (Et.static_len += hs * (ns[2 * cs + 1] + ls));
      if (gs !== 0) {
        do for (us = ds - 1; Et.bl_count[us] === 0; ) us--;
        while (
          (Et.bl_count[us]--,
          (Et.bl_count[us + 1] += 2),
          Et.bl_count[ds]--,
          0 < (gs -= 2))
        );
        for (us = ds; us !== 0; us--)
          for (cs = Et.bl_count[us]; cs !== 0; )
            is < (fs = Et.heap[--as]) ||
              (ts[2 * fs + 1] !== us &&
                ((Et.opt_len += (us - ts[2 * fs + 1]) * ts[2 * fs]),
                (ts[2 * fs + 1] = us)),
              cs--);
      }
    },
    Nt$1 = (Et, es, ts) => {
      var is = new Array(Q$3 + 1);
      let ns,
        rs,
        ss = 0;
      for (ns = 1; ns <= Q$3; ns++)
        (ss = (ss + ts[ns - 1]) << 1), (is[ns] = ss);
      for (rs = 0; rs <= es; rs++) {
        var os = Et[2 * rs + 1];
        os !== 0 && (Et[2 * rs] = Ot$1(is[os]++, os));
      }
    },
    Ji = () => {
      let Et, es, ts, is, ns;
      var rs = new Array(Q$3 + 1);
      for (ts = 0, is = 0; is < Ye$1 - 1; is++)
        for (Je$1[is] = ts, Et = 0; Et < 1 << Ve$1[is]; Et++) pe$3[ts++] = is;
      for (pe$3[ts - 1] = is, ns = 0, is = 0; is < 16; is++)
        for (Le$1[is] = ns, Et = 0; Et < 1 << Ne$2[is]; Et++) ge$1[ns++] = is;
      for (ns >>= 7; is < fe$2; is++)
        for (Le$1[is] = ns << 7, Et = 0; Et < 1 << (Ne$2[is] - 7); Et++)
          ge$1[256 + ns++] = is;
      for (es = 0; es <= Q$3; es++) rs[es] = 0;
      for (Et = 0; Et <= 143; ) (K[2 * Et + 1] = 8), Et++, rs[8]++;
      for (; Et <= 255; ) (K[2 * Et + 1] = 9), Et++, rs[9]++;
      for (; Et <= 279; ) (K[2 * Et + 1] = 7), Et++, rs[7]++;
      for (; Et <= 287; ) (K[2 * Et + 1] = 8), Et++, rs[8]++;
      for (Nt$1(K, we$1 + 1, rs), Et = 0; Et < fe$2; Et++)
        (be$1[2 * Et + 1] = 5), (be$1[2 * Et] = Ot$1(Et, 5));
      (Tt$1 = new Qe$1(K, Ve$1, ue$3 + 1, we$1, Q$3)),
        (Dt = new Qe$1(be$1, Ne$2, 0, fe$2, Q$3)),
        (Zt$1 = new Qe$1(new Array(0), Gi, 0, Ge, Yi));
    },
    Lt = (Et) => {
      let es;
      for (es = 0; es < we$1; es++) Et.dyn_ltree[2 * es] = 0;
      for (es = 0; es < fe$2; es++) Et.dyn_dtree[2 * es] = 0;
      for (es = 0; es < Ge; es++) Et.bl_tree[2 * es] = 0;
      (Et.dyn_ltree[2 * We$1] = 1),
        (Et.opt_len = Et.static_len = 0),
        (Et.sym_next = Et.matches = 0);
    },
    Ut$1 = (Et) => {
      8 < Et.bi_valid
        ? xe$1(Et, Et.bi_buf)
        : 0 < Et.bi_valid && (Et.pending_buf[Et.pending++] = Et.bi_buf),
        (Et.bi_buf = 0),
        (Et.bi_valid = 0);
    },
    Ct$1 = (Et, es, ts, is) => {
      var ns = 2 * es,
        rs = 2 * ts;
      return Et[ns] < Et[rs] || (Et[ns] === Et[rs] && is[es] <= is[ts]);
    },
    et$1 = (Et, es, ts) => {
      var is = Et.heap[ts];
      let ns = ts << 1;
      for (
        ;
        ns <= Et.heap_len &&
        (ns < Et.heap_len &&
          Ct$1(es, Et.heap[ns + 1], Et.heap[ns], Et.depth) &&
          ns++,
        !Ct$1(es, is, Et.heap[ns], Et.depth));

      )
        (Et.heap[ts] = Et.heap[ns]), (ts = ns), (ns <<= 1);
      Et.heap[ts] = is;
    },
    $t$1 = (Et, es, ts) => {
      let is,
        ns,
        rs,
        ss,
        os = 0;
      if (Et.sym_next !== 0)
        for (
          ;
          (is = 255 & Et.pending_buf[Et.sym_buf + os++]),
            (is += (255 & Et.pending_buf[Et.sym_buf + os++]) << 8),
            (ns = Et.pending_buf[Et.sym_buf + os++]),
            is == 0
              ? F$1(Et, ns, es)
              : ((rs = pe$3[ns]),
                F$1(Et, rs + ue$3 + 1, es),
                (ss = Ve$1[rs]) !== 0 && ((ns -= Je$1[rs]), N$2(Et, ns, ss)),
                is--,
                (rs = It$1(is)),
                F$1(Et, rs, ts),
                (ss = Ne$2[rs]) !== 0 && ((is -= Le$1[rs]), N$2(Et, is, ss))),
            os < Et.sym_next;

        );
      F$1(Et, We$1, es);
    },
    tt$1 = (Et, es) => {
      var ts = es.dyn_tree,
        is = es.stat_desc.static_tree,
        ns = es.stat_desc.has_stree,
        rs = es.stat_desc.elems;
      let ss,
        os,
        ds,
        as = -1;
      for (Et.heap_len = 0, Et.heap_max = mt$1, ss = 0; ss < rs; ss++)
        ts[2 * ss] !== 0
          ? ((Et.heap[++Et.heap_len] = as = ss), (Et.depth[ss] = 0))
          : (ts[2 * ss + 1] = 0);
      for (; Et.heap_len < 2; )
        (ts[2 * (ds = Et.heap[++Et.heap_len] = as < 2 ? ++as : 0)] = 1),
          (Et.depth[ds] = 0),
          Et.opt_len--,
          ns && (Et.static_len -= is[2 * ds + 1]);
      for (es.max_code = as, ss = Et.heap_len >> 1; 1 <= ss; ss--)
        et$1(Et, ts, ss);
      for (
        ds = rs;
        (ss = Et.heap[1]),
          (Et.heap[1] = Et.heap[Et.heap_len--]),
          et$1(Et, ts, 1),
          (os = Et.heap[1]),
          (Et.heap[--Et.heap_max] = ss),
          (Et.heap[--Et.heap_max] = os),
          (ts[2 * ds] = ts[2 * ss] + ts[2 * os]),
          (Et.depth[ds] =
            (Et.depth[ss] >= Et.depth[os] ? Et.depth[ss] : Et.depth[os]) + 1),
          (ts[2 * ss + 1] = ts[2 * os + 1] = ds),
          (Et.heap[1] = ds++),
          et$1(Et, ts, 1),
          2 <= Et.heap_len;

      );
      (Et.heap[--Et.heap_max] = Et.heap[1]),
        Vi(Et, es),
        Nt$1(ts, as, Et.bl_count);
    },
    Ft$1 = (Et, es, ts) => {
      let is,
        ns,
        rs = -1,
        ss = es[1],
        os = 0,
        ds = 7,
        as = 4;
      for (
        ss === 0 && ((ds = 138), (as = 3)),
          es[2 * (ts + 1) + 1] = 65535,
          is = 0;
        is <= ts;
        is++
      )
        (ns = ss),
          (ss = es[2 * (is + 1) + 1]),
          (++os < ds && ns === ss) ||
            (os < as
              ? (Et.bl_tree[2 * ns] += os)
              : ns !== 0
              ? (ns !== rs && Et.bl_tree[2 * ns]++, Et.bl_tree[2 * zt$1]++)
              : os <= 10
              ? Et.bl_tree[2 * St$1]++
              : Et.bl_tree[2 * At$1]++,
            (os = 0),
            (rs = ns),
            (as =
              ss === 0
                ? ((ds = 138), 3)
                : ns === ss
                ? ((ds = 6), 3)
                : ((ds = 7), 4)));
    },
    Mt$1 = (Et, es, ts) => {
      let is,
        ns,
        rs = -1,
        ss = es[1],
        os = 0,
        ds = 7,
        as = 4;
      for (ss === 0 && ((ds = 138), (as = 3)), is = 0; is <= ts; is++)
        if (
          ((ns = ss), (ss = es[2 * (is + 1) + 1]), !(++os < ds && ns === ss))
        ) {
          if (os < as) for (; F$1(Et, ns, Et.bl_tree), --os != 0; );
          else
            ns !== 0
              ? (ns !== rs && (F$1(Et, ns, Et.bl_tree), os--),
                F$1(Et, zt$1, Et.bl_tree),
                N$2(Et, os - 3, 2))
              : os <= 10
              ? (F$1(Et, St$1, Et.bl_tree), N$2(Et, os - 3, 3))
              : (F$1(Et, At$1, Et.bl_tree), N$2(Et, os - 11, 7));
          (os = 0),
            (rs = ns),
            (as =
              ss === 0
                ? ((ds = 138), 3)
                : ns === ss
                ? ((ds = 6), 3)
                : ((ds = 7), 4));
        }
    },
    Qi = (Et) => {
      let es;
      for (
        Ft$1(Et, Et.dyn_ltree, Et.l_desc.max_code),
          Ft$1(Et, Et.dyn_dtree, Et.d_desc.max_code),
          tt$1(Et, Et.bl_desc),
          es = Ge - 1;
        3 <= es && Et.bl_tree[2 * Rt$1[es] + 1] === 0;
        es--
      );
      return (Et.opt_len += 3 * (es + 1) + 5 + 5 + 4), es;
    },
    qi = (Et, es, ts, is) => {
      let ns;
      for (
        N$2(Et, es - 257, 5), N$2(Et, ts - 1, 5), N$2(Et, is - 4, 4), ns = 0;
        ns < is;
        ns++
      )
        N$2(Et, Et.bl_tree[2 * Rt$1[ns] + 1], 3);
      Mt$1(Et, Et.dyn_ltree, es - 1), Mt$1(Et, Et.dyn_dtree, ts - 1);
    },
    en = (Et) => {
      let es,
        ts = 4093624447;
      for (es = 0; es <= 31; es++, ts >>>= 1)
        if (1 & ts && Et.dyn_ltree[2 * es] !== 0) return 0;
      if (
        Et.dyn_ltree[18] !== 0 ||
        Et.dyn_ltree[20] !== 0 ||
        Et.dyn_ltree[26] !== 0
      )
        return 1;
      for (es = 32; es < ue$3; es++) if (Et.dyn_ltree[2 * es] !== 0) return 1;
      return 0;
    };
  let Ht$1 = !1;
  const tn = (Et) => {
      Ht$1 || (Ji(), (Ht$1 = !0)),
        (Et.l_desc = new qe$1(Et.dyn_ltree, Tt$1)),
        (Et.d_desc = new qe$1(Et.dyn_dtree, Dt)),
        (Et.bl_desc = new qe$1(Et.bl_tree, Zt$1)),
        (Et.bi_buf = 0),
        (Et.bi_valid = 0),
        Lt(Et);
    },
    Bt = (Et, es, ts, is) => {
      N$2(Et, (Bi << 1) + (is ? 1 : 0), 3),
        Ut$1(Et),
        xe$1(Et, ts),
        xe$1(Et, ~ts),
        ts && Et.pending_buf.set(Et.window.subarray(es, es + ts), Et.pending),
        (Et.pending += ts);
    },
    nn = (Et) => {
      N$2(Et, yt$1 << 1, 3), F$1(Et, We$1, K), Wi(Et);
    },
    an = (Et, es, ts, is) => {
      let ns,
        rs,
        ss = 0;
      0 < Et.level
        ? (Et.strm.data_type === 2 && (Et.strm.data_type = en(Et)),
          tt$1(Et, Et.l_desc),
          tt$1(Et, Et.d_desc),
          (ss = Qi(Et)),
          (ns = (Et.opt_len + 3 + 7) >>> 3),
          (rs = (Et.static_len + 3 + 7) >>> 3) <= ns && (ns = rs))
        : (ns = rs = ts + 5),
        ts + 4 <= ns && es !== -1
          ? Bt(Et, es, ts, is)
          : Et.strategy === 4 || rs === ns
          ? (N$2(Et, (yt$1 << 1) + (is ? 1 : 0), 3), $t$1(Et, K, be$1))
          : (N$2(Et, (Ki << 1) + (is ? 1 : 0), 3),
            qi(Et, Et.l_desc.max_code + 1, Et.d_desc.max_code + 1, ss + 1),
            $t$1(Et, Et.dyn_ltree, Et.dyn_dtree)),
        Lt(Et),
        is && Ut$1(Et);
    },
    rn = (Et, es, ts) => (
      (Et.pending_buf[Et.sym_buf + Et.sym_next++] = es),
      (Et.pending_buf[Et.sym_buf + Et.sym_next++] = es >> 8),
      (Et.pending_buf[Et.sym_buf + Et.sym_next++] = ts),
      es === 0
        ? Et.dyn_ltree[2 * ts]++
        : (Et.matches++,
          es--,
          Et.dyn_ltree[2 * (pe$3[ts] + ue$3 + 1)]++,
          Et.dyn_dtree[2 * It$1(es)]++),
      Et.sym_next === Et.sym_end
    );
  var ln = tn,
    fn = Bt,
    on = an,
    _n = rn,
    hn = nn,
    dn = {
      _tr_init: ln,
      _tr_stored_block: fn,
      _tr_flush_block: on,
      _tr_tally: _n,
      _tr_align: hn,
    };
  const sn = (Et, es, ts, is) => {
    let ns = (65535 & Et) | 0,
      rs = ((Et >>> 16) & 65535) | 0,
      ss = 0;
    for (; ts !== 0; ) {
      for (
        ts -= ss = 2e3 < ts ? 2e3 : ts;
        (ns = (ns + es[is++]) | 0), (rs = (rs + ns) | 0), --ss;

      );
      (ns %= 65521), (rs %= 65521);
    }
    return ns | (rs << 16) | 0;
  };
  var ve$1 = sn;
  const cn = () => {
      let Et,
        es = [];
      for (var ts = 0; ts < 256; ts++) {
        Et = ts;
        for (var is = 0; is < 8; is++)
          Et = 1 & Et ? 3988292384 ^ (Et >>> 1) : Et >>> 1;
        es[ts] = Et;
      }
      return es;
    },
    un = new Uint32Array(cn()),
    wn = (Et, es, ts, is) => {
      var ns = un,
        rs = is + ts;
      Et ^= -1;
      for (let ss = is; ss < rs; ss++)
        Et = (Et >>> 8) ^ ns[255 & (Et ^ es[ss])];
      return -1 ^ Et;
    };
  var Z$3 = wn,
    q$2 = {
      2: "need dictionary",
      1: "stream end",
      0: "",
      "-1": "file error",
      "-2": "stream error",
      "-3": "data error",
      "-4": "insufficient memory",
      "-5": "buffer error",
      "-6": "incompatible version",
    },
    ee$1 = {
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_MEM_ERROR: -4,
      Z_BUF_ERROR: -5,
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      Z_BINARY: 0,
      Z_TEXT: 1,
      Z_UNKNOWN: 2,
      Z_DEFLATED: 8,
    };
  const {
      _tr_init: bn,
      _tr_stored_block: it$1,
      _tr_flush_block: gn,
      _tr_tally: Y$1,
      _tr_align: pn,
    } = dn,
    {
      Z_NO_FLUSH: G$2,
      Z_PARTIAL_FLUSH: xn,
      Z_FULL_FLUSH: vn,
      Z_FINISH: C$3,
      Z_BLOCK: Kt$1,
      Z_OK: I$6,
      Z_STREAM_END: Pt$1,
      Z_STREAM_ERROR: M$3,
      Z_DATA_ERROR: kn,
      Z_BUF_ERROR: nt$1,
      Z_DEFAULT_COMPRESSION: En,
      Z_FILTERED: yn,
      Z_HUFFMAN_ONLY: Ue$1,
      Z_RLE: mn,
      Z_FIXED: zn,
      Z_DEFAULT_STRATEGY: Sn,
      Z_UNKNOWN: An,
      Z_DEFLATED: Ce$1,
    } = ee$1,
    Rn = 9,
    Tn = 15,
    Dn = 8,
    Zn = 29,
    In = 256,
    at$1 = In + 1 + Zn,
    On = 30,
    Nn = 19,
    Ln = 2 * at$1 + 1,
    Un = 15,
    v$6 = 3,
    j$1 = 258,
    H$4 = j$1 + v$6 + 1,
    Cn = 32,
    oe$1 = 42,
    rt$1 = 57,
    lt$1 = 69,
    ft$1 = 73,
    ot$1 = 91,
    _t$1 = 103,
    te = 113,
    ke$1 = 666,
    O$4 = 1,
    _e$2 = 2,
    ie$1 = 3,
    he$2 = 4,
    $n = 3,
    ne$1 = (Et, es) => ((Et.msg = q$2[es]), es),
    Xt$1 = (Et) => 2 * Et - (4 < Et ? 9 : 0),
    W$3 = (Et) => {
      let es = Et.length;
      for (; 0 <= --es; ) Et[es] = 0;
    },
    Fn = (Et) => {
      let es,
        ts,
        is,
        ns = Et.w_size;
      for (
        es = Et.hash_size, is = es;
        (ts = Et.head[--is]), (Et.head[is] = ts >= ns ? ts - ns : 0), --es;

      );
      for (
        es = ns, is = es;
        (ts = Et.prev[--is]), (Et.prev[is] = ts >= ns ? ts - ns : 0), --es;

      );
    };
  let Mn = (Et, es, ts) => ((es << Et.hash_shift) ^ ts) & Et.hash_mask,
    V$2 = Mn;
  const L$5 = (Et) => {
      var es = Et.state;
      let ts = es.pending;
      (ts = ts > Et.avail_out ? Et.avail_out : ts) !== 0 &&
        (Et.output.set(
          es.pending_buf.subarray(es.pending_out, es.pending_out + ts),
          Et.next_out
        ),
        (Et.next_out += ts),
        (es.pending_out += ts),
        (Et.total_out += ts),
        (Et.avail_out -= ts),
        (es.pending -= ts),
        es.pending === 0) &&
        (es.pending_out = 0);
    },
    U$7 = (Et, es) => {
      gn(
        Et,
        0 <= Et.block_start ? Et.block_start : -1,
        Et.strstart - Et.block_start,
        es
      ),
        (Et.block_start = Et.strstart),
        L$5(Et.strm);
    },
    z$2 = (Et, es) => {
      Et.pending_buf[Et.pending++] = es;
    },
    Ee$4 = (Et, es) => {
      (Et.pending_buf[Et.pending++] = (es >>> 8) & 255),
        (Et.pending_buf[Et.pending++] = 255 & es);
    },
    ht$1 = (Et, es, ts, is) => {
      let ns = Et.avail_in;
      return (ns = ns > is ? is : ns) === 0
        ? 0
        : ((Et.avail_in -= ns),
          es.set(Et.input.subarray(Et.next_in, Et.next_in + ns), ts),
          Et.state.wrap === 1
            ? (Et.adler = ve$1(Et.adler, es, ns, ts))
            : Et.state.wrap === 2 && (Et.adler = Z$3(Et.adler, es, ns, ts)),
          (Et.next_in += ns),
          (Et.total_in += ns),
          ns);
    },
    Yt$1 = (Et, es) => {
      let ts,
        is,
        ns = Et.max_chain_length,
        rs = Et.strstart,
        ss = Et.prev_length,
        os = Et.nice_match;
      var ds =
          Et.strstart > Et.w_size - H$4 ? Et.strstart - (Et.w_size - H$4) : 0,
        as = Et.window,
        cs = Et.w_mask,
        fs = Et.prev,
        us = Et.strstart + j$1;
      let ls = as[rs + ss - 1],
        hs = as[rs + ss];
      Et.prev_length >= Et.good_match && (ns >>= 2),
        os > Et.lookahead && (os = Et.lookahead);
      do
        if (
          as[(ts = es) + ss] === hs &&
          as[ts + ss - 1] === ls &&
          as[ts] === as[rs] &&
          as[++ts] === as[rs + 1]
        ) {
          for (
            rs += 2, ts++;
            as[++rs] === as[++ts] &&
            as[++rs] === as[++ts] &&
            as[++rs] === as[++ts] &&
            as[++rs] === as[++ts] &&
            as[++rs] === as[++ts] &&
            as[++rs] === as[++ts] &&
            as[++rs] === as[++ts] &&
            as[++rs] === as[++ts] &&
            rs < us;

          );
          if (((is = j$1 - (us - rs)), (rs = us - j$1), is > ss)) {
            if (((Et.match_start = es), (ss = is) >= os)) break;
            (ls = as[rs + ss - 1]), (hs = as[rs + ss]);
          }
        }
      while ((es = fs[es & cs]) > ds && --ns != 0);
      return ss <= Et.lookahead ? ss : Et.lookahead;
    },
    de$3 = (Et) => {
      var es = Et.w_size;
      let ts, is, ns;
      do {
        if (
          ((is = Et.window_size - Et.lookahead - Et.strstart),
          Et.strstart >= es + (es - H$4) &&
            (Et.window.set(Et.window.subarray(es, es + es - is), 0),
            (Et.match_start -= es),
            (Et.strstart -= es),
            (Et.block_start -= es),
            Et.insert > Et.strstart && (Et.insert = Et.strstart),
            Fn(Et),
            (is += es)),
          Et.strm.avail_in === 0)
        )
          break;
        if (
          ((ts = ht$1(Et.strm, Et.window, Et.strstart + Et.lookahead, is)),
          (Et.lookahead += ts),
          Et.lookahead + Et.insert >= v$6)
        )
          for (
            ns = Et.strstart - Et.insert,
              Et.ins_h = Et.window[ns],
              Et.ins_h = V$2(Et, Et.ins_h, Et.window[ns + 1]);
            Et.insert &&
            ((Et.ins_h = V$2(Et, Et.ins_h, Et.window[ns + v$6 - 1])),
            (Et.prev[ns & Et.w_mask] = Et.head[Et.ins_h]),
            (Et.head[Et.ins_h] = ns),
            ns++,
            Et.insert--,
            !(Et.lookahead + Et.insert < v$6));

          );
      } while (Et.lookahead < H$4 && Et.strm.avail_in !== 0);
    },
    Gt$1 = (Et, es) => {
      let ts,
        is,
        ns,
        rs =
          Et.pending_buf_size - 5 > Et.w_size
            ? Et.w_size
            : Et.pending_buf_size - 5,
        ss = 0,
        os = Et.strm.avail_in;
      for (
        ;
        (ts = 65535),
          (ns = (Et.bi_valid + 42) >> 3),
          !(
            Et.strm.avail_out < ns ||
            ((ns = Et.strm.avail_out - ns),
            (is = Et.strstart - Et.block_start),
            (ts =
              (ts = ts > is + Et.strm.avail_in ? is + Et.strm.avail_in : ts) >
              ns
                ? ns
                : ts) < rs &&
              ((ts === 0 && es !== C$3) ||
                es === G$2 ||
                ts !== is + Et.strm.avail_in))
          ) &&
            ((ss = es === C$3 && ts === is + Et.strm.avail_in ? 1 : 0),
            it$1(Et, 0, 0, ss),
            (Et.pending_buf[Et.pending - 4] = ts),
            (Et.pending_buf[Et.pending - 3] = ts >> 8),
            (Et.pending_buf[Et.pending - 2] = ~ts),
            (Et.pending_buf[Et.pending - 1] = ~ts >> 8),
            L$5(Et.strm),
            is &&
              (is > ts && (is = ts),
              Et.strm.output.set(
                Et.window.subarray(Et.block_start, Et.block_start + is),
                Et.strm.next_out
              ),
              (Et.strm.next_out += is),
              (Et.strm.avail_out -= is),
              (Et.strm.total_out += is),
              (Et.block_start += is),
              (ts -= is)),
            ts &&
              (ht$1(Et.strm, Et.strm.output, Et.strm.next_out, ts),
              (Et.strm.next_out += ts),
              (Et.strm.avail_out -= ts),
              (Et.strm.total_out += ts)),
            ss === 0);

      );
      return (
        (os -= Et.strm.avail_in) &&
          (os >= Et.w_size
            ? ((Et.matches = 2),
              Et.window.set(
                Et.strm.input.subarray(
                  Et.strm.next_in - Et.w_size,
                  Et.strm.next_in
                ),
                0
              ),
              (Et.strstart = Et.w_size),
              (Et.insert = Et.strstart))
            : (Et.window_size - Et.strstart <= os &&
                ((Et.strstart -= Et.w_size),
                Et.window.set(
                  Et.window.subarray(Et.w_size, Et.w_size + Et.strstart),
                  0
                ),
                Et.matches < 2 && Et.matches++,
                Et.insert > Et.strstart) &&
                (Et.insert = Et.strstart),
              Et.window.set(
                Et.strm.input.subarray(Et.strm.next_in - os, Et.strm.next_in),
                Et.strstart
              ),
              (Et.strstart += os),
              (Et.insert +=
                os > Et.w_size - Et.insert ? Et.w_size - Et.insert : os)),
          (Et.block_start = Et.strstart)),
        Et.high_water < Et.strstart && (Et.high_water = Et.strstart),
        ss
          ? he$2
          : es !== G$2 &&
            es !== C$3 &&
            Et.strm.avail_in === 0 &&
            Et.strstart === Et.block_start
          ? _e$2
          : ((ns = Et.window_size - Et.strstart),
            Et.strm.avail_in > ns &&
              Et.block_start >= Et.w_size &&
              ((Et.block_start -= Et.w_size),
              (Et.strstart -= Et.w_size),
              Et.window.set(
                Et.window.subarray(Et.w_size, Et.w_size + Et.strstart),
                0
              ),
              Et.matches < 2 && Et.matches++,
              (ns += Et.w_size),
              Et.insert > Et.strstart) &&
              (Et.insert = Et.strstart),
            (ns = ns > Et.strm.avail_in ? Et.strm.avail_in : ns) &&
              (ht$1(Et.strm, Et.window, Et.strstart, ns),
              (Et.strstart += ns),
              (Et.insert +=
                ns > Et.w_size - Et.insert ? Et.w_size - Et.insert : ns)),
            Et.high_water < Et.strstart && (Et.high_water = Et.strstart),
            (ns = (Et.bi_valid + 42) >> 3),
            (ns =
              65535 < Et.pending_buf_size - ns
                ? 65535
                : Et.pending_buf_size - ns),
            (rs = ns > Et.w_size ? Et.w_size : ns),
            ((is = Et.strstart - Et.block_start) >= rs ||
              ((is || es === C$3) &&
                es !== G$2 &&
                Et.strm.avail_in === 0 &&
                is <= ns)) &&
              ((ts = is > ns ? ns : is),
              (ss = es === C$3 && Et.strm.avail_in === 0 && ts === is ? 1 : 0),
              it$1(Et, Et.block_start, ts, ss),
              (Et.block_start += ts),
              L$5(Et.strm)),
            ss ? ie$1 : O$4)
      );
    },
    dt$1 = (Et, es) => {
      let ts, is;
      for (;;) {
        if (Et.lookahead < H$4) {
          if ((de$3(Et), Et.lookahead < H$4 && es === G$2)) return O$4;
          if (Et.lookahead === 0) break;
        }
        if (
          ((ts = 0),
          Et.lookahead >= v$6 &&
            ((Et.ins_h = V$2(Et, Et.ins_h, Et.window[Et.strstart + v$6 - 1])),
            (ts = Et.prev[Et.strstart & Et.w_mask] = Et.head[Et.ins_h]),
            (Et.head[Et.ins_h] = Et.strstart)),
          ts !== 0 &&
            Et.strstart - ts <= Et.w_size - H$4 &&
            (Et.match_length = Yt$1(Et, ts)),
          Et.match_length >= v$6)
        )
          if (
            ((is = Y$1(
              Et,
              Et.strstart - Et.match_start,
              Et.match_length - v$6
            )),
            (Et.lookahead -= Et.match_length),
            Et.match_length <= Et.max_lazy_match && Et.lookahead >= v$6)
          ) {
            for (
              Et.match_length--;
              Et.strstart++,
                (Et.ins_h = V$2(
                  Et,
                  Et.ins_h,
                  Et.window[Et.strstart + v$6 - 1]
                )),
                (ts = Et.prev[Et.strstart & Et.w_mask] = Et.head[Et.ins_h]),
                (Et.head[Et.ins_h] = Et.strstart),
                --Et.match_length != 0;

            );
            Et.strstart++;
          } else
            (Et.strstart += Et.match_length),
              (Et.match_length = 0),
              (Et.ins_h = Et.window[Et.strstart]),
              (Et.ins_h = V$2(Et, Et.ins_h, Et.window[Et.strstart + 1]));
        else
          (is = Y$1(Et, 0, Et.window[Et.strstart])),
            Et.lookahead--,
            Et.strstart++;
        if (is && (U$7(Et, !1), Et.strm.avail_out === 0)) return O$4;
      }
      return (
        (Et.insert = Et.strstart < v$6 - 1 ? Et.strstart : v$6 - 1),
        es === C$3
          ? (U$7(Et, !0), Et.strm.avail_out === 0 ? ie$1 : he$2)
          : Et.sym_next && (U$7(Et, !1), Et.strm.avail_out === 0)
          ? O$4
          : _e$2
      );
    },
    se$2 = (Et, es) => {
      let ts, is, ns;
      for (;;) {
        if (Et.lookahead < H$4) {
          if ((de$3(Et), Et.lookahead < H$4 && es === G$2)) return O$4;
          if (Et.lookahead === 0) break;
        }
        if (
          ((ts = 0),
          Et.lookahead >= v$6 &&
            ((Et.ins_h = V$2(Et, Et.ins_h, Et.window[Et.strstart + v$6 - 1])),
            (ts = Et.prev[Et.strstart & Et.w_mask] = Et.head[Et.ins_h]),
            (Et.head[Et.ins_h] = Et.strstart)),
          (Et.prev_length = Et.match_length),
          (Et.prev_match = Et.match_start),
          (Et.match_length = v$6 - 1),
          ts !== 0 &&
            Et.prev_length < Et.max_lazy_match &&
            Et.strstart - ts <= Et.w_size - H$4 &&
            ((Et.match_length = Yt$1(Et, ts)), Et.match_length <= 5) &&
            (Et.strategy === yn ||
              (Et.match_length === v$6 &&
                4096 < Et.strstart - Et.match_start)) &&
            (Et.match_length = v$6 - 1),
          Et.prev_length >= v$6 && Et.match_length <= Et.prev_length)
        ) {
          for (
            ns = Et.strstart + Et.lookahead - v$6,
              is = Y$1(
                Et,
                Et.strstart - 1 - Et.prev_match,
                Et.prev_length - v$6
              ),
              Et.lookahead -= Et.prev_length - 1,
              Et.prev_length -= 2;
            ++Et.strstart <= ns &&
              ((Et.ins_h = V$2(Et, Et.ins_h, Et.window[Et.strstart + v$6 - 1])),
              (ts = Et.prev[Et.strstart & Et.w_mask] = Et.head[Et.ins_h]),
              (Et.head[Et.ins_h] = Et.strstart)),
              --Et.prev_length != 0;

          );
          if (
            ((Et.match_available = 0),
            (Et.match_length = v$6 - 1),
            Et.strstart++,
            is && (U$7(Et, !1), Et.strm.avail_out === 0))
          )
            return O$4;
        } else if (Et.match_available) {
          if (
            ((is = Y$1(Et, 0, Et.window[Et.strstart - 1])) && U$7(Et, !1),
            Et.strstart++,
            Et.lookahead--,
            Et.strm.avail_out === 0)
          )
            return O$4;
        } else (Et.match_available = 1), Et.strstart++, Et.lookahead--;
      }
      return (
        Et.match_available &&
          ((is = Y$1(Et, 0, Et.window[Et.strstart - 1])),
          (Et.match_available = 0)),
        (Et.insert = Et.strstart < v$6 - 1 ? Et.strstart : v$6 - 1),
        es === C$3
          ? (U$7(Et, !0), Et.strm.avail_out === 0 ? ie$1 : he$2)
          : Et.sym_next && (U$7(Et, !1), Et.strm.avail_out === 0)
          ? O$4
          : _e$2
      );
    },
    Hn = (Et, es) => {
      let ts, is, ns, rs;
      for (var ss = Et.window; ; ) {
        if (Et.lookahead <= j$1) {
          if ((de$3(Et), Et.lookahead <= j$1 && es === G$2)) return O$4;
          if (Et.lookahead === 0) break;
        }
        if (
          ((Et.match_length = 0),
          Et.lookahead >= v$6 &&
            0 < Et.strstart &&
            ((ns = Et.strstart - 1), (is = ss[ns]) === ss[++ns]) &&
            is === ss[++ns] &&
            is === ss[++ns])
        ) {
          for (
            rs = Et.strstart + j$1;
            is === ss[++ns] &&
            is === ss[++ns] &&
            is === ss[++ns] &&
            is === ss[++ns] &&
            is === ss[++ns] &&
            is === ss[++ns] &&
            is === ss[++ns] &&
            is === ss[++ns] &&
            ns < rs;

          );
          (Et.match_length = j$1 - (rs - ns)),
            Et.match_length > Et.lookahead && (Et.match_length = Et.lookahead);
        }
        if (
          (Et.match_length >= v$6
            ? ((ts = Y$1(Et, 1, Et.match_length - v$6)),
              (Et.lookahead -= Et.match_length),
              (Et.strstart += Et.match_length),
              (Et.match_length = 0))
            : ((ts = Y$1(Et, 0, Et.window[Et.strstart])),
              Et.lookahead--,
              Et.strstart++),
          ts && (U$7(Et, !1), Et.strm.avail_out === 0))
        )
          return O$4;
      }
      return (
        (Et.insert = 0),
        es === C$3
          ? (U$7(Et, !0), Et.strm.avail_out === 0 ? ie$1 : he$2)
          : Et.sym_next && (U$7(Et, !1), Et.strm.avail_out === 0)
          ? O$4
          : _e$2
      );
    },
    Bn = (Et, es) => {
      for (var ts; ; ) {
        if (Et.lookahead === 0 && (de$3(Et), Et.lookahead === 0)) {
          if (es === G$2) return O$4;
          break;
        }
        if (
          ((Et.match_length = 0),
          (ts = Y$1(Et, 0, Et.window[Et.strstart])),
          Et.lookahead--,
          Et.strstart++,
          ts && (U$7(Et, !1), Et.strm.avail_out === 0))
        )
          return O$4;
      }
      return (
        (Et.insert = 0),
        es === C$3
          ? (U$7(Et, !0), Et.strm.avail_out === 0 ? ie$1 : he$2)
          : Et.sym_next && (U$7(Et, !1), Et.strm.avail_out === 0)
          ? O$4
          : _e$2
      );
    };
  function B$4(Et, es, ts, is, ns) {
    (this.good_length = Et),
      (this.max_lazy = es),
      (this.nice_length = ts),
      (this.max_chain = is),
      (this.func = ns);
  }
  const ye$1 = [
      new B$4(0, 0, 0, 0, Gt$1),
      new B$4(4, 4, 8, 4, dt$1),
      new B$4(4, 5, 16, 8, dt$1),
      new B$4(4, 6, 32, 32, dt$1),
      new B$4(4, 4, 16, 16, se$2),
      new B$4(8, 16, 32, 32, se$2),
      new B$4(8, 16, 128, 128, se$2),
      new B$4(8, 32, 128, 256, se$2),
      new B$4(32, 128, 258, 1024, se$2),
      new B$4(32, 258, 258, 4096, se$2),
    ],
    Kn = (Et) => {
      (Et.window_size = 2 * Et.w_size),
        W$3(Et.head),
        (Et.max_lazy_match = ye$1[Et.level].max_lazy),
        (Et.good_match = ye$1[Et.level].good_length),
        (Et.nice_match = ye$1[Et.level].nice_length),
        (Et.max_chain_length = ye$1[Et.level].max_chain),
        (Et.strstart = 0),
        (Et.block_start = 0),
        (Et.lookahead = 0),
        (Et.insert = 0),
        (Et.match_length = Et.prev_length = v$6 - 1),
        (Et.match_available = 0),
        (Et.ins_h = 0);
    };
  function Pn() {
    (this.strm = null),
      (this.status = 0),
      (this.pending_buf = null),
      (this.pending_buf_size = 0),
      (this.pending_out = 0),
      (this.pending = 0),
      (this.wrap = 0),
      (this.gzhead = null),
      (this.gzindex = 0),
      (this.method = Ce$1),
      (this.last_flush = -1),
      (this.w_size = 0),
      (this.w_bits = 0),
      (this.w_mask = 0),
      (this.window = null),
      (this.window_size = 0),
      (this.prev = null),
      (this.head = null),
      (this.ins_h = 0),
      (this.hash_size = 0),
      (this.hash_bits = 0),
      (this.hash_mask = 0),
      (this.hash_shift = 0),
      (this.block_start = 0),
      (this.match_length = 0),
      (this.prev_match = 0),
      (this.match_available = 0),
      (this.strstart = 0),
      (this.match_start = 0),
      (this.lookahead = 0),
      (this.prev_length = 0),
      (this.max_chain_length = 0),
      (this.max_lazy_match = 0),
      (this.level = 0),
      (this.strategy = 0),
      (this.good_match = 0),
      (this.nice_match = 0),
      (this.dyn_ltree = new Uint16Array(2 * Ln)),
      (this.dyn_dtree = new Uint16Array(2 * (2 * On + 1))),
      (this.bl_tree = new Uint16Array(2 * (2 * Nn + 1))),
      W$3(this.dyn_ltree),
      W$3(this.dyn_dtree),
      W$3(this.bl_tree),
      (this.l_desc = null),
      (this.d_desc = null),
      (this.bl_desc = null),
      (this.bl_count = new Uint16Array(Un + 1)),
      (this.heap = new Uint16Array(2 * at$1 + 1)),
      W$3(this.heap),
      (this.heap_len = 0),
      (this.heap_max = 0),
      (this.depth = new Uint16Array(2 * at$1 + 1)),
      W$3(this.depth),
      (this.sym_buf = 0),
      (this.lit_bufsize = 0),
      (this.sym_next = 0),
      (this.sym_end = 0),
      (this.opt_len = 0),
      (this.static_len = 0),
      (this.matches = 0),
      (this.insert = 0),
      (this.bi_buf = 0),
      (this.bi_valid = 0);
  }
  const me$1 = (Et) => {
      var es;
      return !Et ||
        !(es = Et.state) ||
        es.strm !== Et ||
        (es.status !== oe$1 &&
          es.status !== rt$1 &&
          es.status !== lt$1 &&
          es.status !== ft$1 &&
          es.status !== ot$1 &&
          es.status !== _t$1 &&
          es.status !== te &&
          es.status !== ke$1)
        ? 1
        : 0;
    },
    jt$1 = (Et) => {
      if (me$1(Et)) return ne$1(Et, M$3);
      (Et.total_in = Et.total_out = 0), (Et.data_type = An);
      var es = Et.state;
      return (
        (es.pending = 0),
        (es.pending_out = 0),
        es.wrap < 0 && (es.wrap = -es.wrap),
        (es.status = es.wrap === 2 ? rt$1 : es.wrap ? oe$1 : te),
        (Et.adler = es.wrap === 2 ? 0 : 1),
        (es.last_flush = -2),
        bn(es),
        I$6
      );
    },
    Wt = (Et) => {
      var es = jt$1(Et);
      return es === I$6 && Kn(Et.state), es;
    },
    Xn = (Et, es) =>
      me$1(Et) || Et.state.wrap !== 2 ? M$3 : ((Et.state.gzhead = es), I$6),
    Vt$1 = (Et, es, ts, is, ns, rs) => {
      if (!Et) return M$3;
      let ss = 1;
      if (
        (es === En && (es = 6),
        is < 0 ? ((ss = 0), (is = -is)) : 15 < is && ((ss = 2), (is -= 16)),
        ns < 1 ||
          ns > Rn ||
          ts !== Ce$1 ||
          is < 8 ||
          15 < is ||
          es < 0 ||
          9 < es ||
          rs < 0 ||
          rs > zn ||
          (is === 8 && ss !== 1))
      )
        return ne$1(Et, M$3);
      is === 8 && (is = 9);
      var os = new Pn();
      return (
        ((Et.state = os).strm = Et),
        (os.status = oe$1),
        (os.wrap = ss),
        (os.gzhead = null),
        (os.w_bits = is),
        (os.w_size = 1 << os.w_bits),
        (os.w_mask = os.w_size - 1),
        (os.hash_bits = ns + 7),
        (os.hash_size = 1 << os.hash_bits),
        (os.hash_mask = os.hash_size - 1),
        (os.hash_shift = ~~((os.hash_bits + v$6 - 1) / v$6)),
        (os.window = new Uint8Array(2 * os.w_size)),
        (os.head = new Uint16Array(os.hash_size)),
        (os.prev = new Uint16Array(os.w_size)),
        (os.lit_bufsize = 1 << (ns + 6)),
        (os.pending_buf_size = 4 * os.lit_bufsize),
        (os.pending_buf = new Uint8Array(os.pending_buf_size)),
        (os.sym_buf = os.lit_bufsize),
        (os.sym_end = 3 * (os.lit_bufsize - 1)),
        (os.level = es),
        (os.strategy = rs),
        (os.method = ts),
        Wt(Et)
      );
    },
    Yn = (Et, es) => Vt$1(Et, es, Ce$1, Tn, Dn, Sn),
    Gn = (Et, es) => {
      if (me$1(Et) || es > Kt$1 || es < 0) return Et ? ne$1(Et, M$3) : M$3;
      var ts = Et.state;
      if (
        !Et.output ||
        (Et.avail_in !== 0 && !Et.input) ||
        (ts.status === ke$1 && es !== C$3)
      )
        return ne$1(Et, Et.avail_out === 0 ? nt$1 : M$3);
      var is = ts.last_flush;
      if (((ts.last_flush = es), ts.pending !== 0)) {
        if ((L$5(Et), Et.avail_out === 0)) return (ts.last_flush = -1), I$6;
      } else if (Et.avail_in === 0 && Xt$1(es) <= Xt$1(is) && es !== C$3)
        return ne$1(Et, nt$1);
      if (ts.status === ke$1 && Et.avail_in !== 0) return ne$1(Et, nt$1);
      if (
        (ts.status === oe$1 && ts.wrap === 0 && (ts.status = te),
        ts.status === oe$1)
      ) {
        let rs = (Ce$1 + ((ts.w_bits - 8) << 4)) << 8,
          ss;
        if (
          ((ss =
            ts.strategy >= Ue$1 || ts.level < 2
              ? 0
              : ts.level < 6
              ? 1
              : ts.level === 6
              ? 2
              : 3),
          (rs |= ss << 6),
          ts.strstart !== 0 && (rs |= Cn),
          (rs += 31 - (rs % 31)),
          Ee$4(ts, rs),
          ts.strstart !== 0 &&
            (Ee$4(ts, Et.adler >>> 16), Ee$4(ts, 65535 & Et.adler)),
          (Et.adler = 1),
          (ts.status = te),
          L$5(Et),
          ts.pending !== 0)
        )
          return (ts.last_flush = -1), I$6;
      }
      if (ts.status === rt$1) {
        if (((Et.adler = 0), z$2(ts, 31), z$2(ts, 139), z$2(ts, 8), ts.gzhead))
          z$2(
            ts,
            (ts.gzhead.text ? 1 : 0) +
              (ts.gzhead.hcrc ? 2 : 0) +
              (ts.gzhead.extra ? 4 : 0) +
              (ts.gzhead.name ? 8 : 0) +
              (ts.gzhead.comment ? 16 : 0)
          ),
            z$2(ts, 255 & ts.gzhead.time),
            z$2(ts, (ts.gzhead.time >> 8) & 255),
            z$2(ts, (ts.gzhead.time >> 16) & 255),
            z$2(ts, (ts.gzhead.time >> 24) & 255),
            z$2(
              ts,
              ts.level === 9 ? 2 : ts.strategy >= Ue$1 || ts.level < 2 ? 4 : 0
            ),
            z$2(ts, 255 & ts.gzhead.os),
            ts.gzhead.extra &&
              ts.gzhead.extra.length &&
              (z$2(ts, 255 & ts.gzhead.extra.length),
              z$2(ts, (ts.gzhead.extra.length >> 8) & 255)),
            ts.gzhead.hcrc &&
              (Et.adler = Z$3(Et.adler, ts.pending_buf, ts.pending, 0)),
            (ts.gzindex = 0),
            (ts.status = lt$1);
        else if (
          (z$2(ts, 0),
          z$2(ts, 0),
          z$2(ts, 0),
          z$2(ts, 0),
          z$2(ts, 0),
          z$2(
            ts,
            ts.level === 9 ? 2 : ts.strategy >= Ue$1 || ts.level < 2 ? 4 : 0
          ),
          z$2(ts, $n),
          (ts.status = te),
          L$5(Et),
          ts.pending !== 0)
        )
          return (ts.last_flush = -1), I$6;
      }
      if (ts.status === lt$1) {
        if (ts.gzhead.extra) {
          let rs = ts.pending,
            ss = (65535 & ts.gzhead.extra.length) - ts.gzindex;
          for (; ts.pending + ss > ts.pending_buf_size; ) {
            var ns = ts.pending_buf_size - ts.pending;
            if (
              (ts.pending_buf.set(
                ts.gzhead.extra.subarray(ts.gzindex, ts.gzindex + ns),
                ts.pending
              ),
              (ts.pending = ts.pending_buf_size),
              ts.gzhead.hcrc &&
                ts.pending > rs &&
                (Et.adler = Z$3(Et.adler, ts.pending_buf, ts.pending - rs, rs)),
              (ts.gzindex += ns),
              L$5(Et),
              ts.pending !== 0)
            )
              return (ts.last_flush = -1), I$6;
            (rs = 0), (ss -= ns);
          }
          (is = new Uint8Array(ts.gzhead.extra)),
            ts.pending_buf.set(
              is.subarray(ts.gzindex, ts.gzindex + ss),
              ts.pending
            ),
            (ts.pending += ss),
            ts.gzhead.hcrc &&
              ts.pending > rs &&
              (Et.adler = Z$3(Et.adler, ts.pending_buf, ts.pending - rs, rs)),
            (ts.gzindex = 0);
        }
        ts.status = ft$1;
      }
      if (ts.status === ft$1) {
        if (ts.gzhead.name) {
          let rs,
            ss = ts.pending;
          do
            if (ts.pending === ts.pending_buf_size) {
              if (
                (ts.gzhead.hcrc &&
                  ts.pending > ss &&
                  (Et.adler = Z$3(
                    Et.adler,
                    ts.pending_buf,
                    ts.pending - ss,
                    ss
                  )),
                L$5(Et),
                ts.pending !== 0)
              )
                return (ts.last_flush = -1), I$6;
              ss = 0;
            }
          while (
            ((rs =
              ts.gzindex < ts.gzhead.name.length
                ? 255 & ts.gzhead.name.charCodeAt(ts.gzindex++)
                : 0),
            z$2(ts, rs),
            rs != 0)
          );
          ts.gzhead.hcrc &&
            ts.pending > ss &&
            (Et.adler = Z$3(Et.adler, ts.pending_buf, ts.pending - ss, ss)),
            (ts.gzindex = 0);
        }
        ts.status = ot$1;
      }
      if (ts.status === ot$1) {
        if (ts.gzhead.comment) {
          let rs,
            ss = ts.pending;
          do
            if (ts.pending === ts.pending_buf_size) {
              if (
                (ts.gzhead.hcrc &&
                  ts.pending > ss &&
                  (Et.adler = Z$3(
                    Et.adler,
                    ts.pending_buf,
                    ts.pending - ss,
                    ss
                  )),
                L$5(Et),
                ts.pending !== 0)
              )
                return (ts.last_flush = -1), I$6;
              ss = 0;
            }
          while (
            ((rs =
              ts.gzindex < ts.gzhead.comment.length
                ? 255 & ts.gzhead.comment.charCodeAt(ts.gzindex++)
                : 0),
            z$2(ts, rs),
            rs != 0)
          );
          ts.gzhead.hcrc &&
            ts.pending > ss &&
            (Et.adler = Z$3(Et.adler, ts.pending_buf, ts.pending - ss, ss));
        }
        ts.status = _t$1;
      }
      if (ts.status === _t$1) {
        if (ts.gzhead.hcrc) {
          if (
            ts.pending + 2 > ts.pending_buf_size &&
            (L$5(Et), ts.pending !== 0)
          )
            return (ts.last_flush = -1), I$6;
          z$2(ts, 255 & Et.adler),
            z$2(ts, (Et.adler >> 8) & 255),
            (Et.adler = 0);
        }
        if (((ts.status = te), L$5(Et), ts.pending !== 0))
          return (ts.last_flush = -1), I$6;
      }
      if (
        Et.avail_in !== 0 ||
        ts.lookahead !== 0 ||
        (es !== G$2 && ts.status !== ke$1)
      ) {
        if (
          ((is =
            ts.level === 0
              ? Gt$1(ts, es)
              : ts.strategy === Ue$1
              ? Bn(ts, es)
              : ts.strategy === mn
              ? Hn(ts, es)
              : ye$1[ts.level].func(ts, es)),
          (is !== ie$1 && is !== he$2) || (ts.status = ke$1),
          is === O$4 || is === ie$1)
        )
          return Et.avail_out === 0 && (ts.last_flush = -1), I$6;
        if (
          is === _e$2 &&
          (es === xn
            ? pn(ts)
            : es !== Kt$1 &&
              (it$1(ts, 0, 0, !1), es === vn) &&
              (W$3(ts.head), ts.lookahead === 0) &&
              ((ts.strstart = 0), (ts.block_start = 0), (ts.insert = 0)),
          L$5(Et),
          Et.avail_out === 0)
        )
          return (ts.last_flush = -1), I$6;
      }
      return es !== C$3 ||
        (!(ts.wrap <= 0) &&
          (ts.wrap === 2
            ? (z$2(ts, 255 & Et.adler),
              z$2(ts, (Et.adler >> 8) & 255),
              z$2(ts, (Et.adler >> 16) & 255),
              z$2(ts, (Et.adler >> 24) & 255),
              z$2(ts, 255 & Et.total_in),
              z$2(ts, (Et.total_in >> 8) & 255),
              z$2(ts, (Et.total_in >> 16) & 255),
              z$2(ts, (Et.total_in >> 24) & 255))
            : (Ee$4(ts, Et.adler >>> 16), Ee$4(ts, 65535 & Et.adler)),
          L$5(Et),
          0 < ts.wrap && (ts.wrap = -ts.wrap),
          ts.pending !== 0))
        ? I$6
        : Pt$1;
    },
    jn = (Et) => {
      var es;
      return me$1(Et)
        ? M$3
        : ((es = Et.state.status),
          (Et.state = null),
          es === te ? ne$1(Et, kn) : I$6);
    },
    Wn = (Et, es) => {
      let ts = es.length;
      if (me$1(Et)) return M$3;
      var is = Et.state,
        ns = is.wrap;
      if (ns === 2 || (ns === 1 && is.status !== oe$1) || is.lookahead)
        return M$3;
      ns === 1 && (Et.adler = ve$1(Et.adler, es, ts, 0)),
        (is.wrap = 0),
        ts >= is.w_size &&
          (ns === 0 &&
            (W$3(is.head),
            (is.strstart = 0),
            (is.block_start = 0),
            (is.insert = 0)),
          (rs = new Uint8Array(is.w_size)).set(
            es.subarray(ts - is.w_size, ts),
            0
          ),
          (es = rs),
          (ts = is.w_size));
      var rs = Et.avail_in,
        ss = Et.next_in,
        os = Et.input;
      for (
        Et.avail_in = ts, Et.next_in = 0, Et.input = es, de$3(is);
        is.lookahead >= v$6;

      ) {
        let ds = is.strstart,
          as = is.lookahead - (v$6 - 1);
        for (
          ;
          (is.ins_h = V$2(is, is.ins_h, is.window[ds + v$6 - 1])),
            (is.prev[ds & is.w_mask] = is.head[is.ins_h]),
            (is.head[is.ins_h] = ds),
            ds++,
            --as;

        );
        (is.strstart = ds), (is.lookahead = v$6 - 1), de$3(is);
      }
      return (
        (is.strstart += is.lookahead),
        (is.block_start = is.strstart),
        (is.insert = is.lookahead),
        (is.lookahead = 0),
        (is.match_length = is.prev_length = v$6 - 1),
        (is.match_available = 0),
        (Et.next_in = ss),
        (Et.input = os),
        (Et.avail_in = rs),
        (is.wrap = ns),
        I$6
      );
    };
  var Vn = Yn,
    Jn = Vt$1,
    Qn = Wt,
    qn = jt$1,
    ea = Xn,
    ta = Gn,
    ia = jn,
    na = Wn,
    aa = "pako deflate (from Nodeca project)",
    ze$1 = {
      deflateInit: Vn,
      deflateInit2: Jn,
      deflateReset: Qn,
      deflateResetKeep: qn,
      deflateSetHeader: ea,
      deflate: ta,
      deflateEnd: ia,
      deflateSetDictionary: na,
      deflateInfo: aa,
    };
  const ra = (Et, es) => Object.prototype.hasOwnProperty.call(Et, es);
  var la = function (Et) {
      const es = Array.prototype.slice.call(arguments, 1);
      for (; es.length; ) {
        var ts = es.shift();
        if (ts) {
          if (typeof ts != "object")
            throw new TypeError(ts + "must be non-object");
          for (const is in ts) ra(ts, is) && (Et[is] = ts[is]);
        }
      }
      return Et;
    },
    fa = (Et) => {
      let es = 0;
      for (let ns = 0, rs = Et.length; ns < rs; ns++) es += Et[ns].length;
      var ts = new Uint8Array(es);
      for (let ns = 0, rs = 0, ss = Et.length; ns < ss; ns++) {
        var is = Et[ns];
        ts.set(is, rs), (rs += is.length);
      }
      return ts;
    },
    $e$1 = { assign: la, flattenChunks: fa };
  let Jt$1 = !0;
  try {
    String.fromCharCode.apply(null, new Uint8Array(1));
  } catch (Et) {
    Jt$1 = !1;
  }
  const Se$1 = new Uint8Array(256);
  for (let Et = 0; Et < 256; Et++)
    Se$1[Et] =
      252 <= Et
        ? 6
        : 248 <= Et
        ? 5
        : 240 <= Et
        ? 4
        : 224 <= Et
        ? 3
        : 192 <= Et
        ? 2
        : 1;
  Se$1[254] = Se$1[254] = 1;
  var oa = (Et) => {
    if (typeof TextEncoder == "function" && TextEncoder.prototype.encode)
      return new TextEncoder().encode(Et);
    let es,
      ts,
      is,
      ns,
      rs,
      ss = Et.length,
      os = 0;
    for (ns = 0; ns < ss; ns++)
      (64512 & (ts = Et.charCodeAt(ns))) == 55296 &&
        ns + 1 < ss &&
        (64512 & (is = Et.charCodeAt(ns + 1))) == 56320 &&
        ((ts = 65536 + ((ts - 55296) << 10) + (is - 56320)), ns++),
        (os += ts < 128 ? 1 : ts < 2048 ? 2 : ts < 65536 ? 3 : 4);
    for (es = new Uint8Array(os), rs = 0, ns = 0; rs < os; ns++)
      (64512 & (ts = Et.charCodeAt(ns))) == 55296 &&
        ns + 1 < ss &&
        (64512 & (is = Et.charCodeAt(ns + 1))) == 56320 &&
        ((ts = 65536 + ((ts - 55296) << 10) + (is - 56320)), ns++),
        ts < 128
          ? (es[rs++] = ts)
          : (ts < 2048
              ? (es[rs++] = 192 | (ts >>> 6))
              : (ts < 65536
                  ? (es[rs++] = 224 | (ts >>> 12))
                  : ((es[rs++] = 240 | (ts >>> 18)),
                    (es[rs++] = 128 | ((ts >>> 12) & 63))),
                (es[rs++] = 128 | ((ts >>> 6) & 63))),
            (es[rs++] = 128 | (63 & ts)));
    return es;
  };
  const _a = (Et, es) => {
    if (es < 65534 && Et.subarray && Jt$1)
      return String.fromCharCode.apply(
        null,
        Et.length === es ? Et : Et.subarray(0, es)
      );
    let ts = "";
    for (let is = 0; is < es; is++) ts += String.fromCharCode(Et[is]);
    return ts;
  };
  var ha = (Et, es) => {
      var ts = es || Et.length;
      if (typeof TextDecoder == "function" && TextDecoder.prototype.decode)
        return new TextDecoder().decode(Et.subarray(0, es));
      let is, ns;
      var rs = new Array(2 * ts);
      for (ns = 0, is = 0; is < ts; ) {
        let ss = Et[is++];
        if (ss < 128) rs[ns++] = ss;
        else {
          let os = Se$1[ss];
          if (4 < os) (rs[ns++] = 65533), (is += os - 1);
          else {
            for (ss &= os === 2 ? 31 : os === 3 ? 15 : 7; 1 < os && is < ts; )
              (ss = (ss << 6) | (63 & Et[is++])), os--;
            1 < os
              ? (rs[ns++] = 65533)
              : ss < 65536
              ? (rs[ns++] = ss)
              : ((ss -= 65536),
                (rs[ns++] = 55296 | ((ss >> 10) & 1023)),
                (rs[ns++] = 56320 | (1023 & ss)));
          }
        }
      }
      return _a(rs, ns);
    },
    da = (Et, es) => {
      let ts = (es = (es = es || Et.length) > Et.length ? Et.length : es) - 1;
      for (; 0 <= ts && (192 & Et[ts]) == 128; ) ts--;
      return !(ts < 0 || ts === 0) && ts + Se$1[Et[ts]] > es ? ts : es;
    },
    Ae$1 = { string2buf: oa, buf2string: ha, utf8border: da };
  function sa() {
    (this.input = null),
      (this.next_in = 0),
      (this.avail_in = 0),
      (this.total_in = 0),
      (this.output = null),
      (this.next_out = 0),
      (this.avail_out = 0),
      (this.total_out = 0),
      (this.msg = ""),
      (this.state = null),
      (this.data_type = 2),
      (this.adler = 0);
  }
  var Qt$1 = sa;
  const qt$1 = Object.prototype.toString,
    {
      Z_NO_FLUSH: ca,
      Z_SYNC_FLUSH: ua,
      Z_FULL_FLUSH: wa,
      Z_FINISH: ba,
      Z_OK: Fe$1,
      Z_STREAM_END: ga,
      Z_DEFAULT_COMPRESSION: pa,
      Z_DEFAULT_STRATEGY: xa,
      Z_DEFLATED: va,
    } = ee$1;
  function Re$2(Et) {
    if (
      ((this.options = $e$1.assign(
        {
          level: pa,
          method: va,
          chunkSize: 16384,
          windowBits: 15,
          memLevel: 8,
          strategy: xa,
        },
        Et || {}
      )),
      (Et = this.options),
      Et.raw && 0 < Et.windowBits
        ? (Et.windowBits = -Et.windowBits)
        : Et.gzip &&
          0 < Et.windowBits &&
          Et.windowBits < 16 &&
          (Et.windowBits += 16),
      (this.err = 0),
      (this.msg = ""),
      (this.ended = !1),
      (this.chunks = []),
      (this.strm = new Qt$1()),
      (this.strm.avail_out = 0),
      (es = ze$1.deflateInit2(
        this.strm,
        Et.level,
        Et.method,
        Et.windowBits,
        Et.memLevel,
        Et.strategy
      )) !== Fe$1)
    )
      throw new Error(q$2[es]);
    if (
      (Et.header && ze$1.deflateSetHeader(this.strm, Et.header), Et.dictionary)
    ) {
      var es,
        Et =
          typeof Et.dictionary == "string"
            ? Ae$1.string2buf(Et.dictionary)
            : qt$1.call(Et.dictionary) === "[object ArrayBuffer]"
            ? new Uint8Array(Et.dictionary)
            : Et.dictionary;
      if ((es = ze$1.deflateSetDictionary(this.strm, Et)) !== Fe$1)
        throw new Error(q$2[es]);
      this._dict_set = !0;
    }
  }
  function st$1(Et, es) {
    if (((es = new Re$2(es)), es.push(Et, !0), es.err))
      throw es.msg || q$2[es.err];
    return es.result;
  }
  function ka(Et, es) {
    return ((es = es || {}).raw = !0), st$1(Et, es);
  }
  function Ea(Et, es) {
    return ((es = es || {}).gzip = !0), st$1(Et, es);
  }
  (Re$2.prototype.push = function (Et, es) {
    var ts,
      is,
      ns = this.strm,
      rs = this.options.chunkSize;
    if (this.ended) return !1;
    for (
      is = es === ~~es ? es : es === !0 ? ba : ca,
        typeof Et == "string"
          ? (ns.input = Ae$1.string2buf(Et))
          : qt$1.call(Et) === "[object ArrayBuffer]"
          ? (ns.input = new Uint8Array(Et))
          : (ns.input = Et),
        ns.next_in = 0,
        ns.avail_in = ns.input.length;
      ;

    )
      if (
        (ns.avail_out === 0 &&
          ((ns.output = new Uint8Array(rs)),
          (ns.next_out = 0),
          (ns.avail_out = rs)),
        (is === ua || is === wa) && ns.avail_out <= 6)
      )
        this.onData(ns.output.subarray(0, ns.next_out)), (ns.avail_out = 0);
      else {
        if (ze$1.deflate(ns, is) === ga)
          return (
            0 < ns.next_out && this.onData(ns.output.subarray(0, ns.next_out)),
            (ts = ze$1.deflateEnd(this.strm)),
            this.onEnd(ts),
            (this.ended = !0),
            ts === Fe$1
          );
        if (ns.avail_out !== 0) {
          if (0 < is && 0 < ns.next_out)
            this.onData(ns.output.subarray(0, ns.next_out)), (ns.avail_out = 0);
          else if (ns.avail_in === 0) break;
        } else this.onData(ns.output);
      }
    return !0;
  }),
    (Re$2.prototype.onData = function (Et) {
      this.chunks.push(Et);
    }),
    (Re$2.prototype.onEnd = function (Et) {
      Et === Fe$1 && (this.result = $e$1.flattenChunks(this.chunks)),
        (this.chunks = []),
        (this.err = Et),
        (this.msg = this.strm.msg);
    });
  var ya = Re$2,
    ma = st$1,
    za = ka,
    Sa = Ea,
    Aa = ee$1,
    Ra = { Deflate: ya, deflate: ma, deflateRaw: za, gzip: Sa, constants: Aa };
  const Me$1 = 16209,
    Ta = 16191;
  var Da = function (Et, es) {
    let ts,
      is,
      ns,
      rs,
      ss,
      os,
      ds,
      as,
      cs,
      fs,
      us,
      ls,
      hs,
      gs,
      ps,
      ms,
      Es,
      $s,
      Cs,
      ys,
      bs,
      Ss,
      vs,
      ws;
    var Ts = Et.state;
    (ts = Et.next_in),
      (vs = Et.input),
      (is = ts + (Et.avail_in - 5)),
      (ns = Et.next_out),
      (ws = Et.output),
      (rs = ns - (es - Et.avail_out)),
      (ss = ns + (Et.avail_out - 257)),
      (os = Ts.dmax),
      (ds = Ts.wsize),
      (as = Ts.whave),
      (cs = Ts.wnext),
      (fs = Ts.window),
      (us = Ts.hold),
      (ls = Ts.bits),
      (hs = Ts.lencode),
      (gs = Ts.distcode),
      (ps = (1 << Ts.lenbits) - 1),
      (ms = (1 << Ts.distbits) - 1);
    e: do
      for (
        ls < 15 &&
          ((us += vs[ts++] << ls),
          (ls += 8),
          (us += vs[ts++] << ls),
          (ls += 8)),
          Es = hs[us & ps];
        ;

      ) {
        if (
          (($s = Es >>> 24),
          (us >>>= $s),
          (ls -= $s),
          ($s = (Es >>> 16) & 255) === 0)
        )
          ws[ns++] = 65535 & Es;
        else {
          if (!(16 & $s)) {
            if ((64 & $s) == 0) {
              Es = hs[(65535 & Es) + (us & ((1 << $s) - 1))];
              continue;
            }
            if (32 & $s) {
              Ts.mode = Ta;
              break e;
            }
            (Et.msg = "invalid literal/length code"), (Ts.mode = Me$1);
            break e;
          }
          for (
            Cs = 65535 & Es,
              ($s &= 15) &&
                (ls < $s && ((us += vs[ts++] << ls), (ls += 8)),
                (Cs += us & ((1 << $s) - 1)),
                (us >>>= $s),
                (ls -= $s)),
              ls < 15 &&
                ((us += vs[ts++] << ls),
                (ls += 8),
                (us += vs[ts++] << ls),
                (ls += 8)),
              Es = gs[us & ms];
            ;

          ) {
            if (
              (($s = Es >>> 24),
              (us >>>= $s),
              (ls -= $s),
              !(16 & ($s = (Es >>> 16) & 255)))
            ) {
              if ((64 & $s) == 0) {
                Es = gs[(65535 & Es) + (us & ((1 << $s) - 1))];
                continue;
              }
              (Et.msg = "invalid distance code"), (Ts.mode = Me$1);
              break e;
            }
            if (
              ((ys = 65535 & Es),
              ($s &= 15),
              ls < $s &&
                ((us += vs[ts++] << ls), (ls += 8) < $s) &&
                ((us += vs[ts++] << ls), (ls += 8)),
              os < (ys += us & ((1 << $s) - 1)))
            ) {
              (Et.msg = "invalid distance too far back"), (Ts.mode = Me$1);
              break e;
            }
            if (((us >>>= $s), (ls -= $s), ys > ($s = ns - rs))) {
              if (($s = ys - $s) > as && Ts.sane) {
                (Et.msg = "invalid distance too far back"), (Ts.mode = Me$1);
                break e;
              }
              if (((bs = 0), (Ss = fs), cs === 0)) {
                if (((bs += ds - $s), $s < Cs)) {
                  for (Cs -= $s; (ws[ns++] = fs[bs++]), --$s; );
                  (bs = ns - ys), (Ss = ws);
                }
              } else if (cs < $s) {
                if (((bs += ds + cs - $s), ($s -= cs) < Cs)) {
                  for (Cs -= $s; (ws[ns++] = fs[bs++]), --$s; );
                  if (((bs = 0), cs < Cs)) {
                    for ($s = cs, Cs -= $s; (ws[ns++] = fs[bs++]), --$s; );
                    (bs = ns - ys), (Ss = ws);
                  }
                }
              } else if (((bs += cs - $s), $s < Cs)) {
                for (Cs -= $s; (ws[ns++] = fs[bs++]), --$s; );
                (bs = ns - ys), (Ss = ws);
              }
              for (; 2 < Cs; )
                (ws[ns++] = Ss[bs++]),
                  (ws[ns++] = Ss[bs++]),
                  (ws[ns++] = Ss[bs++]),
                  (Cs -= 3);
              Cs && ((ws[ns++] = Ss[bs++]), 1 < Cs) && (ws[ns++] = Ss[bs++]);
            } else {
              for (
                bs = ns - ys;
                (ws[ns++] = ws[bs++]),
                  (ws[ns++] = ws[bs++]),
                  (ws[ns++] = ws[bs++]),
                  2 < (Cs -= 3);

              );
              Cs && ((ws[ns++] = ws[bs++]), 1 < Cs) && (ws[ns++] = ws[bs++]);
            }
            break;
          }
        }
        break;
      }
    while (ts < is && ns < ss);
    (Cs = ls >> 3),
      (ts -= Cs),
      (ls -= Cs << 3),
      (us &= (1 << ls) - 1),
      (Et.next_in = ts),
      (Et.next_out = ns),
      (Et.avail_in = ts < is ? is - ts + 5 : 5 - (ts - is)),
      (Et.avail_out = ns < ss ? ss - ns + 257 : 257 - (ns - ss)),
      (Ts.hold = us),
      (Ts.bits = ls);
  };
  const ce$1 = 15,
    ei = 852,
    ti = 592,
    ii = 0,
    ct$1 = 1,
    ni = 2,
    Za = new Uint16Array([
      3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
      67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
    ]),
    Ia = new Uint8Array([
      16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19,
      19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
    ]),
    Oa = new Uint16Array([
      1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513,
      769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0,
    ]),
    Na = new Uint8Array([
      16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23,
      24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
    ]),
    La = (Et, es, ts, is, ns, rs, ss, os) => {
      var ds = os.bits;
      let as,
        cs,
        fs,
        us,
        ls,
        hs,
        gs = 0,
        ps = 0,
        ms = 0,
        Es = 0,
        $s = 0,
        Cs = 0,
        ys = 0,
        bs = 0,
        Ss = 0,
        vs = 0,
        ws = null;
      var Ts = new Uint16Array(ce$1 + 1),
        Ds = new Uint16Array(ce$1 + 1);
      let Ns,
        Rs,
        Bs,
        Ms = null;
      for (gs = 0; gs <= ce$1; gs++) Ts[gs] = 0;
      for (ps = 0; ps < is; ps++) Ts[es[ts + ps]]++;
      for ($s = ds, Es = ce$1; 1 <= Es && Ts[Es] === 0; Es--);
      if (($s > Es && ($s = Es), Es === 0))
        (ns[rs++] = 20971520), (ns[rs++] = 20971520), (os.bits = 1);
      else {
        for (ms = 1; ms < Es && Ts[ms] === 0; ms++);
        for ($s < ms && ($s = ms), bs = 1, gs = 1; gs <= ce$1; gs++)
          if ((bs = (bs <<= 1) - Ts[gs]) < 0) return -1;
        if (0 < bs && (Et === ii || Es !== 1)) return -1;
        for (Ds[1] = 0, gs = 1; gs < ce$1; gs++) Ds[gs + 1] = Ds[gs] + Ts[gs];
        for (ps = 0; ps < is; ps++)
          es[ts + ps] !== 0 && (ss[Ds[es[ts + ps]]++] = ps);
        if (
          ((hs =
            Et === ii
              ? ((ws = Ms = ss), 20)
              : Et === ct$1
              ? ((ws = Za), (Ms = Ia), 257)
              : ((ws = Oa), (Ms = Na), 0)),
          (vs = 0),
          (ps = 0),
          (gs = ms),
          (ls = rs),
          (Cs = $s),
          (ys = 0),
          (fs = -1),
          (us = (Ss = 1 << $s) - 1),
          (Et === ct$1 && Ss > ei) || (Et === ni && Ss > ti))
        )
          return 1;
        for (;;) {
          for (
            Ns = gs - ys,
              Bs =
                ss[ps] + 1 < hs
                  ? ((Rs = 0), ss[ps])
                  : ss[ps] >= hs
                  ? ((Rs = Ms[ss[ps] - hs]), ws[ss[ps] - hs])
                  : ((Rs = 96), 0),
              as = 1 << (gs - ys),
              cs = 1 << Cs,
              ms = cs;
            (cs -= as),
              (ns[ls + (vs >> ys) + cs] = (Ns << 24) | (Rs << 16) | Bs | 0),
              cs !== 0;

          );
          for (as = 1 << (gs - 1); vs & as; ) as >>= 1;
          if (
            (as !== 0 ? (vs = (vs &= as - 1) + as) : (vs = 0),
            ps++,
            --Ts[gs] == 0)
          ) {
            if (gs === Es) break;
            gs = es[ts + ss[ps]];
          }
          if (gs > $s && (vs & us) !== fs) {
            for (
              ys === 0 && (ys = $s), ls += ms, Cs = gs - ys, bs = 1 << Cs;
              Cs + ys < Es && !((bs -= Ts[Cs + ys]) <= 0);

            )
              Cs++, (bs <<= 1);
            if (
              ((Ss += 1 << Cs),
              (Et === ct$1 && Ss > ei) || (Et === ni && Ss > ti))
            )
              return 1;
            ns[(fs = vs & us)] = ($s << 24) | (Cs << 16) | (ls - rs) | 0;
          }
        }
        vs !== 0 && (ns[ls + vs] = ((gs - ys) << 24) | (64 << 16) | 0),
          (os.bits = $s);
      }
      return 0;
    };
  var Te$1 = La;
  const Ua = 0,
    ai = 1,
    ri = 2,
    {
      Z_FINISH: li,
      Z_BLOCK: Ca,
      Z_TREES: He$1,
      Z_OK: ae$1,
      Z_STREAM_END: $a,
      Z_NEED_DICT: Fa,
      Z_STREAM_ERROR: $$2,
      Z_DATA_ERROR: fi,
      Z_MEM_ERROR: oi,
      Z_BUF_ERROR: Ma,
      Z_DEFLATED: _i,
    } = ee$1,
    Be = 16180,
    hi = 16181,
    di = 16182,
    si = 16183,
    ci = 16184,
    ui = 16185,
    wi = 16186,
    bi = 16187,
    gi = 16188,
    pi = 16189,
    Ke$1 = 16190,
    P$5 = 16191,
    ut$1 = 16192,
    xi = 16193,
    wt$1 = 16194,
    vi = 16195,
    ki = 16196,
    Ei = 16197,
    yi = 16198,
    Pe$1 = 16199,
    Xe$1 = 16200,
    mi = 16201,
    zi = 16202,
    Si = 16203,
    Ai = 16204,
    Ri = 16205,
    bt$1 = 16206,
    Ti = 16207,
    Di = 16208,
    R$2 = 16209,
    Zi = 16210,
    Ii = 16211,
    Ha = 852,
    Ba = 592,
    Ka = 15,
    Pa = Ka,
    Oi = (Et) =>
      ((Et >>> 24) & 255) +
      ((Et >>> 8) & 65280) +
      ((65280 & Et) << 8) +
      ((255 & Et) << 24);
  function Xa() {
    (this.strm = null),
      (this.mode = 0),
      (this.last = !1),
      (this.wrap = 0),
      (this.havedict = !1),
      (this.flags = 0),
      (this.dmax = 0),
      (this.check = 0),
      (this.total = 0),
      (this.head = null),
      (this.wbits = 0),
      (this.wsize = 0),
      (this.whave = 0),
      (this.wnext = 0),
      (this.window = null),
      (this.hold = 0),
      (this.bits = 0),
      (this.length = 0),
      (this.offset = 0),
      (this.extra = 0),
      (this.lencode = null),
      (this.distcode = null),
      (this.lenbits = 0),
      (this.distbits = 0),
      (this.ncode = 0),
      (this.nlen = 0),
      (this.ndist = 0),
      (this.have = 0),
      (this.next = null),
      (this.lens = new Uint16Array(320)),
      (this.work = new Uint16Array(288)),
      (this.lendyn = null),
      (this.distdyn = null),
      (this.sane = 0),
      (this.back = 0),
      (this.was = 0);
  }
  const re$1 = (Et) => {
      var es;
      return !Et ||
        !(es = Et.state) ||
        es.strm !== Et ||
        es.mode < Be ||
        es.mode > Ii
        ? 1
        : 0;
    },
    Ni = (Et) => {
      var es;
      return re$1(Et)
        ? $$2
        : ((es = Et.state),
          (Et.total_in = Et.total_out = es.total = 0),
          (Et.msg = ""),
          es.wrap && (Et.adler = 1 & es.wrap),
          (es.mode = Be),
          (es.last = 0),
          (es.havedict = 0),
          (es.flags = -1),
          (es.dmax = 32768),
          (es.head = null),
          (es.hold = 0),
          (es.bits = 0),
          (es.lencode = es.lendyn = new Int32Array(Ha)),
          (es.distcode = es.distdyn = new Int32Array(Ba)),
          (es.sane = 1),
          (es.back = -1),
          ae$1);
    },
    Li = (Et) => {
      var es;
      return re$1(Et)
        ? $$2
        : (((es = Et.state).wsize = 0), (es.whave = 0), (es.wnext = 0), Ni(Et));
    },
    Ui = (Et, es) => {
      let ts;
      var is;
      return re$1(Et) ||
        ((is = Et.state),
        es < 0
          ? ((ts = 0), (es = -es))
          : ((ts = 5 + (es >> 4)), es < 48 && (es &= 15)),
        es && (es < 8 || 15 < es))
        ? $$2
        : (is.window !== null && is.wbits !== es && (is.window = null),
          (is.wrap = ts),
          (is.wbits = es),
          Li(Et));
    },
    Ci = (Et, es) => {
      var ts;
      return Et
        ? ((ts = new Xa()),
          ((Et.state = ts).strm = Et),
          (ts.window = null),
          (ts.mode = Be),
          (ts = Ui(Et, es)) !== ae$1 && (Et.state = null),
          ts)
        : $$2;
    },
    Ya = (Et) => Ci(Et, Pa);
  let $i = !0,
    gt$1,
    pt$1;
  const Ga = (Et) => {
      if ($i) {
        (gt$1 = new Int32Array(512)), (pt$1 = new Int32Array(32));
        let es = 0;
        for (; es < 144; ) Et.lens[es++] = 8;
        for (; es < 256; ) Et.lens[es++] = 9;
        for (; es < 280; ) Et.lens[es++] = 7;
        for (; es < 288; ) Et.lens[es++] = 8;
        for (
          Te$1(ai, Et.lens, 0, 288, gt$1, 0, Et.work, { bits: 9 }), es = 0;
          es < 32;

        )
          Et.lens[es++] = 5;
        Te$1(ri, Et.lens, 0, 32, pt$1, 0, Et.work, { bits: 5 }), ($i = !1);
      }
      (Et.lencode = gt$1),
        (Et.lenbits = 9),
        (Et.distcode = pt$1),
        (Et.distbits = 5);
    },
    Fi = (Et, es, ts, is) => {
      let ns;
      return (
        (Et = Et.state),
        Et.window === null &&
          ((Et.wsize = 1 << Et.wbits),
          (Et.wnext = 0),
          (Et.whave = 0),
          (Et.window = new Uint8Array(Et.wsize))),
        is >= Et.wsize
          ? (Et.window.set(es.subarray(ts - Et.wsize, ts), 0),
            (Et.wnext = 0),
            (Et.whave = Et.wsize))
          : ((ns = Et.wsize - Et.wnext) > is && (ns = is),
            Et.window.set(es.subarray(ts - is, ts - is + ns), Et.wnext),
            (is -= ns)
              ? (Et.window.set(es.subarray(ts - is, ts), 0),
                (Et.wnext = is),
                (Et.whave = Et.wsize))
              : ((Et.wnext += ns),
                Et.wnext === Et.wsize && (Et.wnext = 0),
                Et.whave < Et.wsize && (Et.whave += ns))),
        0
      );
    },
    ja = (Et, es) => {
      let ts,
        is,
        ns,
        rs,
        ss,
        os,
        ds,
        as,
        cs,
        fs,
        us,
        ls,
        hs,
        gs,
        ps,
        ms,
        Es,
        $s,
        Cs,
        ys,
        bs,
        Ss,
        vs = 0;
      var ws = new Uint8Array(4);
      let Ts, Ds;
      var Ns = new Uint8Array([
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ]);
      if (re$1(Et) || !Et.output || (!Et.input && Et.avail_in !== 0))
        return $$2;
      (ts = Et.state).mode === P$5 && (ts.mode = ut$1),
        (ss = Et.next_out),
        (ns = Et.output),
        (ds = Et.avail_out),
        (rs = Et.next_in),
        (is = Et.input),
        (os = Et.avail_in),
        (as = ts.hold),
        (cs = ts.bits),
        (fs = os),
        (us = ds),
        (Ss = ae$1);
      e: for (;;)
        switch (ts.mode) {
          case Be:
            if (ts.wrap === 0) ts.mode = ut$1;
            else {
              for (; cs < 16; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              2 & ts.wrap && as === 35615
                ? (ts.wbits === 0 && (ts.wbits = 15),
                  (ws[(ts.check = 0)] = 255 & as),
                  (ws[1] = (as >>> 8) & 255),
                  (ts.check = Z$3(ts.check, ws, 2, 0)),
                  (as = 0),
                  (cs = 0),
                  (ts.mode = hi))
                : (ts.head && (ts.head.done = !1),
                  !(1 & ts.wrap) || (((255 & as) << 8) + (as >> 8)) % 31
                    ? ((Et.msg = "incorrect header check"), (ts.mode = R$2))
                    : (15 & as) !== _i
                    ? ((Et.msg = "unknown compression method"), (ts.mode = R$2))
                    : ((as >>>= 4),
                      (cs -= 4),
                      (bs = 8 + (15 & as)),
                      ts.wbits === 0 && (ts.wbits = bs),
                      15 < bs || bs > ts.wbits
                        ? ((Et.msg = "invalid window size"), (ts.mode = R$2))
                        : ((ts.dmax = 1 << ts.wbits),
                          (ts.flags = 0),
                          (Et.adler = ts.check = 1),
                          (ts.mode = 512 & as ? pi : P$5),
                          (as = 0),
                          (cs = 0))));
            }
            break;
          case hi:
            for (; cs < 16; ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            if (((ts.flags = as), (255 & ts.flags) !== _i)) {
              (Et.msg = "unknown compression method"), (ts.mode = R$2);
              break;
            }
            if (57344 & ts.flags) {
              (Et.msg = "unknown header flags set"), (ts.mode = R$2);
              break;
            }
            ts.head && (ts.head.text = (as >> 8) & 1),
              512 & ts.flags &&
                4 & ts.wrap &&
                ((ws[0] = 255 & as),
                (ws[1] = (as >>> 8) & 255),
                (ts.check = Z$3(ts.check, ws, 2, 0))),
              (as = 0),
              (cs = 0),
              (ts.mode = di);
          case di:
            for (; cs < 32; ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            ts.head && (ts.head.time = as),
              512 & ts.flags &&
                4 & ts.wrap &&
                ((ws[0] = 255 & as),
                (ws[1] = (as >>> 8) & 255),
                (ws[2] = (as >>> 16) & 255),
                (ws[3] = (as >>> 24) & 255),
                (ts.check = Z$3(ts.check, ws, 4, 0))),
              (as = 0),
              (cs = 0),
              (ts.mode = si);
          case si:
            for (; cs < 16; ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            ts.head && ((ts.head.xflags = 255 & as), (ts.head.os = as >> 8)),
              512 & ts.flags &&
                4 & ts.wrap &&
                ((ws[0] = 255 & as),
                (ws[1] = (as >>> 8) & 255),
                (ts.check = Z$3(ts.check, ws, 2, 0))),
              (as = 0),
              (cs = 0),
              (ts.mode = ci);
          case ci:
            if (1024 & ts.flags) {
              for (; cs < 16; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              (ts.length = as),
                ts.head && (ts.head.extra_len = as),
                512 & ts.flags &&
                  4 & ts.wrap &&
                  ((ws[0] = 255 & as),
                  (ws[1] = (as >>> 8) & 255),
                  (ts.check = Z$3(ts.check, ws, 2, 0))),
                (as = 0),
                (cs = 0);
            } else ts.head && (ts.head.extra = null);
            ts.mode = ui;
          case ui:
            if (
              1024 & ts.flags &&
              ((ls = (ls = ts.length) > os ? os : ls) &&
                (ts.head &&
                  ((bs = ts.head.extra_len - ts.length),
                  ts.head.extra ||
                    (ts.head.extra = new Uint8Array(ts.head.extra_len)),
                  ts.head.extra.set(is.subarray(rs, rs + ls), bs)),
                512 & ts.flags &&
                  4 & ts.wrap &&
                  (ts.check = Z$3(ts.check, is, ls, rs)),
                (os -= ls),
                (rs += ls),
                (ts.length -= ls)),
              ts.length)
            )
              break e;
            (ts.length = 0), (ts.mode = wi);
          case wi:
            if (2048 & ts.flags) {
              if (os === 0) break e;
              for (
                ls = 0;
                (bs = is[rs + ls++]),
                  ts.head &&
                    bs &&
                    ts.length < 65536 &&
                    (ts.head.name += String.fromCharCode(bs)),
                  bs && ls < os;

              );
              if (
                (512 & ts.flags &&
                  4 & ts.wrap &&
                  (ts.check = Z$3(ts.check, is, ls, rs)),
                (os -= ls),
                (rs += ls),
                bs)
              )
                break e;
            } else ts.head && (ts.head.name = null);
            (ts.length = 0), (ts.mode = bi);
          case bi:
            if (4096 & ts.flags) {
              if (os === 0) break e;
              for (
                ls = 0;
                (bs = is[rs + ls++]),
                  ts.head &&
                    bs &&
                    ts.length < 65536 &&
                    (ts.head.comment += String.fromCharCode(bs)),
                  bs && ls < os;

              );
              if (
                (512 & ts.flags &&
                  4 & ts.wrap &&
                  (ts.check = Z$3(ts.check, is, ls, rs)),
                (os -= ls),
                (rs += ls),
                bs)
              )
                break e;
            } else ts.head && (ts.head.comment = null);
            ts.mode = gi;
          case gi:
            if (512 & ts.flags) {
              for (; cs < 16; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              if (4 & ts.wrap && as !== (65535 & ts.check)) {
                (Et.msg = "header crc mismatch"), (ts.mode = R$2);
                break;
              }
              (as = 0), (cs = 0);
            }
            ts.head &&
              ((ts.head.hcrc = (ts.flags >> 9) & 1), (ts.head.done = !0)),
              (Et.adler = ts.check = 0),
              (ts.mode = P$5);
            break;
          case pi:
            for (; cs < 32; ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            (Et.adler = ts.check = Oi(as)),
              (as = 0),
              (cs = 0),
              (ts.mode = Ke$1);
          case Ke$1:
            if (ts.havedict === 0)
              return (
                (Et.next_out = ss),
                (Et.avail_out = ds),
                (Et.next_in = rs),
                (Et.avail_in = os),
                (ts.hold = as),
                (ts.bits = cs),
                Fa
              );
            (Et.adler = ts.check = 1), (ts.mode = P$5);
          case P$5:
            if (es === Ca || es === He$1) break e;
          case ut$1:
            if (ts.last) (as >>>= 7 & cs), (cs -= 7 & cs), (ts.mode = bt$1);
            else {
              for (; cs < 3; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              switch (((ts.last = 1 & as), (as >>>= 1), --cs, 3 & as)) {
                case 0:
                  ts.mode = xi;
                  break;
                case 1:
                  if ((Ga(ts), (ts.mode = Pe$1), es !== He$1)) break;
                  (as >>>= 2), (cs -= 2);
                  break e;
                case 2:
                  ts.mode = ki;
                  break;
                case 3:
                  (Et.msg = "invalid block type"), (ts.mode = R$2);
              }
              (as >>>= 2), (cs -= 2);
            }
            break;
          case xi:
            for (as >>>= 7 & cs, cs -= 7 & cs; cs < 32; ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            if ((65535 & as) != ((as >>> 16) ^ 65535)) {
              (Et.msg = "invalid stored block lengths"), (ts.mode = R$2);
              break;
            }
            if (
              ((ts.length = 65535 & as),
              (as = 0),
              (cs = 0),
              (ts.mode = wt$1),
              es === He$1)
            )
              break e;
          case wt$1:
            ts.mode = vi;
          case vi:
            if ((ls = ts.length)) {
              if ((ls = (ls = ls > os ? os : ls) > ds ? ds : ls) === 0) break e;
              ns.set(is.subarray(rs, rs + ls), ss),
                (os -= ls),
                (rs += ls),
                (ds -= ls),
                (ss += ls),
                (ts.length -= ls);
            } else ts.mode = P$5;
            break;
          case ki:
            for (; cs < 14; ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            if (
              ((ts.nlen = 257 + (31 & as)),
              (as >>>= 5),
              (cs -= 5),
              (ts.ndist = 1 + (31 & as)),
              (as >>>= 5),
              (cs -= 5),
              (ts.ncode = 4 + (15 & as)),
              (as >>>= 4),
              (cs -= 4),
              286 < ts.nlen || 30 < ts.ndist)
            ) {
              (Et.msg = "too many length or distance symbols"), (ts.mode = R$2);
              break;
            }
            (ts.have = 0), (ts.mode = Ei);
          case Ei:
            for (; ts.have < ts.ncode; ) {
              for (; cs < 3; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              (ts.lens[Ns[ts.have++]] = 7 & as), (as >>>= 3), (cs -= 3);
            }
            for (; ts.have < 19; ) ts.lens[Ns[ts.have++]] = 0;
            if (
              ((ts.lencode = ts.lendyn),
              (ts.lenbits = 7),
              (Ts = { bits: ts.lenbits }),
              (Ss = Te$1(Ua, ts.lens, 0, 19, ts.lencode, 0, ts.work, Ts)),
              (ts.lenbits = Ts.bits),
              Ss)
            ) {
              (Et.msg = "invalid code lengths set"), (ts.mode = R$2);
              break;
            }
            (ts.have = 0), (ts.mode = yi);
          case yi:
            for (; ts.have < ts.nlen + ts.ndist; ) {
              for (
                ;
                (vs = ts.lencode[as & ((1 << ts.lenbits) - 1)]),
                  (ps = vs >>> 24),
                  (ms = (vs >>> 16) & 255),
                  (Es = 65535 & vs),
                  !(ps <= cs);

              ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              if (Es < 16) (as >>>= ps), (cs -= ps), (ts.lens[ts.have++] = Es);
              else {
                if (Es === 16) {
                  for (Ds = ps + 2; cs < Ds; ) {
                    if (os === 0) break e;
                    os--, (as += is[rs++] << cs), (cs += 8);
                  }
                  if (((as >>>= ps), (cs -= ps), ts.have === 0)) {
                    (Et.msg = "invalid bit length repeat"), (ts.mode = R$2);
                    break;
                  }
                  (bs = ts.lens[ts.have - 1]),
                    (ls = 3 + (3 & as)),
                    (as >>>= 2),
                    (cs -= 2);
                } else if (Es === 17) {
                  for (Ds = ps + 3; cs < Ds; ) {
                    if (os === 0) break e;
                    os--, (as += is[rs++] << cs), (cs += 8);
                  }
                  (as >>>= ps),
                    (cs -= ps),
                    (bs = 0),
                    (ls = 3 + (7 & as)),
                    (as >>>= 3),
                    (cs -= 3);
                } else {
                  for (Ds = ps + 7; cs < Ds; ) {
                    if (os === 0) break e;
                    os--, (as += is[rs++] << cs), (cs += 8);
                  }
                  (as >>>= ps),
                    (cs -= ps),
                    (bs = 0),
                    (ls = 11 + (127 & as)),
                    (as >>>= 7),
                    (cs -= 7);
                }
                if (ts.have + ls > ts.nlen + ts.ndist) {
                  (Et.msg = "invalid bit length repeat"), (ts.mode = R$2);
                  break;
                }
                for (; ls--; ) ts.lens[ts.have++] = bs;
              }
            }
            if (ts.mode === R$2) break;
            if (ts.lens[256] === 0) {
              (Et.msg = "invalid code -- missing end-of-block"),
                (ts.mode = R$2);
              break;
            }
            if (
              ((ts.lenbits = 9),
              (Ts = { bits: ts.lenbits }),
              (Ss = Te$1(ai, ts.lens, 0, ts.nlen, ts.lencode, 0, ts.work, Ts)),
              (ts.lenbits = Ts.bits),
              Ss)
            ) {
              (Et.msg = "invalid literal/lengths set"), (ts.mode = R$2);
              break;
            }
            if (
              ((ts.distbits = 6),
              (ts.distcode = ts.distdyn),
              (Ts = { bits: ts.distbits }),
              (Ss = Te$1(
                ri,
                ts.lens,
                ts.nlen,
                ts.ndist,
                ts.distcode,
                0,
                ts.work,
                Ts
              )),
              (ts.distbits = Ts.bits),
              Ss)
            ) {
              (Et.msg = "invalid distances set"), (ts.mode = R$2);
              break;
            }
            if (((ts.mode = Pe$1), es === He$1)) break e;
          case Pe$1:
            ts.mode = Xe$1;
          case Xe$1:
            if (6 <= os && 258 <= ds) {
              (Et.next_out = ss),
                (Et.avail_out = ds),
                (Et.next_in = rs),
                (Et.avail_in = os),
                (ts.hold = as),
                (ts.bits = cs),
                Da(Et, us),
                (ss = Et.next_out),
                (ns = Et.output),
                (ds = Et.avail_out),
                (rs = Et.next_in),
                (is = Et.input),
                (os = Et.avail_in),
                (as = ts.hold),
                (cs = ts.bits),
                ts.mode === P$5 && (ts.back = -1);
              break;
            }
            for (
              ts.back = 0;
              (vs = ts.lencode[as & ((1 << ts.lenbits) - 1)]),
                (ps = vs >>> 24),
                (ms = (vs >>> 16) & 255),
                (Es = 65535 & vs),
                !(ps <= cs);

            ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            if (ms && (240 & ms) == 0) {
              for (
                $s = ps, Cs = ms, ys = Es;
                (vs = ts.lencode[ys + ((as & ((1 << ($s + Cs)) - 1)) >> $s)]),
                  (ps = vs >>> 24),
                  (ms = (vs >>> 16) & 255),
                  (Es = 65535 & vs),
                  !($s + ps <= cs);

              ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              (as >>>= $s), (cs -= $s), (ts.back += $s);
            }
            if (
              ((as >>>= ps),
              (cs -= ps),
              (ts.back += ps),
              (ts.length = Es),
              ms === 0)
            ) {
              ts.mode = Ri;
              break;
            }
            if (32 & ms) {
              (ts.back = -1), (ts.mode = P$5);
              break;
            }
            if (64 & ms) {
              (Et.msg = "invalid literal/length code"), (ts.mode = R$2);
              break;
            }
            (ts.extra = 15 & ms), (ts.mode = mi);
          case mi:
            if (ts.extra) {
              for (Ds = ts.extra; cs < Ds; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              (ts.length += as & ((1 << ts.extra) - 1)),
                (as >>>= ts.extra),
                (cs -= ts.extra),
                (ts.back += ts.extra);
            }
            (ts.was = ts.length), (ts.mode = zi);
          case zi:
            for (
              ;
              (vs = ts.distcode[as & ((1 << ts.distbits) - 1)]),
                (ps = vs >>> 24),
                (ms = (vs >>> 16) & 255),
                (Es = 65535 & vs),
                !(ps <= cs);

            ) {
              if (os === 0) break e;
              os--, (as += is[rs++] << cs), (cs += 8);
            }
            if ((240 & ms) == 0) {
              for (
                $s = ps, Cs = ms, ys = Es;
                (vs = ts.distcode[ys + ((as & ((1 << ($s + Cs)) - 1)) >> $s)]),
                  (ps = vs >>> 24),
                  (ms = (vs >>> 16) & 255),
                  (Es = 65535 & vs),
                  !($s + ps <= cs);

              ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              (as >>>= $s), (cs -= $s), (ts.back += $s);
            }
            if (((as >>>= ps), (cs -= ps), (ts.back += ps), 64 & ms)) {
              (Et.msg = "invalid distance code"), (ts.mode = R$2);
              break;
            }
            (ts.offset = Es), (ts.extra = 15 & ms), (ts.mode = Si);
          case Si:
            if (ts.extra) {
              for (Ds = ts.extra; cs < Ds; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              (ts.offset += as & ((1 << ts.extra) - 1)),
                (as >>>= ts.extra),
                (cs -= ts.extra),
                (ts.back += ts.extra);
            }
            if (ts.offset > ts.dmax) {
              (Et.msg = "invalid distance too far back"), (ts.mode = R$2);
              break;
            }
            ts.mode = Ai;
          case Ai:
            if (ds === 0) break e;
            if (((ls = us - ds), ts.offset > ls)) {
              if ((ls = ts.offset - ls) > ts.whave && ts.sane) {
                (Et.msg = "invalid distance too far back"), (ts.mode = R$2);
                break;
              }
              (hs =
                ls > ts.wnext
                  ? ((ls -= ts.wnext), ts.wsize - ls)
                  : ts.wnext - ls),
                ls > ts.length && (ls = ts.length),
                (gs = ts.window);
            } else (gs = ns), (hs = ss - ts.offset), (ls = ts.length);
            for (
              ls > ds && (ls = ds), ds -= ls, ts.length -= ls;
              (ns[ss++] = gs[hs++]), --ls;

            );
            ts.length === 0 && (ts.mode = Xe$1);
            break;
          case Ri:
            if (ds === 0) break e;
            (ns[ss++] = ts.length), ds--, (ts.mode = Xe$1);
            break;
          case bt$1:
            if (ts.wrap) {
              for (; cs < 32; ) {
                if (os === 0) break e;
                os--, (as |= is[rs++] << cs), (cs += 8);
              }
              if (
                ((us -= ds),
                (Et.total_out += us),
                (ts.total += us),
                4 & ts.wrap &&
                  us &&
                  (Et.adler = ts.check =
                    (ts.flags ? Z$3 : ve$1)(ts.check, ns, us, ss - us)),
                (us = ds),
                4 & ts.wrap && (ts.flags ? as : Oi(as)) !== ts.check)
              ) {
                (Et.msg = "incorrect data check"), (ts.mode = R$2);
                break;
              }
              (as = 0), (cs = 0);
            }
            ts.mode = Ti;
          case Ti:
            if (ts.wrap && ts.flags) {
              for (; cs < 32; ) {
                if (os === 0) break e;
                os--, (as += is[rs++] << cs), (cs += 8);
              }
              if (4 & ts.wrap && as !== (4294967295 & ts.total)) {
                (Et.msg = "incorrect length check"), (ts.mode = R$2);
                break;
              }
              (as = 0), (cs = 0);
            }
            ts.mode = Di;
          case Di:
            Ss = $a;
            break e;
          case R$2:
            Ss = fi;
            break e;
          case Zi:
            return oi;
          default:
            return $$2;
        }
      return (
        (Et.next_out = ss),
        (Et.avail_out = ds),
        (Et.next_in = rs),
        (Et.avail_in = os),
        (ts.hold = as),
        (ts.bits = cs),
        (ts.wsize ||
          (us !== Et.avail_out &&
            ts.mode < R$2 &&
            (ts.mode < bt$1 || es !== li))) &&
          Fi(Et, Et.output, Et.next_out, us - Et.avail_out),
        (fs -= Et.avail_in),
        (us -= Et.avail_out),
        (Et.total_in += fs),
        (Et.total_out += us),
        (ts.total += us),
        4 & ts.wrap &&
          us &&
          (Et.adler = ts.check =
            (ts.flags ? Z$3 : ve$1)(ts.check, ns, us, Et.next_out - us)),
        (Et.data_type =
          ts.bits +
          (ts.last ? 64 : 0) +
          (ts.mode === P$5 ? 128 : 0) +
          (ts.mode === Pe$1 || ts.mode === wt$1 ? 256 : 0)),
        (Ss = ((fs == 0 && us === 0) || es === li) && Ss === ae$1 ? Ma : Ss)
      );
    },
    Wa = (Et) => {
      var es;
      return re$1(Et)
        ? $$2
        : ((es = Et.state).window && (es.window = null),
          (Et.state = null),
          ae$1);
    },
    Va = (Et, es) =>
      re$1(Et) || (2 & (Et = Et.state).wrap) == 0
        ? $$2
        : (((Et.head = es).done = !1), ae$1),
    Ja = (Et, es) => {
      var ts = es.length;
      let is;
      return re$1(Et) || ((is = Et.state).wrap !== 0 && is.mode !== Ke$1)
        ? $$2
        : is.mode === Ke$1 && ve$1(1, es, ts, 0) !== is.check
        ? fi
        : Fi(Et, es, ts, ts)
        ? ((is.mode = Zi), oi)
        : ((is.havedict = 1), ae$1);
    };
  var Qa = Li,
    qa = Ui,
    er$1 = Ni,
    tr$1 = Ya,
    ir$1 = Ci,
    nr$1 = ja,
    ar$1 = Wa,
    rr$1 = Va,
    lr$1 = Ja,
    fr$1 = "pako inflate (from Nodeca project)",
    X$1 = {
      inflateReset: Qa,
      inflateReset2: qa,
      inflateResetKeep: er$1,
      inflateInit: tr$1,
      inflateInit2: ir$1,
      inflate: nr$1,
      inflateEnd: ar$1,
      inflateGetHeader: rr$1,
      inflateSetDictionary: lr$1,
      inflateInfo: fr$1,
    };
  function or$1() {
    (this.text = 0),
      (this.time = 0),
      (this.xflags = 0),
      (this.os = 0),
      (this.extra = null),
      (this.extra_len = 0),
      (this.name = ""),
      (this.comment = ""),
      (this.hcrc = 0),
      (this.done = !1);
  }
  var _r$1 = or$1;
  const Mi = Object.prototype.toString,
    {
      Z_NO_FLUSH: hr$1,
      Z_FINISH: dr$1,
      Z_OK: De$1,
      Z_STREAM_END: xt,
      Z_NEED_DICT: vt$1,
      Z_STREAM_ERROR: sr$1,
      Z_DATA_ERROR: Hi,
      Z_MEM_ERROR: cr$1,
    } = ee$1;
  function Ze$1(Et) {
    this.options = $e$1.assign(
      { chunkSize: 65536, windowBits: 15, to: "" },
      Et || {}
    );
    var es = this.options;
    es.raw &&
      0 <= es.windowBits &&
      es.windowBits < 16 &&
      ((es.windowBits = -es.windowBits), es.windowBits === 0) &&
      (es.windowBits = -15),
      !(0 <= es.windowBits && es.windowBits < 16) ||
        (Et && Et.windowBits) ||
        (es.windowBits += 32),
      15 < es.windowBits &&
        es.windowBits < 48 &&
        (15 & es.windowBits) == 0 &&
        (es.windowBits |= 15),
      (this.err = 0),
      (this.msg = ""),
      (this.ended = !1),
      (this.chunks = []),
      (this.strm = new Qt$1()),
      (this.strm.avail_out = 0);
    let ts = X$1.inflateInit2(this.strm, es.windowBits);
    if (ts !== De$1) throw new Error(q$2[ts]);
    if (
      ((this.header = new _r$1()),
      X$1.inflateGetHeader(this.strm, this.header),
      es.dictionary &&
        (typeof es.dictionary == "string"
          ? (es.dictionary = Ae$1.string2buf(es.dictionary))
          : Mi.call(es.dictionary) === "[object ArrayBuffer]" &&
            (es.dictionary = new Uint8Array(es.dictionary)),
        es.raw) &&
        (ts = X$1.inflateSetDictionary(this.strm, es.dictionary)) !== De$1)
    )
      throw new Error(q$2[ts]);
  }
  function kt$1(Et, es) {
    if (((es = new Ze$1(es)), es.push(Et), es.err)) throw es.msg || q$2[es.err];
    return es.result;
  }
  function ur$1(Et, es) {
    return ((es = es || {}).raw = !0), kt$1(Et, es);
  }
  (Ze$1.prototype.push = function (Et, es) {
    var ts,
      is,
      ns,
      rs = this.strm,
      ss = this.options.chunkSize,
      os = this.options.dictionary;
    let ds, as, cs;
    if (this.ended) return !1;
    for (
      as = es === ~~es ? es : es === !0 ? dr$1 : hr$1,
        Mi.call(Et) === "[object ArrayBuffer]"
          ? (rs.input = new Uint8Array(Et))
          : (rs.input = Et),
        rs.next_in = 0,
        rs.avail_in = rs.input.length;
      ;

    ) {
      for (
        rs.avail_out === 0 &&
          ((rs.output = new Uint8Array(ss)),
          (rs.next_out = 0),
          (rs.avail_out = ss)),
          (ds = X$1.inflate(rs, as)) === vt$1 &&
            os &&
            ((ds = X$1.inflateSetDictionary(rs, os)) === De$1
              ? (ds = X$1.inflate(rs, as))
              : ds === Hi && (ds = vt$1));
        0 < rs.avail_in &&
        ds === xt &&
        0 < rs.state.wrap &&
        Et[rs.next_in] !== 0;

      )
        X$1.inflateReset(rs), (ds = X$1.inflate(rs, as));
      switch (ds) {
        case sr$1:
        case Hi:
        case vt$1:
        case cr$1:
          return this.onEnd(ds), !(this.ended = !0);
      }
      if (
        ((cs = rs.avail_out),
        !rs.next_out ||
          (rs.avail_out !== 0 && ds !== xt) ||
          (this.options.to === "string"
            ? ((ts = Ae$1.utf8border(rs.output, rs.next_out)),
              (is = rs.next_out - ts),
              (ns = Ae$1.buf2string(rs.output, ts)),
              (rs.next_out = is),
              (rs.avail_out = ss - is),
              is && rs.output.set(rs.output.subarray(ts, ts + is), 0),
              this.onData(ns))
            : this.onData(
                rs.output.length === rs.next_out
                  ? rs.output
                  : rs.output.subarray(0, rs.next_out)
              )),
        ds !== De$1 || cs !== 0)
      ) {
        if (ds === xt)
          return (
            (ds = X$1.inflateEnd(this.strm)), this.onEnd(ds), (this.ended = !0)
          );
        if (rs.avail_in === 0) break;
      }
    }
    return !0;
  }),
    (Ze$1.prototype.onData = function (Et) {
      this.chunks.push(Et);
    }),
    (Ze$1.prototype.onEnd = function (Et) {
      Et === De$1 &&
        (this.options.to === "string"
          ? (this.result = this.chunks.join(""))
          : (this.result = $e$1.flattenChunks(this.chunks))),
        (this.chunks = []),
        (this.err = Et),
        (this.msg = this.strm.msg);
    });
  var wr$1 = Ze$1,
    br$1 = kt$1,
    gr$1 = ur$1,
    pr$1 = kt$1,
    xr$1 = ee$1,
    vr$1 = {
      Inflate: wr$1,
      inflate: br$1,
      inflateRaw: gr$1,
      ungzip: pr$1,
      constants: xr$1,
    };
  const { Deflate: kr$1, deflate: Er$1, deflateRaw: yr$1, gzip: mr$1 } = Ra,
    { Inflate: zr$1, inflate: Sr$1, inflateRaw: Ar$1, ungzip: Rr$1 } = vr$1;
  var Tr$1 = kr$1,
    Dr$1 = Er$1,
    Zr$1 = yr$1,
    Ir$1 = mr$1,
    Or$1 = zr$1,
    Nr$1 = Sr$1,
    Lr$1 = Ar$1,
    Ur$1 = Rr$1,
    Cr$1 = ee$1,
    $r = {
      Deflate: Tr$1,
      deflate: Dr$1,
      deflateRaw: Zr$1,
      gzip: Ir$1,
      Inflate: Or$1,
      inflate: Nr$1,
      inflateRaw: Lr$1,
      ungzip: Ur$1,
      constants: Cr$1,
    },
    ve = [],
    le$2 = 0,
    be = "",
    Z$2;
  const Gt = 10485760;
  let Ae = !1,
    ce = 0,
    he$1 = [];
  function _t(Et) {
    return Et.nodeType === Et.ELEMENT_NODE;
  }
  function we(Et) {
    var es = Et == null ? void 0 : Et.host;
    return (es == null ? void 0 : es.shadowRoot) === Et;
  }
  function ke(Et) {
    return Object.prototype.toString.call(Et) === "[object ShadowRoot]";
  }
  function Ut(Et) {
    return (Et =
      Et.includes(" background-clip: text;") &&
      !Et.includes(" -webkit-background-clip: text;")
        ? Et.replace(
            " background-clip: text;",
            " -webkit-background-clip: text; background-clip: text;"
          )
        : Et);
  }
  function _e$1(Et) {
    try {
      var es = Et.rules || Et.cssRules;
      return es ? Ut(Array.from(es).map(Je).join("")) : null;
    } catch (ts) {
      return null;
    }
  }
  function Je(Et) {
    var es = Et.cssText;
    if (Zt(Et))
      try {
        es = _e$1(Et.styleSheet) || es;
      } catch (ts) {}
    return es;
  }
  function Zt(Et) {
    return "styleSheet" in Et;
  }
  (function (Et) {
    (Et[(Et.Document = 0)] = "Document"),
      (Et[(Et.DocumentType = 1)] = "DocumentType"),
      (Et[(Et.Element = 2)] = "Element"),
      (Et[(Et.Text = 3)] = "Text"),
      (Et[(Et.CDATA = 4)] = "CDATA"),
      (Et[(Et.Comment = 5)] = "Comment");
  })((Z$2 = Z$2 || {}));
  var Pe = (function () {
    function Et() {
      (this.idNodeMap = new s$5()), (this.nodeMetaMap = new WeakMap());
    }
    return (
      (Et.prototype.getId = function (es) {
        return es &&
          (es = (es = this.getMeta(es)) == null ? void 0 : es.id) != null
          ? es
          : -1;
      }),
      (Et.prototype.getNode = function (es) {
        return this.idNodeMap.get(es) || null;
      }),
      (Et.prototype.getIds = function () {
        return Array.from(this.idNodeMap.keys());
      }),
      (Et.prototype.getMeta = function (es) {
        return this.nodeMetaMap.get(es) || null;
      }),
      (Et.prototype.removeNodeFromMap = function (es) {
        var ts = this,
          is = this.getId(es);
        this.idNodeMap.delete(is),
          es.childNodes &&
            es.childNodes.forEach(function (ns) {
              return ts.removeNodeFromMap(ns);
            });
      }),
      (Et.prototype.has = function (es) {
        return this.idNodeMap.has(es);
      }),
      (Et.prototype.hasNode = function (es) {
        return this.nodeMetaMap.has(es);
      }),
      (Et.prototype.add = function (es, ts) {
        var is = ts.id;
        this.idNodeMap.set(is, es), this.nodeMetaMap.set(es, ts);
      }),
      (Et.prototype.replace = function (es, ts) {
        var is = this.getNode(es);
        is && (is = this.nodeMetaMap.get(is)) && this.nodeMetaMap.set(ts, is),
          this.idNodeMap.set(es, ts);
      }),
      (Et.prototype.reset = function () {
        (this.idNodeMap = new s$5()), (this.nodeMetaMap = new WeakMap());
      }),
      Et
    );
  })();
  function Vt() {
    return new Pe();
  }
  function Ue(ns) {
    var es = ns.maskInputOptions,
      ts = ns.tagName,
      is = ns.type,
      rs = ns.value,
      ns = ns.maskInputFn,
      rs = rs || "";
    return (rs =
      es[ts.toLowerCase()] || es[is]
        ? ns
          ? ns(rs)
          : "*".repeat(rs.length)
        : rs);
  }
  var Qe = "__rrweb_original__";
  function Kt(Et) {
    var es = Et.getContext("2d");
    if (es)
      for (var ts = 0; ts < Et.width; ts += 50)
        for (var is = 0; is < Et.height; is += 50) {
          var ns = es.getImageData,
            ns = Qe in ns ? ns[Qe] : ns;
          if (
            new Uint32Array(
              ns.call(
                es,
                ts,
                is,
                Math.min(50, Et.width - ts),
                Math.min(50, Et.height - is)
              ).data.buffer
            ).some(function (rs) {
              return rs !== 0;
            })
          )
            return;
        }
    return 1;
  }
  var zt = 1,
    Ht = new RegExp("[^a-z0-9-_:]"),
    Me = -2;
  function Xe() {
    return zt++;
  }
  function Yt(Et) {
    return Et instanceof HTMLFormElement
      ? "form"
      : ((Et = Et.tagName.toLowerCase().trim()), Ht.test(Et) ? "div" : Et);
  }
  function Jt(Et) {
    return Et.cssRules
      ? Array.from(Et.cssRules)
          .map(function (es) {
            return es.cssText || "";
          })
          .join("")
      : "";
  }
  function Pt(Et) {
    return (
      -1 < Et.indexOf("//")
        ? Et.split("/").slice(0, 3).join("/")
        : Et.split("/")[0]
    ).split("?")[0];
  }
  var fe$1,
    je,
    Qt = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,
    Xt = /^(?!www\.|(?:http|ftp)s?:\/\/|[A-Za-z]:\\|\/\/|#).*/,
    jt = /^(data:)([^,]*),(.*)/i;
  function Te(Et, es) {
    return (Et || "").replace(Qt, function (ts, is, ns, rs, ss, as) {
      if (((ns = ns || ss || as), (ss = is || rs || ""), !ns)) return ts;
      if (!Xt.test(ns) || jt.test(ns))
        return "url(".concat(ss).concat(ns).concat(ss, ")");
      if (ns[0] === "/")
        return "url("
          .concat(ss)
          .concat(Pt(es) + ns)
          .concat(ss, ")");
      var ds = es.split("/"),
        as = ns.split("/");
      ds.pop();
      for (var cs = 0, fs = as; cs < fs.length; cs++) {
        var us = fs[cs];
        us !== "." && (us === ".." ? ds.pop() : ds.push(us));
      }
      return "url(".concat(ss).concat(ds.join("/")).concat(ss, ")");
    });
  }
  var qt = /^[^ \t\n\r\u000c]+/,
    $t = /^[, \t\n\r\u000c]+/;
  function er(Et, es) {
    if (es.trim() === "") return es;
    var ts = 0;
    function is(cs) {
      var cs = cs.exec(es.substring(ts));
      return cs ? ((cs = cs[0]), (ts += cs.length), cs) : "";
    }
    for (var ns = []; is($t), !(ts >= es.length); )
      if ((ss = is(qt)).slice(-1) === ",")
        (ss = pe$2(Et, ss.substring(0, ss.length - 1))), ns.push(ss);
      else
        for (var rs = "", ss = pe$2(Et, ss), os = !1; ; ) {
          var ds = es.charAt(ts);
          if (ds === "") {
            ns.push((ss + rs).trim());
            break;
          }
          if (os) ds === ")" && (os = !1);
          else {
            if (ds === ",") {
              (ts += 1), ns.push((ss + rs).trim());
              break;
            }
            ds === "(" && (os = !0);
          }
          (rs += ds), (ts += 1);
        }
    return ns.join(", ");
  }
  function pe$2(Et, es) {
    return es && es.trim() !== ""
      ? (((Et = Et.createElement("a")).href = es), Et.href)
      : es;
  }
  function tr(Et) {
    return !(Et.tagName !== "svg" && !Et.ownerSVGElement);
  }
  function Ze() {
    var Et = document.createElement("a");
    return (Et.href = ""), Et.href;
  }
  function qe(Et, es, ts, is) {
    return ts === "src" ||
      (ts === "href" && is && (es !== "use" || is[0] !== "#")) ||
      (ts === "xlink:href" && is && is[0] !== "#") ||
      (ts === "background" &&
        is &&
        (es === "table" || es === "td" || es === "th"))
      ? pe$2(Et, is)
      : ts === "srcset" && is
      ? er(Et, is)
      : ts === "style" && is
      ? Te(is, Ze())
      : es === "object" && ts === "data" && is
      ? pe$2(Et, is)
      : is;
  }
  function rr(Et, es, ts) {
    if (typeof es == "string") {
      if (Et.classList.contains(es)) return !0;
    } else
      for (var is = Et.classList.length; is--; ) {
        var ns = Et.classList[is];
        if (es.test(ns)) return !0;
      }
    return !!ts && Et.matches(ts);
  }
  function Oe$1(Et, es, ts) {
    if (!Et) return !1;
    if (Et.nodeType === Et.ELEMENT_NODE)
      for (var is = Et.classList.length; is--; ) {
        var ns = Et.classList[is];
        if (es.test(ns)) return !0;
      }
    return !!ts && Oe$1(Et.parentNode, es, ts);
  }
  function $e(Et, es, ts) {
    if (
      ((Et = Et.nodeType === Et.ELEMENT_NODE ? Et : Et.parentElement),
      Et !== null)
    ) {
      if (typeof es == "string") {
        if (Et.classList.contains(es) || Et.closest(".".concat(es))) return 1;
      } else if (Oe$1(Et, es, !0)) return 1;
      return ts && (Et.matches(ts) || Et.closest(ts));
    }
  }
  function nr(Et, es, ts) {
    var is = Et.contentWindow;
    if (is) {
      var ns,
        rs,
        ss = !1;
      try {
        rs = is.document.readyState;
      } catch (os) {
        return;
      }
      return rs !== "complete"
        ? ((ns = setTimeout(function () {
            ss || (es(), (ss = !0));
          }, ts)),
          Et.addEventListener("load", function () {
            clearTimeout(ns), (ss = !0), es();
          }))
        : is.location.href !== (rs = "about:blank") ||
          Et.src === rs ||
          Et.src === ""
        ? (setTimeout(es, 0), Et.addEventListener("load", es))
        : void Et.addEventListener("load", es);
    }
  }
  function or(Et, es, ts) {
    var is,
      ns,
      rs = !1;
    try {
      is = Et.sheet;
    } catch (ss) {
      return;
    }
    is ||
      ((ns = setTimeout(function () {
        rs || (es(), (rs = !0));
      }, ts)),
      Et.addEventListener("load", function () {
        clearTimeout(ns), (rs = !0), es();
      }));
  }
  function ir(Et, es) {
    var ts = es.doc,
      is = es.mirror,
      ns = es.blockClass,
      rs = es.blockSelector,
      ss = es.maskTextClass,
      os = es.maskTextSelector,
      ds = es.inlineStylesheet,
      ps = es.maskInputOptions,
      as = ps === void 0 ? {} : ps,
      cs = es.maskTextFn,
      fs = es.maskInputFn,
      ps = es.dataURLOptions,
      us = ps === void 0 ? {} : ps,
      ls = es.inlineImages,
      hs = es.recordCanvas,
      gs = es.keepIframeSrcFn,
      ps = es.newlyAddedElement,
      ms = ps !== void 0 && ps,
      Es = ar(ts, is);
    switch (Et.nodeType) {
      case Et.DOCUMENT_NODE:
        return Et.compatMode !== "CSS1Compat"
          ? { type: Z$2.Document, childNodes: [], compatMode: Et.compatMode }
          : { type: Z$2.Document, childNodes: [] };
      case Et.DOCUMENT_TYPE_NODE:
        return {
          type: Z$2.DocumentType,
          name: Et.name,
          publicId: Et.publicId,
          systemId: Et.systemId,
          rootId: Es,
        };
      case Et.ELEMENT_NODE:
        return lr(Et, {
          doc: ts,
          blockClass: ns,
          blockSelector: rs,
          inlineStylesheet: ds,
          maskInputOptions: as,
          maskInputFn: fs,
          dataURLOptions: us,
          inlineImages: ls,
          recordCanvas: hs,
          keepIframeSrcFn: gs,
          newlyAddedElement: ms,
          rootId: Es,
        });
      case Et.TEXT_NODE:
        return sr(Et, {
          maskTextClass: ss,
          maskTextSelector: os,
          maskTextFn: cs,
          rootId: Es,
        });
      case Et.CDATA_SECTION_NODE:
        return { type: Z$2.CDATA, textContent: "", rootId: Es };
      case Et.COMMENT_NODE:
        return {
          type: Z$2.Comment,
          textContent: Et.textContent || "",
          rootId: Es,
        };
      default:
        return !1;
    }
  }
  function ar(Et, es) {
    return !es.hasNode(Et) || (es = es.getId(Et)) === 1 ? void 0 : es;
  }
  function sr(Et, es) {
    var ts,
      is = es.maskTextClass,
      ns = es.maskTextSelector,
      rs = es.maskTextFn,
      ss = es.rootId,
      as = Et.parentNode && Et.parentNode.tagName,
      os = Et.textContent,
      ds = as === "STYLE" || void 0,
      as = as === "SCRIPT" || void 0;
    if (ds && os) {
      try {
        Et.nextSibling ||
          Et.previousSibling ||
          ((ts = Et.parentNode.sheet) != null &&
            ts.cssRules &&
            (os = Jt(Et.parentNode.sheet)));
      } catch (cs) {
        console.warn(
          "Cannot get CSS styles from text's parentNode. Error: ".concat(cs),
          Et
        );
      }
      os = Te(os, Ze());
    }
    return (
      as && (os = "SCRIPT_PLACEHOLDER"),
      !ds &&
        !as &&
        os &&
        $e(Et, is, ns) &&
        (os = rs ? rs(os) : os.replace(/[\S]/g, "*")),
      { type: Z$2.Text, textContent: os || "", isStyle: ds, rootId: ss }
    );
  }
  function lr(Et, es) {
    for (
      var ts,
        is,
        ns,
        rs = es.doc,
        gs = es.blockClass,
        ss = es.blockSelector,
        os = es.inlineStylesheet,
        ds = es.maskInputOptions,
        ds = ds === void 0 ? {} : ds,
        as = es.maskInputFn,
        fs = es.dataURLOptions,
        cs = fs === void 0 ? {} : fs,
        fs = es.inlineImages,
        us = es.recordCanvas,
        ls = es.keepIframeSrcFn,
        hs = es.newlyAddedElement,
        hs = hs !== void 0 && hs,
        es = es.rootId,
        gs = rr(Et, gs, ss),
        ps = Yt(Et),
        ms = {},
        Es = Et.attributes.length,
        $s = 0;
      $s < Es;
      $s++
    ) {
      var Cs = Et.attributes[$s];
      ms[Cs.name] = qe(rs, ps, Cs.name, Cs.value);
    }
    return (
      ps === "link" &&
        os &&
        ((ts = null),
        (ts = (ss = Array.from(rs.styleSheets).find(function (ys) {
          return ys.href === Et.href;
        }))
          ? _e$1(ss)
          : ts)) &&
        (delete ms.rel, delete ms.href, (ms._cssText = Te(ts, ss.href))),
      ps === "style" &&
        Et.sheet &&
        !(Et.innerText || Et.textContent || "").trim().length &&
        (ts = _e$1(Et.sheet)) &&
        (ms._cssText = Te(ts, Ze())),
      (ps !== "input" && ps !== "textarea" && ps !== "select") ||
        ((os = Et.value),
        (ss = Et.checked),
        ms.type !== "radio" &&
        ms.type !== "checkbox" &&
        ms.type !== "submit" &&
        ms.type !== "button" &&
        os
          ? (ms.value = Ue({
              type: ms.type,
              tagName: ps,
              value: os,
              maskInputOptions: ds,
              maskInputFn: as,
            }))
          : ss && (ms.checked = ss)),
      ps === "option" &&
        (Et.selected && !ds.select ? (ms.selected = !0) : delete ms.selected),
      ps === "canvas" &&
        us &&
        (Et.__context === "2d"
          ? Kt(Et) || (ms.rr_dataURL = Et.toDataURL(cs.type, cs.quality))
          : "__context" in Et ||
            ((ts = Et.toDataURL(cs.type, cs.quality)),
            ((os = document.createElement("canvas")).width = Et.width),
            (os.height = Et.height),
            ts !== os.toDataURL(cs.type, cs.quality) && (ms.rr_dataURL = ts))),
      ps === "img" &&
        fs &&
        (fe$1 ||
          ((fe$1 = rs.createElement("canvas")), (je = fe$1.getContext("2d"))),
        (ns = (is = Et).crossOrigin),
        (is.crossOrigin = "anonymous"),
        (as = function () {
          try {
            (fe$1.width = is.naturalWidth),
              (fe$1.height = is.naturalHeight),
              je.drawImage(is, 0, 0),
              (ms.rr_dataURL = fe$1.toDataURL(cs.type, cs.quality));
          } catch (ys) {
            console.warn(
              "Cannot inline img src="
                .concat(is.currentSrc, "! Error: ")
                .concat(ys)
            );
          }
          ns ? (ms.crossOrigin = ns) : is.removeAttribute("crossorigin");
        }),
        is.complete && is.naturalWidth !== 0 ? as() : (is.onload = as)),
      (ps !== "audio" && ps !== "video") ||
        ((ms.rr_mediaState = Et.paused ? "paused" : "played"),
        (ms.rr_mediaCurrentTime = Et.currentTime)),
      hs ||
        (Et.scrollLeft && (ms.rr_scrollLeft = Et.scrollLeft),
        Et.scrollTop && (ms.rr_scrollTop = Et.scrollTop)),
      gs &&
        ((ds = (ss = Et.getBoundingClientRect()).width),
        (us = ss.height),
        (ms = {
          class: ms.class,
          rr_width: "".concat(ds, "px"),
          rr_height: "".concat(us, "px"),
        })),
      ps !== "iframe" ||
        ls(ms.src) ||
        (Et.contentDocument || (ms.rr_src = ms.src), delete ms.src),
      {
        type: Z$2.Element,
        tagName: ps,
        attributes: ms,
        childNodes: [],
        isSVG: tr(Et) || void 0,
        needBlock: gs,
        rootId: es,
      }
    );
  }
  function T$5(Et) {
    return Et === void 0 ? "" : Et.toLowerCase();
  }
  function dr(Et, es) {
    if (
      (es.comment && Et.type === Z$2.Comment) ||
      (Et.type === Z$2.Element &&
        ((es.script &&
          (Et.tagName === "script" ||
            (Et.tagName === "link" &&
              Et.attributes.rel === "preload" &&
              Et.attributes.as === "script") ||
            (Et.tagName === "link" &&
              Et.attributes.rel === "prefetch" &&
              typeof Et.attributes.href == "string" &&
              Et.attributes.href.endsWith(".js")))) ||
          (es.headFavicon &&
            ((Et.tagName === "link" && Et.attributes.rel === "shortcut icon") ||
              (Et.tagName === "meta" &&
                (T$5(Et.attributes.name).match(
                  /^msapplication-tile(image|color)$/
                ) ||
                  T$5(Et.attributes.name) === "application-name" ||
                  T$5(Et.attributes.rel) === "icon" ||
                  T$5(Et.attributes.rel) === "apple-touch-icon" ||
                  T$5(Et.attributes.rel) === "shortcut icon")))) ||
          (Et.tagName === "meta" &&
            ((es.headMetaDescKeywords &&
              T$5(Et.attributes.name).match(/^description|keywords$/)) ||
              (es.headMetaSocial &&
                (T$5(Et.attributes.property).match(/^(og|twitter|fb):/) ||
                  T$5(Et.attributes.name).match(/^(og|twitter):/) ||
                  T$5(Et.attributes.name) === "pinterest")) ||
              (es.headMetaRobots &&
                (T$5(Et.attributes.name) === "robots" ||
                  T$5(Et.attributes.name) === "googlebot" ||
                  T$5(Et.attributes.name) === "bingbot")) ||
              (es.headMetaHttpEquiv &&
                Et.attributes["http-equiv"] !== void 0) ||
              (es.headMetaAuthorship &&
                (T$5(Et.attributes.name) === "author" ||
                  T$5(Et.attributes.name) === "generator" ||
                  T$5(Et.attributes.name) === "framework" ||
                  T$5(Et.attributes.name) === "publisher" ||
                  T$5(Et.attributes.name) === "progid" ||
                  T$5(Et.attributes.property).match(/^article:/) ||
                  T$5(Et.attributes.property).match(/^product:/))) ||
              (es.headMetaVerification &&
                (T$5(Et.attributes.name) === "google-site-verification" ||
                  T$5(Et.attributes.name) === "yandex-verification" ||
                  T$5(Et.attributes.name) === "csrf-token" ||
                  T$5(Et.attributes.name) === "p:domain_verify" ||
                  T$5(Et.attributes.name) === "verify-v1" ||
                  T$5(Et.attributes.name) === "verification" ||
                  T$5(Et.attributes.name) === "shopify-checkout-api-token"))))))
    )
      return 1;
  }
  function ge(Et, vs) {
    var ts = vs.doc,
      is = vs.mirror,
      ns = vs.blockClass,
      rs = vs.blockSelector,
      ss = vs.maskTextClass,
      os = vs.maskTextSelector,
      ds = vs.skipChild,
      ds = ds !== void 0 && ds,
      ws = vs.inlineStylesheet,
      as = ws === void 0 || ws,
      ws = vs.maskInputOptions,
      cs = ws === void 0 ? {} : ws,
      fs = vs.maskTextFn,
      us = vs.maskInputFn,
      ls = vs.slimDOMOptions,
      ws = vs.dataURLOptions,
      hs = ws === void 0 ? {} : ws,
      ws = vs.inlineImages,
      gs = ws !== void 0 && ws,
      ws = vs.recordCanvas,
      ps = ws !== void 0 && ws,
      ms = vs.onSerialize,
      Es = vs.onIframeLoad,
      ws = vs.iframeLoadTimeout,
      $s = ws === void 0 ? 5e3 : ws,
      Cs = vs.onStylesheetLoad,
      ws = vs.stylesheetLoadTimeout,
      ys = ws === void 0 ? 5e3 : ws,
      ws = vs.keepIframeSrcFn,
      bs =
        ws === void 0
          ? function () {
              return !1;
            }
          : ws,
      ws = vs.newlyAddedElement,
      vs = vs.preserveWhiteSpace,
      Ss = vs === void 0 || vs,
      vs = ir(Et, {
        doc: ts,
        mirror: is,
        blockClass: ns,
        blockSelector: rs,
        maskTextClass: ss,
        maskTextSelector: os,
        inlineStylesheet: as,
        maskInputOptions: cs,
        maskTextFn: fs,
        maskInputFn: us,
        dataURLOptions: hs,
        inlineImages: gs,
        recordCanvas: ps,
        keepIframeSrcFn: bs,
        newlyAddedElement: ws !== void 0 && ws,
      });
    if (!vs) return console.warn(Et, "not serialized"), null;
    var ws = is.hasNode(Et)
        ? is.getId(Et)
        : dr(vs, ls) ||
          (!Ss &&
            vs.type === Z$2.Text &&
            !vs.isStyle &&
            !vs.textContent.replace(/^\s+|\s+$/gm, "").length)
        ? Me
        : Xe(),
      Ts = Object.assign(vs, { id: ws });
    if ((is.add(Et, Ts), ws === Me)) return null;
    if (
      (ms && ms(Et),
      (vs = !ds),
      Ts.type === Z$2.Element &&
        ((vs = vs && !Ts.needBlock),
        delete Ts.needBlock,
        (ws = Et.shadowRoot)) &&
        ke(ws) &&
        (Ts.isShadowHost = !0),
      (Ts.type === Z$2.Document || Ts.type === Z$2.Element) && vs)
    ) {
      ls.headWhitespace &&
        Ts.type === Z$2.Element &&
        Ts.tagName === "head" &&
        (Ss = !1);
      for (
        var Ds,
          Ns = {
            doc: ts,
            mirror: is,
            blockClass: ns,
            blockSelector: rs,
            maskTextClass: ss,
            maskTextSelector: os,
            skipChild: ds,
            inlineStylesheet: as,
            maskInputOptions: cs,
            maskTextFn: fs,
            maskInputFn: us,
            slimDOMOptions: ls,
            dataURLOptions: hs,
            inlineImages: gs,
            recordCanvas: ps,
            preserveWhiteSpace: Ss,
            onSerialize: ms,
            onIframeLoad: Es,
            iframeLoadTimeout: $s,
            onStylesheetLoad: Cs,
            stylesheetLoadTimeout: ys,
            keepIframeSrcFn: bs,
          },
          Rs = 0,
          Bs = Array.from(Et.childNodes);
        Rs < Bs.length;
        Rs++
      )
        (Ds = ge(Bs[Rs], Ns)) && Ts.childNodes.push(Ds);
      if (_t(Et) && Et.shadowRoot)
        for (
          var Ms = 0, Ps = Array.from(Et.shadowRoot.childNodes);
          Ms < Ps.length;
          Ms++
        )
          (Ds = ge(Ps[Ms], Ns)) &&
            (ke(Et.shadowRoot) && (Ds.isShadow = !0), Ts.childNodes.push(Ds));
    }
    return (
      Et.parentNode &&
        we(Et.parentNode) &&
        ke(Et.parentNode) &&
        (Ts.isShadow = !0),
      Ts.type === Z$2.Element &&
        Ts.tagName === "iframe" &&
        nr(
          Et,
          function () {
            var Gs = Et.contentDocument;
            Gs &&
              Es &&
              (Gs = ge(Gs, {
                doc: Gs,
                mirror: is,
                blockClass: ns,
                blockSelector: rs,
                maskTextClass: ss,
                maskTextSelector: os,
                skipChild: !1,
                inlineStylesheet: as,
                maskInputOptions: cs,
                maskTextFn: fs,
                maskInputFn: us,
                slimDOMOptions: ls,
                dataURLOptions: hs,
                inlineImages: gs,
                recordCanvas: ps,
                preserveWhiteSpace: Ss,
                onSerialize: ms,
                onIframeLoad: Es,
                iframeLoadTimeout: $s,
                onStylesheetLoad: Cs,
                stylesheetLoadTimeout: ys,
                keepIframeSrcFn: bs,
              })) &&
              Es(Et, Gs);
          },
          $s
        ),
      Ts.type === Z$2.Element &&
        Ts.tagName === "link" &&
        Ts.attributes.rel === "stylesheet" &&
        or(
          Et,
          function () {
            var Gs;
            Cs &&
              (Gs = ge(Et, {
                doc: ts,
                mirror: is,
                blockClass: ns,
                blockSelector: rs,
                maskTextClass: ss,
                maskTextSelector: os,
                skipChild: !1,
                inlineStylesheet: as,
                maskInputOptions: cs,
                maskTextFn: fs,
                maskInputFn: us,
                slimDOMOptions: ls,
                dataURLOptions: hs,
                inlineImages: gs,
                recordCanvas: ps,
                preserveWhiteSpace: Ss,
                onSerialize: ms,
                onIframeLoad: Es,
                iframeLoadTimeout: $s,
                onStylesheetLoad: Cs,
                stylesheetLoadTimeout: ys,
                keepIframeSrcFn: bs,
              })) &&
              Cs(Et, Gs);
          },
          ys
        ),
      Ts
    );
  }
  function cr(Et, ys) {
    var ys = ys || {},
      ts = ys.mirror,
      ts = ts === void 0 ? new Pe() : ts,
      is = ys.blockClass,
      ns = ys.blockSelector,
      rs = ys.maskTextClass,
      ss = ys.maskTextSelector,
      os = ys.inlineStylesheet,
      ds = ys.inlineImages,
      as = ys.recordCanvas,
      cs = ys.maskAllInputs,
      cs = cs !== void 0 && cs,
      fs = ys.maskTextFn,
      us = ys.maskInputFn,
      ls = ys.slimDOM,
      ls = ls !== void 0 && ls,
      hs = ys.dataURLOptions,
      gs = ys.preserveWhiteSpace,
      ps = ys.onSerialize,
      ms = ys.onIframeLoad,
      Es = ys.iframeLoadTimeout,
      $s = ys.onStylesheetLoad,
      Cs = ys.stylesheetLoadTimeout,
      ys = ys.keepIframeSrcFn;
    return ge(Et, {
      doc: Et,
      mirror: ts,
      blockClass: is === void 0 ? "rr-block" : is,
      blockSelector: ns === void 0 ? null : ns,
      maskTextClass: rs === void 0 ? "rr-mask" : rs,
      maskTextSelector: ss === void 0 ? null : ss,
      skipChild: !1,
      inlineStylesheet: os === void 0 || os,
      maskInputOptions:
        cs === !0
          ? {
              color: !0,
              date: !0,
              "datetime-local": !0,
              email: !0,
              month: !0,
              number: !0,
              range: !0,
              search: !0,
              tel: !0,
              text: !0,
              time: !0,
              url: !0,
              week: !0,
              textarea: !0,
              select: !0,
              password: !0,
            }
          : cs === !1
          ? { password: !0 }
          : cs,
      maskTextFn: fs,
      maskInputFn: us,
      slimDOMOptions:
        ls === !0 || ls === "all"
          ? {
              script: !0,
              comment: !0,
              headFavicon: !0,
              headWhitespace: !0,
              headMetaDescKeywords: ls === "all",
              headMetaSocial: !0,
              headMetaRobots: !0,
              headMetaHttpEquiv: !0,
              headMetaAuthorship: !0,
              headMetaVerification: !0,
            }
          : ls === !1
          ? {}
          : ls,
      dataURLOptions: hs,
      inlineImages: ds !== void 0 && ds,
      recordCanvas: as !== void 0 && as,
      preserveWhiteSpace: gs,
      onSerialize: ps,
      onIframeLoad: ms,
      iframeLoadTimeout: Es,
      onStylesheetLoad: $s,
      stylesheetLoadTimeout: Cs,
      keepIframeSrcFn:
        ys === void 0
          ? function () {
              return !1;
            }
          : ys,
      newlyAddedElement: !1,
    });
  }
  function P$4(Et, es, ts = document) {
    const is = { capture: !0, passive: !0 };
    return (
      ts.addEventListener(Et, es, is), () => ts.removeEventListener(Et, es, is)
    );
  }
  const me = `Please stop import mirror directly. Instead of that,\r
now you can use replayer.getMirror() to access the mirror instance of a replayer,\r
or you can use record.mirror to access the mirror instance during recording.`;
  let et = {
    map: {},
    getId: () => (console.error(me), -1),
    getNode: () => (console.error(me), null),
    removeNodeFromMap() {
      console.error(me);
    },
    has: () => (console.error(me), !1),
    reset() {
      console.error(me);
    },
  };
  function Re$1(Et, es, ts = {}) {
    let is = null,
      ns = 0;
    return function (...rs) {
      var ss = Date.now();
      ns || ts.leading !== !1 || (ns = ss);
      const os = es - (ss - ns),
        ds = this;
      os <= 0 || es < os
        ? (is && (clearTimeout(is), (is = null)), (ns = ss), Et.apply(ds, rs))
        : is ||
          ts.trailing === !1 ||
          (is = setTimeout(() => {
            (ns = ts.leading === !1 ? 0 : Date.now()),
              (is = null),
              Et.apply(ds, rs);
          }, os));
    };
  }
  function Fe(Et, es, ts, is, ns = window) {
    const rs = ns.Object.getOwnPropertyDescriptor(Et, es);
    return (
      ns.Object.defineProperty(
        Et,
        es,
        is
          ? ts
          : {
              set(ss) {
                setTimeout(() => {
                  ts.set.call(this, ss);
                }, 0),
                  rs && rs.set && rs.set.call(this, ss);
              },
            }
      ),
      () => Fe(Et, es, rs || {}, !0)
    );
  }
  function Ie(Et, es, ts) {
    try {
      if (!(es in Et)) return () => {};
      const is = Et[es],
        ns = ts(is);
      return (
        typeof ns == "function" &&
          ((ns.prototype = ns.prototype || {}),
          Object.defineProperties(ns, {
            __rrweb_original__: { enumerable: !1, value: is },
          })),
        (Et[es] = ns),
        () => {
          Et[es] = is;
        }
      );
    } catch (is) {
      return () => {};
    }
  }
  function tt() {
    return (
      window.innerHeight ||
      (document.documentElement && document.documentElement.clientHeight) ||
      (document.body && document.body.clientHeight)
    );
  }
  function rt() {
    return (
      window.innerWidth ||
      (document.documentElement && document.documentElement.clientWidth) ||
      (document.body && document.body.clientWidth)
    );
  }
  function Q$2(Et, es, ts, is) {
    if (Et) {
      var ns = Et.nodeType === Et.ELEMENT_NODE ? Et : Et.parentElement;
      if (ns) {
        if (typeof es == "string") {
          if (
            ns.classList.contains(es) ||
            (is && ns.closest("." + es) !== null)
          )
            return 1;
        } else if (Oe$1(ns, es, is)) return 1;
        return ts && (Et.matches(ts) || (is && ns.closest(ts) !== null));
      }
    }
  }
  function ur(Et, es) {
    return es.getId(Et) !== -1;
  }
  function Ve(Et, es) {
    return es.getId(Et) === Me;
  }
  function nt(Et, es) {
    var ts;
    return (
      !we(Et) &&
      ((ts = es.getId(Et)),
      !es.has(ts) ||
        ((!Et.parentNode || Et.parentNode.nodeType !== Et.DOCUMENT_NODE) &&
          (!Et.parentNode || nt(Et.parentNode, es))))
    );
  }
  function ot(Et) {
    return Et.changedTouches;
  }
  function hr(Et = window) {
    "NodeList" in Et &&
      !Et.NodeList.prototype.forEach &&
      (Et.NodeList.prototype.forEach = Array.prototype.forEach),
      "DOMTokenList" in Et &&
        !Et.DOMTokenList.prototype.forEach &&
        (Et.DOMTokenList.prototype.forEach = Array.prototype.forEach),
      Node.prototype.contains ||
        (Node.prototype.contains = (...es) => {
          let ts = es[0];
          if (!(0 in es)) throw new TypeError("1 argument is required");
          do if (this === ts) return !0;
          while ((ts = ts && ts.parentNode));
          return !1;
        });
  }
  function it(Et, es) {
    return Et.nodeName === "IFRAME" && es.getMeta(Et);
  }
  function at(Et, es) {
    return (
      Et.nodeName === "LINK" &&
      Et.nodeType === Et.ELEMENT_NODE &&
      Et.getAttribute &&
      Et.getAttribute("rel") === "stylesheet" &&
      es.getMeta(Et)
    );
  }
  function st(Et) {
    return Et != null && Et.shadowRoot;
  }
  typeof window != "undefined" &&
    window.Proxy &&
    window.Reflect &&
    (et = new Proxy(et, {
      get: (Et, es, ts) => (
        es === "map" && console.error(me), Reflect.get(Et, es, ts)
      ),
    }));
  class fr {
    constructor() {
      (this.id = 1),
        (this.styleIDMap = new WeakMap()),
        (this.idStyleMap = new s$5());
    }
    getId(es) {
      return (es = this.styleIDMap.get(es)) != null ? es : -1;
    }
    has(es) {
      return this.styleIDMap.has(es);
    }
    add(es, ts) {
      return this.has(es)
        ? this.getId(es)
        : ((ts = ts === void 0 ? this.id++ : ts),
          this.styleIDMap.set(es, ts),
          this.idStyleMap.set(ts, es),
          ts);
    }
    getStyle(es) {
      return this.idStyleMap.get(es) || null;
    }
    reset() {
      (this.styleIDMap = new WeakMap()),
        (this.idStyleMap = new s$5()),
        (this.id = 1);
    }
    generateId() {
      return this.id++;
    }
  }
  var k$2 = ((Et) => (
      (Et[(Et.DomContentLoaded = 0)] = "DomContentLoaded"),
      (Et[(Et.Load = 1)] = "Load"),
      (Et[(Et.FullSnapshot = 2)] = "FullSnapshot"),
      (Et[(Et.IncrementalSnapshot = 3)] = "IncrementalSnapshot"),
      (Et[(Et.Meta = 4)] = "Meta"),
      (Et[(Et.Custom = 5)] = "Custom"),
      (Et[(Et.Plugin = 6)] = "Plugin"),
      Et
    ))(k$2 || {}),
    w$5 = ((Et) => (
      (Et[(Et.Mutation = 0)] = "Mutation"),
      (Et[(Et.MouseMove = 1)] = "MouseMove"),
      (Et[(Et.MouseInteraction = 2)] = "MouseInteraction"),
      (Et[(Et.Scroll = 3)] = "Scroll"),
      (Et[(Et.ViewportResize = 4)] = "ViewportResize"),
      (Et[(Et.Input = 5)] = "Input"),
      (Et[(Et.TouchMove = 6)] = "TouchMove"),
      (Et[(Et.MediaInteraction = 7)] = "MediaInteraction"),
      (Et[(Et.StyleSheetRule = 8)] = "StyleSheetRule"),
      (Et[(Et.CanvasMutation = 9)] = "CanvasMutation"),
      (Et[(Et.Font = 10)] = "Font"),
      (Et[(Et.Log = 11)] = "Log"),
      (Et[(Et.Drag = 12)] = "Drag"),
      (Et[(Et.StyleDeclaration = 13)] = "StyleDeclaration"),
      (Et[(Et.Selection = 14)] = "Selection"),
      (Et[(Et.AdoptedStyleSheet = 15)] = "AdoptedStyleSheet"),
      Et
    ))(w$5 || {}),
    Ke = ((Et) => (
      (Et[(Et.MouseUp = 0)] = "MouseUp"),
      (Et[(Et.MouseDown = 1)] = "MouseDown"),
      (Et[(Et.Click = 2)] = "Click"),
      (Et[(Et.ContextMenu = 3)] = "ContextMenu"),
      (Et[(Et.DblClick = 4)] = "DblClick"),
      (Et[(Et.Focus = 5)] = "Focus"),
      (Et[(Et.Blur = 6)] = "Blur"),
      (Et[(Et.TouchStart = 7)] = "TouchStart"),
      (Et[(Et.TouchMove_Departed = 8)] = "TouchMove_Departed"),
      (Et[(Et.TouchEnd = 9)] = "TouchEnd"),
      (Et[(Et.TouchCancel = 10)] = "TouchCancel"),
      Et
    ))(Ke || {}),
    Ce = ((Et) => (
      (Et[(Et["2D"] = 0)] = "2D"),
      (Et[(Et.WebGL = 1)] = "WebGL"),
      (Et[(Et.WebGL2 = 2)] = "WebGL2"),
      Et
    ))(Ce || {});
  function lt(Et) {
    return "__ln" in Et;
  }
  class pr {
    constructor() {
      (this.length = 0), (this.head = null);
    }
    get(es) {
      if (es >= this.length) throw new Error("Position outside of list range");
      let ts = this.head;
      for (let is = 0; is < es; is++)
        ts = (ts == null ? void 0 : ts.next) || null;
      return ts;
    }
    addNode(es) {
      var ts,
        is = { value: es, previous: null, next: null };
      (es.__ln = is),
        es.previousSibling && lt(es.previousSibling)
          ? ((ts = es.previousSibling.__ln.next),
            (is.next = ts),
            (is.previous = es.previousSibling.__ln),
            (es.previousSibling.__ln.next = is),
            ts && (ts.previous = is))
          : es.nextSibling && lt(es.nextSibling) && es.nextSibling.__ln.previous
          ? ((ts = es.nextSibling.__ln.previous),
            (is.previous = ts),
            (is.next = es.nextSibling.__ln),
            (es.nextSibling.__ln.previous = is),
            ts && (ts.next = is))
          : (this.head && (this.head.previous = is),
            (is.next = this.head),
            (this.head = is)),
        this.length++;
    }
    removeNode(es) {
      var ts = es.__ln;
      this.head &&
        (ts.previous
          ? ((ts.previous.next = ts.next),
            ts.next && (ts.next.previous = ts.previous))
          : ((this.head = ts.next), this.head && (this.head.previous = null)),
        es.__ln && delete es.__ln,
        this.length--);
    }
  }
  const dt = (Et, es) => Et + "@" + es;
  class gr {
    constructor() {
      (this.frozen = !1),
        (this.locked = !1),
        (this.texts = []),
        (this.attributes = []),
        (this.removes = []),
        (this.mapRemoves = []),
        (this.movedMap = {}),
        (this.addedSet = new Set()),
        (this.movedSet = new Set()),
        (this.droppedSet = new Set()),
        (this.currentProcessId = ""),
        (this.processMutations = (es) => {
          es.forEach(this.processMutation), this.emit();
        }),
        (this.emit = () => {
          if (!this.frozen && !this.locked) {
            const rs = [];
            let ss = new pr();
            const os = (ls) => {
                let hs = ls,
                  gs = Me;
                for (; gs === Me; )
                  (hs = hs && hs.nextSibling),
                    (gs = hs && this.mirror.getId(hs));
                return gs;
              },
              ds = (ls) => {
                var hs;
                let gs = null,
                  ps = (gs =
                    (($s =
                      ($s = ls.getRootNode) == null ? void 0 : $s.call(ls)) ==
                    null
                      ? void 0
                      : $s.nodeType) === Node.DOCUMENT_FRAGMENT_NODE &&
                    ls.getRootNode().host
                      ? ls.getRootNode().host
                      : gs);
                for (
                  ;
                  ((hs =
                    (hs = ps == null ? void 0 : ps.getRootNode) == null
                      ? void 0
                      : hs.call(ps)) == null
                    ? void 0
                    : hs.nodeType) === Node.DOCUMENT_FRAGMENT_NODE &&
                  ps.getRootNode().host;

                )
                  ps = ps.getRootNode().host;
                var ms,
                  Es,
                  $s = !(
                    this.doc.contains(ls) ||
                    (ps && this.doc.contains(ps))
                  );
                if (ls.parentNode && !$s)
                  return (
                    ($s = we(ls.parentNode)
                      ? this.mirror.getId(gs)
                      : this.mirror.getId(ls.parentNode)),
                    (ms = os(ls)),
                    $s === -1 || ms === -1
                      ? ss.addNode(ls)
                      : void (
                          (Es = ge(ls, {
                            doc: this.doc,
                            mirror: this.mirror,
                            blockClass: this.blockClass,
                            blockSelector: this.blockSelector,
                            maskTextClass: this.maskTextClass,
                            maskTextSelector: this.maskTextSelector,
                            skipChild: !0,
                            newlyAddedElement: !0,
                            inlineStylesheet: this.inlineStylesheet,
                            maskInputOptions: this.maskInputOptions,
                            maskTextFn: this.maskTextFn,
                            maskInputFn: this.maskInputFn,
                            slimDOMOptions: this.slimDOMOptions,
                            dataURLOptions: this.dataURLOptions,
                            recordCanvas: this.recordCanvas,
                            inlineImages: this.inlineImages,
                            onSerialize: (Cs) => {
                              it(Cs, this.mirror) &&
                                this.iframeManager.addIframe(Cs),
                                at(Cs, this.mirror) &&
                                  this.stylesheetManager.trackLinkElement(Cs),
                                st(ls) &&
                                  this.shadowDomManager.addShadowRoot(
                                    ls.shadowRoot,
                                    this.doc
                                  );
                            },
                            onIframeLoad: (Cs, ys) => {
                              this.iframeManager.attachIframe(Cs, ys),
                                this.shadowDomManager.observeAttachShadow(Cs);
                            },
                            onStylesheetLoad: (Cs, ys) => {
                              this.stylesheetManager.attachLinkElement(Cs, ys);
                            },
                          })) && rs.push({ parentId: $s, nextId: ms, node: Es })
                        )
                  );
              };
            for (; this.mapRemoves.length; )
              this.mirror.removeNodeFromMap(this.mapRemoves.shift());
            for (const ls of Array.from(this.movedSet.values()))
              (ct(this.removes, ls, this.mirror) &&
                !this.movedSet.has(ls.parentNode)) ||
                ds(ls);
            for (const ls of Array.from(this.addedSet.values()))
              (!ht(this.droppedSet, ls) &&
                !ct(this.removes, ls, this.mirror)) ||
              ht(this.movedSet, ls)
                ? ds(ls)
                : this.droppedSet.add(ls);
            const as = (ls, hs, gs, ps) => ({
                texts: ls
                  .map((ms) => ({
                    id: this.mirror.getId(ms.node),
                    value: ms.value,
                  }))
                  .filter((ms) => this.mirror.has(ms.id)),
                attributes: hs
                  .map((ms) => ({
                    id: this.mirror.getId(ms.node),
                    attributes: ms.attributes,
                  }))
                  .filter((ms) => this.mirror.has(ms.id)),
                removes: gs,
                adds: ps,
              }),
              cs = (ls) =>
                !!(
                  ls.texts.length ||
                  ls.attributes.length ||
                  ls.removes.length ||
                  ls.adds.length
                );
            let fs = new Map(),
              us = null;
            var es,
              ts,
              is,
              ns = (ls, hs, gs, ps, ms, Es) => {
                let $s = null,
                  Cs = this.currentProcessId,
                  ys = this;
                us !== null && (cancelAnimationFrame(us), (us = null)),
                  fs.clear();
                const bs = (ws) =>
                    ws &&
                    ws.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&
                    ws.host,
                  Ss = (ws) => (
                    (ws = ws.parentNode),
                    bs(ws)
                      ? "shadow:" + this.mirror.getId(ws.host)
                      : "normal:" + this.mirror.getId(ws)
                  );
                if (fs.size === 0) {
                  let ws = ls.head;
                  for (; ws; ) {
                    const Ts = Ss(ws.value);
                    fs.has(Ts) || fs.set(Ts, new Set()),
                      fs.get(Ts).add(ws.value),
                      (ws = ws.next);
                  }
                }
                const vs = () => {
                  if (Cs !== ys.currentProcessId) {
                    const ws = as(gs, ps, ms, Es);
                    cs(ws) && this.mutationCb(ws),
                      cancelAnimationFrame(us),
                      (us = null),
                      (Es = ms = ps = gs = null);
                  } else {
                    let ws = window.performance.now(),
                      Ts = 0,
                      Ds = 50,
                      Ns = !1;
                    for (; 0 < ls.length; ) {
                      if (Cs !== ys.currentProcessId) {
                        Ns = !0;
                        break;
                      }
                      if (6 - (window.performance.now() - ws) < 2 || Ts >= Ds)
                        return (
                          (Ds = Math.max(1, Math.floor(0.8 * Ds))),
                          void (
                            Cs === ys.currentProcessId &&
                            (us = requestAnimationFrame(vs))
                          )
                        );
                      const Rs = ((Ms) => {
                        var Ps, Gs;
                        if ($s) {
                          const Us = $s,
                            Os = this.mirror.getId(Us.value.parentNode),
                            Ls = os(Us.value);
                          if (Os !== -1 && Ls !== -1) return Us;
                        }
                        for (const [Us, Os] of fs) {
                          var [Ks, Hs] = Us.split(":");
                          if (
                            (Ks === "shadow"
                              ? this.mirror.has(Number(Hs))
                              : document.contains(
                                  (Gs =
                                    (Ps = Os.values().next().value) == null
                                      ? void 0
                                      : Ps.value) == null
                                    ? void 0
                                    : Gs.parentNode
                                )) &&
                            0 < Os.size
                          ) {
                            const Ls = Os.values().next().value;
                            return (
                              Os.delete(Ls), Os.size === 0 && fs.delete(Us), Ls
                            );
                          }
                        }
                        for (
                          let Us = Ms.length - 1;
                          0 <= Us && Cs === ys.currentProcessId;
                          Us--
                        ) {
                          const Os = Ms.get(Us);
                          if (Os) {
                            var Fs = Os.value.parentNode;
                            if (
                              (bs(Fs)
                                ? this.mirror.getId(Fs.host)
                                : this.mirror.getId(Fs)) !== -1 &&
                              os(Os.value) !== -1
                            )
                              return Os;
                            if (
                              (Fs == null ? void 0 : Fs.nodeType) ===
                              Node.DOCUMENT_FRAGMENT_NODE
                            ) {
                              const Ls = Fs.host;
                              if (this.mirror.getId(Ls) !== -1) return Os;
                            }
                          }
                        }
                        return null;
                      })(ls);
                      if (!Rs) {
                        for (; ls.head; ) ls.removeNode(ls.head.value);
                        Ns = !0;
                        break;
                      }
                      ls.removeNode(Rs.value), hs(Rs.value), ($s = Rs.previous);
                      const Bs = Ss(Rs.value);
                      fs.has(Bs) && fs.get(Bs).delete(Rs),
                        Ts++,
                        (Ds = Math.min(100, Math.floor(1.2 * Ds)));
                    }
                    if (ls.length === 0 || Ns) {
                      const Rs = as(gs, ps, ms, Es);
                      cs(Rs) && this.mutationCb(Rs),
                        cancelAnimationFrame(us),
                        (Es = ms = ps = gs = null),
                        fs.clear(),
                        ($s = null),
                        (us = null);
                    }
                  }
                };
                us = requestAnimationFrame(vs);
              };
            if (0 < ss.length)
              if (
                ((this.currentProcessId = "addList_" + Date.now()),
                4e3 < ss.length)
              )
                (es = this.texts),
                  (ts = this.attributes),
                  (is = this.removes),
                  ns(ss, ds, es, ts, is, rs);
              else {
                let ls = null;
                for (; ss.length; ) {
                  let hs = null;
                  if (ls) {
                    const gs = this.mirror.getId(ls.value.parentNode),
                      ps = os(ls.value);
                    gs !== -1 && ps !== -1 && (hs = ls);
                  }
                  if (!hs)
                    for (let gs = ss.length - 1; 0 <= gs; gs--) {
                      const ps = ss.get(gs);
                      if (ps) {
                        const ms = this.mirror.getId(ps.value.parentNode);
                        if (os(ps.value) !== -1) {
                          if (ms !== -1) {
                            hs = ps;
                            break;
                          }
                          {
                            const Es = ps.value;
                            if (
                              Es.parentNode &&
                              Es.parentNode.nodeType ===
                                Node.DOCUMENT_FRAGMENT_NODE
                            ) {
                              const $s = Es.parentNode.host;
                              if (this.mirror.getId($s) !== -1) {
                                hs = ps;
                                break;
                              }
                            }
                          }
                        }
                      }
                    }
                  if (!hs) {
                    for (; ss.head; ) ss.removeNode(ss.head.value);
                    break;
                  }
                  (ls = hs.previous), ss.removeNode(hs.value), ds(hs.value);
                }
              }
            (ns = as(this.texts, this.attributes, this.removes, rs)),
              cs(ns) && this.mutationCb(ns),
              (this.texts = []),
              (this.attributes = []),
              (this.removes = []),
              (this.addedSet = new Set()),
              (this.movedSet = new Set()),
              (this.droppedSet = new Set()),
              (this.movedMap = {});
          }
        }),
        (this.processMutation = (es) => {
          if (!Ve(es.target, this.mirror))
            switch (es.type) {
              case "characterData":
                var ts = es.target.textContent;
                Q$2(es.target, this.blockClass, this.blockSelector, !1) ||
                  ts === es.oldValue ||
                  this.texts.push({
                    value:
                      $e(
                        es.target,
                        this.maskTextClass,
                        this.maskTextSelector
                      ) && ts
                        ? this.maskTextFn
                          ? this.maskTextFn(ts)
                          : ts.replace(/[\S]/g, "*")
                        : ts,
                    node: es.target,
                  });
                break;
              case "attributes": {
                var is = es.target;
                let ds = es.target.getAttribute(es.attributeName);
                if (
                  (es.attributeName === "value" &&
                    (ds = Ue({
                      maskInputOptions: this.maskInputOptions,
                      tagName: es.target.tagName,
                      type: es.target.getAttribute("type"),
                      value: ds,
                      maskInputFn: this.maskInputFn,
                    })),
                  Q$2(es.target, this.blockClass, this.blockSelector, !1) ||
                    ds === es.oldValue)
                )
                  return;
                let as = this.attributes.find((cs) => cs.node === es.target);
                if (
                  is.tagName === "IFRAME" &&
                  es.attributeName === "src" &&
                  !this.keepIframeSrcFn(ds)
                ) {
                  if (is.contentDocument) return;
                  es.attributeName = "rr_src";
                }
                if (
                  (as ||
                    ((as = { node: es.target, attributes: {} }),
                    this.attributes.push(as)),
                  es.attributeName === "style")
                ) {
                  var ns = this.doc.createElement("span"),
                    rs =
                      (es.oldValue && ns.setAttribute("style", es.oldValue),
                      (as.attributes.style !== void 0 &&
                        as.attributes.style !== null) ||
                        (as.attributes.style = {}),
                      as.attributes.style);
                  for (const cs of Array.from(is.style)) {
                    var ss = is.style.getPropertyValue(cs),
                      os = is.style.getPropertyPriority(cs);
                    (ss === ns.style.getPropertyValue(cs) &&
                      os === ns.style.getPropertyPriority(cs)) ||
                      (rs[cs] = os === "" ? ss : [ss, os]);
                  }
                  for (const cs of Array.from(ns.style))
                    is.style.getPropertyValue(cs) === "" && (rs[cs] = !1);
                } else
                  as.attributes[es.attributeName] = qe(
                    this.doc,
                    is.tagName,
                    es.attributeName,
                    ds
                  );
                break;
              }
              case "childList":
                if (Q$2(es.target, this.blockClass, this.blockSelector, !0))
                  return;
                es.addedNodes.forEach((ds) => this.genAdds(ds, es.target)),
                  es.removedNodes.forEach((ds) => {
                    var as = this.mirror.getId(ds),
                      cs = we(es.target)
                        ? this.mirror.getId(es.target.host)
                        : this.mirror.getId(es.target);
                    Q$2(es.target, this.blockClass, this.blockSelector, !1) ||
                      Ve(ds, this.mirror) ||
                      !ur(ds, this.mirror) ||
                      (this.addedSet.has(ds)
                        ? (ze(this.addedSet, ds), this.droppedSet.add(ds))
                        : (this.addedSet.has(es.target) && as === -1) ||
                          nt(es.target, this.mirror) ||
                          (this.movedSet.has(ds) && this.movedMap[dt(as, cs)]
                            ? ze(this.movedSet, ds)
                            : this.removes.push({
                                parentId: cs,
                                id: as,
                                isShadow:
                                  !(!we(es.target) || !ke(es.target)) || void 0,
                              })),
                      this.mapRemoves.push(ds));
                  });
            }
        }),
        (this.genAdds = (es, ts) => {
          if (this.mirror.hasNode(es)) {
            if (Ve(es, this.mirror)) return;
            this.movedSet.add(es);
            let is = null;
            (is = ts && this.mirror.hasNode(ts) ? this.mirror.getId(ts) : is) &&
              is !== -1 &&
              (this.movedMap[dt(this.mirror.getId(es), is)] = !0);
          } else this.addedSet.add(es), this.droppedSet.delete(es);
          Q$2(es, this.blockClass, this.blockSelector, !1) ||
            es.childNodes.forEach((is) => this.genAdds(is));
        });
    }
    init(es) {
      [
        "mutationCb",
        "blockClass",
        "blockSelector",
        "maskTextClass",
        "maskTextSelector",
        "inlineStylesheet",
        "maskInputOptions",
        "maskTextFn",
        "maskInputFn",
        "keepIframeSrcFn",
        "recordCanvas",
        "inlineImages",
        "slimDOMOptions",
        "dataURLOptions",
        "doc",
        "mirror",
        "iframeManager",
        "stylesheetManager",
        "shadowDomManager",
        "canvasManager",
      ].forEach((ts) => {
        this[ts] = es[ts];
      });
    }
    freeze() {
      (this.frozen = !0), this.canvasManager.freeze();
    }
    unfreeze() {
      (this.frozen = !1), this.canvasManager.unfreeze(), this.emit();
    }
    isFrozen() {
      return this.frozen;
    }
    lock() {
      (this.locked = !0), this.canvasManager.lock();
    }
    unlock() {
      (this.locked = !1), this.canvasManager.unlock(), this.emit();
    }
    reset() {
      this.shadowDomManager.reset(), this.canvasManager.reset();
    }
  }
  function ze(Et, es) {
    Et.delete(es), es.childNodes.forEach((ts) => ze(Et, ts));
  }
  function ct(Et, es, ts) {
    return Et.length !== 0 && ut(Et, es, ts);
  }
  function ut(Et, es, ts) {
    if (((es = es.parentNode), !es)) return !1;
    const is = ts.getId(es);
    return !!Et.some((ns) => ns.id === is) || ut(Et, es, ts);
  }
  function ht(Et, es) {
    return Et.size !== 0 && ft(Et, es);
  }
  function ft(Et, es) {
    return (es = es.parentNode), !!es && (!!Et.has(es) || ft(Et, es));
  }
  const ue$2 = [],
    pt = typeof CSSGroupingRule != "undefined",
    gt = typeof CSSMediaRule != "undefined",
    mt = typeof CSSSupportsRule != "undefined",
    It = typeof CSSConditionRule != "undefined";
  function Ne$1(Et) {
    try {
      if ("composedPath" in Et) {
        var es = Et.composedPath();
        if (es.length) return es[0];
      } else if ("path" in Et && Et.path.length) return Et.path[0];
      return Et.target;
    } catch (ts) {
      return Et.target;
    }
  }
  function Ct(rs, es) {
    var ts = new gr();
    ue$2.push(ts), ts.init(rs);
    let is = window.MutationObserver || window.__rrMutationObserver;
    var ns =
        (ns =
          (rs = window == null ? void 0 : window.Zone) == null
            ? void 0
            : rs.__symbol__) == null
          ? void 0
          : ns.call(rs, "MutationObserver"),
      rs = new (is = ns && window[ns] ? window[ns] : is)(
        ts.processMutations.bind(ts)
      );
    return (
      rs.observe(es, {
        attributes: !0,
        attributeOldValue: !0,
        characterData: !0,
        characterDataOldValue: !0,
        childList: !0,
        subtree: !0,
      }),
      rs
    );
  }
  function mr({ mousemoveCb: Et, sampling: rs, doc: ts, mirror: is }) {
    if (rs.mousemove === !1) return () => {};
    var ns = typeof rs.mousemove == "number" ? rs.mousemove : 50,
      rs = typeof rs.mousemoveCallback == "number" ? rs.mousemoveCallback : 500;
    let ss,
      os = [];
    const ds = Re$1((fs) => {
        const us = Date.now() - ss;
        Et(
          os.map((ls) => ((ls.timeOffset -= us), ls)),
          fs
        ),
          (os = []),
          (ss = null);
      }, rs),
      as = Re$1(
        (fs) => {
          var us = Ne$1(fs),
            { clientX: ls, clientY: hs } = ot(fs) ? fs.changedTouches[0] : fs;
          (ss = ss || Date.now()),
            os.push({
              x: ls,
              y: hs,
              id: is.getId(us),
              timeOffset: Date.now() - ss,
            }),
            ds(
              typeof DragEvent != "undefined" && fs instanceof DragEvent
                ? w$5.Drag
                : fs instanceof MouseEvent
                ? w$5.MouseMove
                : w$5.TouchMove
            );
        },
        ns,
        { trailing: !1 }
      ),
      cs = [
        P$4("mousemove", as, ts),
        P$4("touchmove", as, ts),
        P$4("drag", as, ts),
      ];
    return () => {
      cs.forEach((fs) => fs());
    };
  }
  function Ir({
    mouseInteractionCb: Et,
    doc: es,
    mirror: ts,
    blockClass: is,
    blockSelector: ns,
    sampling: rs,
  }) {
    if (rs.mouseInteraction === !1) return () => {};
    const ss =
        rs.mouseInteraction === !0 || rs.mouseInteraction === void 0
          ? {}
          : rs.mouseInteraction,
      os = [];
    return (
      Object.keys(Ke)
        .filter(
          (ds) =>
            Number.isNaN(Number(ds)) &&
            !ds.endsWith("_Departed") &&
            ss[ds] !== !1
        )
        .forEach((fs) => {
          var as,
            cs = fs.toLowerCase(),
            fs =
              ((as = fs),
              (us) => {
                var ls,
                  hs = Ne$1(us);
                Q$2(hs, is, ns, !0) ||
                  ((us = ot(us) ? us.changedTouches[0] : us) &&
                    ((hs = ts.getId(hs)),
                    ({ clientX: us, clientY: ls } = us),
                    Et({ type: Ke[as], id: hs, x: us, y: ls })));
              });
          os.push(P$4(cs, fs, es));
        }),
      () => {
        os.forEach((ds) => ds());
      }
    );
  }
  function yt({
    scrollCb: Et,
    doc: es,
    mirror: ts,
    blockClass: is,
    blockSelector: ns,
    sampling: rs,
  }) {
    return P$4(
      "scroll",
      Re$1((ss) => {
        if (((ss = Ne$1(ss)), ss && !Q$2(ss, is, ns, !0))) {
          var os = ts.getId(ss);
          if (ss === es) {
            const ds = es.scrollingElement || es.documentElement;
            Et({ id: os, x: ds.scrollLeft, y: ds.scrollTop });
          } else Et({ id: os, x: ss.scrollLeft, y: ss.scrollTop });
        }
      }, rs.scroll || 100),
      es
    );
  }
  function Cr({ viewportResizeCb: Et }) {
    let es = -1,
      ts = -1;
    return P$4(
      "resize",
      Re$1(() => {
        var is = tt(),
          ns = rt();
        (es === is && ts === ns) ||
          (Et({ width: Number(ns), height: Number(is) }), (es = is), (ts = ns));
      }, 200),
      window
    );
  }
  function St(Et, es) {
    return (Et = Object.assign({}, Et)), es || delete Et.userTriggered, Et;
  }
  const yr = ["INPUT", "TEXTAREA", "SELECT"],
    vt = new WeakMap();
  function Sr({
    inputCb: Et,
    doc: es,
    mirror: ts,
    blockClass: is,
    blockSelector: ns,
    ignoreClass: rs,
    maskInputOptions: ss,
    maskInputFn: os,
    sampling: ds,
    userTriggeredOnInput: as,
  }) {
    function cs(gs) {
      let ps = Ne$1(gs);
      if (
        ((gs = gs.isTrusted),
        (ps = ps && ps.tagName === "OPTION" ? ps.parentElement : ps) &&
          ps.tagName &&
          !(yr.indexOf(ps.tagName) < 0) &&
          !Q$2(ps, is, ns, !0))
      ) {
        var ms = ps.type;
        if (!ps.classList.contains(rs)) {
          let Es = ps.value,
            $s = !1;
          ms === "radio" || ms === "checkbox"
            ? ($s = ps.checked)
            : (ss[ps.tagName.toLowerCase()] || ss[ms]) &&
              (Es = Ue({
                maskInputOptions: ss,
                tagName: ps.tagName,
                type: ms,
                value: Es,
                maskInputFn: os,
              })),
            fs(ps, St({ text: Es, isChecked: $s, userTriggered: gs }, as)),
            (gs = ps.name),
            ms === "radio" &&
              gs &&
              $s &&
              es
                .querySelectorAll(`input[type="radio"][name="${gs}"]`)
                .forEach((Cs) => {
                  Cs !== ps &&
                    fs(
                      Cs,
                      St(
                        { text: Cs.value, isChecked: !$s, userTriggered: !1 },
                        as
                      )
                    );
                });
        }
      }
    }
    function fs(gs, ps) {
      const ms = vt.get(gs);
      if (!ms || ms.text !== ps.text || ms.isChecked !== ps.isChecked) {
        vt.set(gs, ps);
        const Es = ts.getId(gs);
        Et(Object.assign(Object.assign({}, ps), { id: Es }));
      }
    }
    const us = (ds.input === "last" ? ["change"] : ["input", "change"]).map(
        (gs) => P$4(gs, cs, es)
      ),
      ls = es.defaultView;
    var hs;
    return ls
      ? ((ds = ls.Object.getOwnPropertyDescriptor(
          ls.HTMLInputElement.prototype,
          "value"
        )),
        (hs = [
          [ls.HTMLInputElement.prototype, "value"],
          [ls.HTMLInputElement.prototype, "checked"],
          [ls.HTMLSelectElement.prototype, "value"],
          [ls.HTMLTextAreaElement.prototype, "value"],
          [ls.HTMLSelectElement.prototype, "selectedIndex"],
          [ls.HTMLOptionElement.prototype, "selected"],
        ]),
        ds &&
          ds.set &&
          us.push(
            ...hs.map((gs) =>
              Fe(
                gs[0],
                gs[1],
                {
                  set() {
                    cs({ target: this });
                  },
                },
                !1,
                ls
              )
            )
          ),
        () => {
          us.forEach((gs) => gs());
        })
      : () => {
          us.forEach((gs) => gs());
        };
  }
  function Ee$3(Et) {
    return (
      (Et = Et),
      (es = []),
      (pt && Et.parentRule instanceof CSSGroupingRule) ||
      (gt && Et.parentRule instanceof CSSMediaRule) ||
      (mt && Et.parentRule instanceof CSSSupportsRule) ||
      (It && Et.parentRule instanceof CSSConditionRule)
        ? ((ts = Array.from(Et.parentRule.cssRules).indexOf(Et)),
          es.unshift(ts))
        : Et.parentStyleSheet &&
          ((ts = Array.from(Et.parentStyleSheet.cssRules).indexOf(Et)),
          es.unshift(ts)),
      es
    );
    var es, ts;
  }
  function de$2(Et, es, ts) {
    let is, ns;
    return Et
      ? (Et.ownerNode ? (is = es.getId(Et.ownerNode)) : (ns = ts.getId(Et)),
        { styleId: ns, id: is })
      : {};
  }
  function vr(
    { styleSheetRuleCb: Et, mirror: es, stylesheetManager: ts },
    { win: is }
  ) {
    const ns = is.CSSStyleSheet.prototype.insertRule,
      rs =
        ((is.CSSStyleSheet.prototype.insertRule = function (cs, fs) {
          var { id: us, styleId: ls } = de$2(this, es, ts.styleMirror);
          return (
            ((us && us !== -1) || (ls && ls !== -1)) &&
              Et({ id: us, styleId: ls, adds: [{ rule: cs, index: fs }] }),
            ns.apply(this, [cs, fs])
          );
        }),
        is.CSSStyleSheet.prototype.deleteRule);
    let ss, os;
    (is.CSSStyleSheet.prototype.deleteRule = function (cs) {
      var { id: fs, styleId: us } = de$2(this, es, ts.styleMirror);
      return (
        ((fs && fs !== -1) || (us && us !== -1)) &&
          Et({ id: fs, styleId: us, removes: [{ index: cs }] }),
        rs.apply(this, [cs])
      );
    }),
      is.CSSStyleSheet.prototype.replace &&
        ((ss = is.CSSStyleSheet.prototype.replace),
        (is.CSSStyleSheet.prototype.replace = function (cs) {
          var { id: fs, styleId: us } = de$2(this, es, ts.styleMirror);
          return (
            ((fs && fs !== -1) || (us && us !== -1)) &&
              Et({ id: fs, styleId: us, replace: cs }),
            ss.apply(this, [cs])
          );
        })),
      is.CSSStyleSheet.prototype.replaceSync &&
        ((os = is.CSSStyleSheet.prototype.replaceSync),
        (is.CSSStyleSheet.prototype.replaceSync = function (cs) {
          var { id: fs, styleId: us } = de$2(this, es, ts.styleMirror);
          return (
            ((fs && fs !== -1) || (us && us !== -1)) &&
              Et({ id: fs, styleId: us, replaceSync: cs }),
            os.apply(this, [cs])
          );
        }));
    const ds = {},
      as =
        (pt
          ? (ds.CSSGroupingRule = is.CSSGroupingRule)
          : (gt && (ds.CSSMediaRule = is.CSSMediaRule),
            It && (ds.CSSConditionRule = is.CSSConditionRule),
            mt && (ds.CSSSupportsRule = is.CSSSupportsRule)),
        {});
    return (
      Object.entries(ds).forEach(([cs, fs]) => {
        (as[cs] = {
          insertRule: fs.prototype.insertRule,
          deleteRule: fs.prototype.deleteRule,
        }),
          (fs.prototype.insertRule = function (us, ls) {
            var { id: hs, styleId: gs } = de$2(
              this.parentStyleSheet,
              es,
              ts.styleMirror
            );
            return (
              ((hs && hs !== -1) || (gs && gs !== -1)) &&
                Et({
                  id: hs,
                  styleId: gs,
                  adds: [{ rule: us, index: [...Ee$3(this), ls || 0] }],
                }),
              as[cs].insertRule.apply(this, [us, ls])
            );
          }),
          (fs.prototype.deleteRule = function (us) {
            var { id: ls, styleId: hs } = de$2(
              this.parentStyleSheet,
              es,
              ts.styleMirror
            );
            return (
              ((ls && ls !== -1) || (hs && hs !== -1)) &&
                Et({
                  id: ls,
                  styleId: hs,
                  removes: [{ index: [...Ee$3(this), us] }],
                }),
              as[cs].deleteRule.apply(this, [us])
            );
          });
      }),
      () => {
        (is.CSSStyleSheet.prototype.insertRule = ns),
          (is.CSSStyleSheet.prototype.deleteRule = rs),
          ss && (is.CSSStyleSheet.prototype.replace = ss),
          os && (is.CSSStyleSheet.prototype.replaceSync = os),
          Object.entries(ds).forEach(([cs, fs]) => {
            (fs.prototype.insertRule = as[cs].insertRule),
              (fs.prototype.deleteRule = as[cs].deleteRule);
          });
      }
    );
  }
  function bt({ mirror: Et, stylesheetManager: es }, ts) {
    let is;
    is = ts.nodeName === "#document" ? Et.getId(ts) : Et.getId(ts.host);
    const ns =
        ts.nodeName === "#document"
          ? (Et = ts.defaultView) == null
            ? void 0
            : Et.Document
          : (Et = (Et = ts.ownerDocument) == null ? void 0 : Et.defaultView) ==
            null
          ? void 0
          : Et.ShadowRoot,
      rs = Object.getOwnPropertyDescriptor(
        ns == null ? void 0 : ns.prototype,
        "adoptedStyleSheets"
      );
    return is !== null && is !== -1 && ns && rs
      ? (Object.defineProperty(ts, "adoptedStyleSheets", {
          configurable: rs.configurable,
          enumerable: rs.enumerable,
          get() {
            var ss;
            return (ss = rs.get) == null ? void 0 : ss.call(this);
          },
          set(ss) {
            var os = (os = rs.set) == null ? void 0 : os.call(this, ss);
            if (is !== null && is !== -1)
              try {
                es.adoptStyleSheets(ss, is);
              } catch (ds) {}
            return os;
          },
        }),
        () => {
          Object.defineProperty(ts, "adoptedStyleSheets", {
            configurable: rs.configurable,
            enumerable: rs.enumerable,
            get: rs.get,
            set: rs.set,
          });
        })
      : () => {};
  }
  function br(
    {
      styleDeclarationCb: Et,
      mirror: es,
      ignoreCSSAttributes: ts,
      stylesheetManager: is,
    },
    { win: ns }
  ) {
    const rs = ns.CSSStyleDeclaration.prototype.setProperty,
      ss =
        ((ns.CSSStyleDeclaration.prototype.setProperty = function (os, ds, as) {
          var cs, fs;
          return (
            !ts.has(os) &&
              (({ id: cs, styleId: fs } = de$2(
                (cs = this.parentRule) == null ? void 0 : cs.parentStyleSheet,
                es,
                is.styleMirror
              )),
              (cs && cs !== -1) || (fs && fs !== -1)) &&
              Et({
                id: cs,
                styleId: fs,
                set: { property: os, value: ds, priority: as },
                index: Ee$3(this.parentRule),
              }),
            rs.apply(this, [os, ds, as])
          );
        }),
        ns.CSSStyleDeclaration.prototype.removeProperty);
    return (
      (ns.CSSStyleDeclaration.prototype.removeProperty = function (os) {
        var ds, as;
        return (
          !ts.has(os) &&
            (({ id: ds, styleId: as } = de$2(
              (ds = this.parentRule) == null ? void 0 : ds.parentStyleSheet,
              es,
              is.styleMirror
            )),
            (ds && ds !== -1) || (as && as !== -1)) &&
            Et({
              id: ds,
              styleId: as,
              remove: { property: os },
              index: Ee$3(this.parentRule),
            }),
          ss.apply(this, [os])
        );
      }),
      () => {
        (ns.CSSStyleDeclaration.prototype.setProperty = rs),
          (ns.CSSStyleDeclaration.prototype.removeProperty = ss);
      }
    );
  }
  function Ar({
    mediaInteractionCb: Et,
    blockClass: es,
    blockSelector: ts,
    mirror: is,
    sampling: ns,
  }) {
    const rs = (os) =>
        Re$1((ls) => {
          var as,
            cs,
            fs,
            us,
            ls = Ne$1(ls);
          ls &&
            !Q$2(ls, es, ts, !0) &&
            (({
              currentTime: as,
              volume: cs,
              muted: fs,
              playbackRate: us,
            } = ls),
            Et({
              type: os,
              id: is.getId(ls),
              currentTime: as,
              volume: cs,
              muted: fs,
              playbackRate: us,
            }));
        }, ns.media || 500),
      ss = [
        P$4("play", rs(0)),
        P$4("pause", rs(1)),
        P$4("seeked", rs(2)),
        P$4("volumechange", rs(3)),
        P$4("ratechange", rs(4)),
      ];
    return () => {
      ss.forEach((os) => os());
    };
  }
  function wr({ fontCb: Et, doc: es }) {
    const ts = es.defaultView;
    if (!ts) return () => {};
    const is = [],
      ns = new WeakMap(),
      rs = ts.FontFace;
    return (
      (ts.FontFace = function (ss, os, ds) {
        var as = new rs(ss, os, ds);
        return (
          ns.set(as, {
            family: ss,
            buffer: typeof os != "string",
            descriptors: ds,
            fontSource:
              typeof os == "string"
                ? os
                : JSON.stringify(Array.from(new Uint8Array(os))),
          }),
          as
        );
      }),
      (es = Ie(es.fonts, "add", function (ss) {
        return function (os) {
          return (
            setTimeout(() => {
              var ds = ns.get(os);
              ds && (Et(ds), ns.delete(os));
            }, 0),
            ss.apply(this, [os])
          );
        };
      })),
      is.push(() => {
        ts.FontFace = rs;
      }),
      is.push(es),
      () => {
        is.forEach((ss) => ss());
      }
    );
  }
  function kr(Et) {
    const {
      doc: es,
      mirror: ts,
      blockClass: is,
      blockSelector: ns,
      selectionCb: rs,
    } = Et;
    let ss = !0;
    return (
      (Et = () => {
        var os = es.getSelection();
        if (!(!os || (ss && os != null && os.isCollapsed))) {
          ss = os.isCollapsed || !1;
          const ds = [],
            as = os.rangeCount || 0;
          for (let cs = 0; cs < as; cs++) {
            const fs = os.getRangeAt(cs),
              {
                startContainer: us,
                startOffset: ls,
                endContainer: hs,
                endOffset: gs,
              } = fs;
            Q$2(us, is, ns, !0) ||
              Q$2(hs, is, ns, !0) ||
              ds.push({
                start: ts.getId(us),
                startOffset: ls,
                end: ts.getId(hs),
                endOffset: gs,
              });
          }
          rs({ ranges: ds });
        }
      }),
      Et(),
      P$4("selectionchange", Et)
    );
  }
  function Mr(Et, es) {
    const {
      mutationCb: ts,
      mousemoveCb: is,
      mouseInteractionCb: ns,
      scrollCb: rs,
      viewportResizeCb: ss,
      inputCb: os,
      mediaInteractionCb: ds,
      styleSheetRuleCb: as,
      styleDeclarationCb: cs,
      canvasMutationCb: fs,
      fontCb: us,
      selectionCb: ls,
    } = Et;
    (Et.mutationCb = (...hs) => {
      es.mutation && es.mutation(...hs), ts(...hs);
    }),
      (Et.mousemoveCb = (...hs) => {
        es.mousemove && es.mousemove(...hs), is(...hs);
      }),
      (Et.mouseInteractionCb = (...hs) => {
        es.mouseInteraction && es.mouseInteraction(...hs), ns(...hs);
      }),
      (Et.scrollCb = (...hs) => {
        es.scroll && es.scroll(...hs), rs(...hs);
      }),
      (Et.viewportResizeCb = (...hs) => {
        es.viewportResize && es.viewportResize(...hs), ss(...hs);
      }),
      (Et.inputCb = (...hs) => {
        es.input && es.input(...hs), os(...hs);
      }),
      (Et.mediaInteractionCb = (...hs) => {
        es.mediaInteaction && es.mediaInteaction(...hs), ds(...hs);
      }),
      (Et.styleSheetRuleCb = (...hs) => {
        es.styleSheetRule && es.styleSheetRule(...hs), as(...hs);
      }),
      (Et.styleDeclarationCb = (...hs) => {
        es.styleDeclaration && es.styleDeclaration(...hs), cs(...hs);
      }),
      (Et.canvasMutationCb = (...hs) => {
        es.canvasMutation && es.canvasMutation(...hs), fs(...hs);
      }),
      (Et.fontCb = (...hs) => {
        es.font && es.font(...hs), us(...hs);
      }),
      (Et.selectionCb = (...hs) => {
        es.selection && es.selection(...hs), ls(...hs);
      });
  }
  function Rr(Et, es = {}) {
    var ts = Et.doc.defaultView;
    if (!ts) return () => {};
    Mr(Et, es);
    const is = Ct(Et, Et.doc),
      ns = mr(Et),
      rs = Ir(Et),
      ss = yt(Et),
      os = Cr(Et),
      ds = Sr(Et),
      as = Ar(Et),
      cs = vr(Et, { win: ts }),
      fs = bt(Et, Et.doc),
      us = br(Et, { win: ts }),
      ls = Et.collectFonts ? wr(Et) : () => {},
      hs = kr(Et),
      gs = [];
    for (const ps of Et.plugins)
      gs.push(ps.observer(ps.callback, ts, ps.options));
    return () => {
      ue$2.forEach((ps) => ps.reset()),
        is.disconnect(),
        ns(),
        rs(),
        ss(),
        os(),
        ds(),
        as(),
        cs(),
        fs(),
        us(),
        ls(),
        hs(),
        gs.forEach((ps) => ps());
    };
  }
  class At {
    constructor(es) {
      (this.generateIdFn = es),
        (this.iframeIdToRemoteIdMap = new WeakMap()),
        (this.iframeRemoteIdToIdMap = new WeakMap());
    }
    getId(es, ts, is, ns) {
      (is = is || this.getIdToRemoteIdMap(es)),
        (ns = ns || this.getRemoteIdToIdMap(es));
      let rs = is.get(ts);
      return (
        rs || ((rs = this.generateIdFn()), is.set(ts, rs), ns.set(rs, ts)), rs
      );
    }
    getIds(es, ts) {
      const is = this.getIdToRemoteIdMap(es),
        ns = this.getRemoteIdToIdMap(es);
      return ts.map((rs) => this.getId(es, rs, is, ns));
    }
    getRemoteId(es, ts, is) {
      return (
        (is = is || this.getRemoteIdToIdMap(es)),
        typeof ts != "number" ? ts : is.get(ts) || -1
      );
    }
    getRemoteIds(es, ts) {
      const is = this.getRemoteIdToIdMap(es);
      return ts.map((ns) => this.getRemoteId(es, ns, is));
    }
    reset(es) {
      es
        ? (this.iframeIdToRemoteIdMap.delete(es),
          this.iframeRemoteIdToIdMap.delete(es))
        : ((this.iframeIdToRemoteIdMap = new WeakMap()),
          (this.iframeRemoteIdToIdMap = new WeakMap()));
    }
    getIdToRemoteIdMap(es) {
      let ts = this.iframeIdToRemoteIdMap.get(es);
      return (
        ts || ((ts = new s$5()), this.iframeIdToRemoteIdMap.set(es, ts)), ts
      );
    }
    getRemoteIdToIdMap(es) {
      let ts = this.iframeRemoteIdToIdMap.get(es);
      return (
        ts || ((ts = new s$5()), this.iframeRemoteIdToIdMap.set(es, ts)), ts
      );
    }
  }
  class Nr {
    constructor(es) {
      (this.iframes = new WeakMap()),
        (this.crossOriginIframeMap = new WeakMap()),
        (this.crossOriginIframeMirror = new At(Xe)),
        (this.mutationCb = es.mutationCb),
        (this.wrappedEmit = es.wrappedEmit),
        (this.stylesheetManager = es.stylesheetManager),
        (this.recordCrossOriginIframes = es.recordCrossOriginIframes),
        (this.crossOriginIframeStyleMirror = new At(
          this.stylesheetManager.styleMirror.generateId.bind(
            this.stylesheetManager.styleMirror
          )
        )),
        (this.mirror = es.mirror),
        this.recordCrossOriginIframes &&
          window.addEventListener("message", this.handleMessage.bind(this));
    }
    addIframe(es) {
      this.iframes.set(es, !0),
        es.contentWindow && this.crossOriginIframeMap.set(es.contentWindow, es);
    }
    addLoadListener(es) {
      this.loadListener = es;
    }
    attachIframe(es, ts) {
      this.mutationCb({
        adds: [{ parentId: this.mirror.getId(es), nextId: null, node: ts }],
        removes: [],
        texts: [],
        attributes: [],
        isAttachIframe: !0,
      }),
        (ts = this.loadListener) != null && ts.call(this, es),
        es.contentDocument &&
          es.contentDocument.adoptedStyleSheets &&
          0 < es.contentDocument.adoptedStyleSheets.length &&
          this.stylesheetManager.adoptStyleSheets(
            es.contentDocument.adoptedStyleSheets,
            this.mirror.getId(es.contentDocument)
          );
    }
    handleMessage(es) {
      var ts;
      es.data.type === "rrweb" &&
        es.source &&
        (ts = this.crossOriginIframeMap.get(es.source)) &&
        (ts = this.transformCrossOriginEvent(ts, es.data.event)) &&
        this.wrappedEmit(ts, es.data.isCheckout);
    }
    transformCrossOriginEvent(es, ts) {
      var is;
      switch (ts.type) {
        case k$2.FullSnapshot:
          return (
            this.crossOriginIframeMirror.reset(es),
            this.crossOriginIframeStyleMirror.reset(es),
            this.replaceIdOnNode(ts.data.node, es),
            {
              timestamp: ts.timestamp,
              type: k$2.IncrementalSnapshot,
              data: {
                source: w$5.Mutation,
                adds: [
                  {
                    parentId: this.mirror.getId(es),
                    nextId: null,
                    node: ts.data.node,
                  },
                ],
                removes: [],
                texts: [],
                attributes: [],
                isAttachIframe: !0,
              },
            }
          );
        case k$2.Meta:
        case k$2.Load:
        case k$2.DomContentLoaded:
          return !1;
        case k$2.Plugin:
          return ts;
        case k$2.Custom:
          return (
            this.replaceIds(ts.data.payload, es, [
              "id",
              "parentId",
              "previousId",
              "nextId",
            ]),
            ts
          );
        case k$2.IncrementalSnapshot:
          switch (ts.data.source) {
            case w$5.Mutation:
              return (
                ts.data.adds.forEach((ns) => {
                  this.replaceIds(ns, es, ["parentId", "nextId", "previousId"]),
                    this.replaceIdOnNode(ns.node, es);
                }),
                ts.data.removes.forEach((ns) => {
                  this.replaceIds(ns, es, ["parentId", "id"]);
                }),
                ts.data.attributes.forEach((ns) => {
                  this.replaceIds(ns, es, ["id"]);
                }),
                ts.data.texts.forEach((ns) => {
                  this.replaceIds(ns, es, ["id"]);
                }),
                ts
              );
            case w$5.Drag:
            case w$5.TouchMove:
            case w$5.MouseMove:
              return (
                ts.data.positions.forEach((ns) => {
                  this.replaceIds(ns, es, ["id"]);
                }),
                ts
              );
            case w$5.ViewportResize:
              return !1;
            case w$5.MediaInteraction:
            case w$5.MouseInteraction:
            case w$5.Scroll:
            case w$5.CanvasMutation:
            case w$5.Input:
              return this.replaceIds(ts.data, es, ["id"]), ts;
            case w$5.StyleSheetRule:
            case w$5.StyleDeclaration:
              return (
                this.replaceIds(ts.data, es, ["id"]),
                this.replaceStyleIds(ts.data, es, ["styleId"]),
                ts
              );
            case w$5.Font:
              return ts;
            case w$5.Selection:
              return (
                ts.data.ranges.forEach((ns) => {
                  this.replaceIds(ns, es, ["start", "end"]);
                }),
                ts
              );
            case w$5.AdoptedStyleSheet:
              return (
                this.replaceIds(ts.data, es, ["id"]),
                this.replaceStyleIds(ts.data, es, ["styleIds"]),
                (is = ts.data.styles) != null &&
                  is.forEach((ns) => {
                    this.replaceStyleIds(ns, es, ["styleId"]);
                  }),
                ts
              );
          }
      }
    }
    replace(es, ts, is, ns) {
      for (const rs of ns)
        (!Array.isArray(ts[rs]) && typeof ts[rs] != "number") ||
          (Array.isArray(ts[rs])
            ? (ts[rs] = es.getIds(is, ts[rs]))
            : (ts[rs] = es.getId(is, ts[rs])));
      return ts;
    }
    replaceIds(es, ts, is) {
      return this.replace(this.crossOriginIframeMirror, es, ts, is);
    }
    replaceStyleIds(es, ts, is) {
      return this.replace(this.crossOriginIframeStyleMirror, es, ts, is);
    }
    replaceIdOnNode(es, ts) {
      this.replaceIds(es, ts, ["id"]),
        "childNodes" in es &&
          es.childNodes.forEach((is) => {
            this.replaceIdOnNode(is, ts);
          });
    }
  }
  class Tr {
    constructor(es) {
      (this.shadowDoms = new WeakSet()),
        (this.restorePatches = []),
        (this.mutationCb = es.mutationCb),
        (this.scrollCb = es.scrollCb),
        (this.bypassOptions = es.bypassOptions),
        (this.mirror = es.mirror);
      const ts = this;
      this.restorePatches.push(
        Ie(Element.prototype, "attachShadow", function (is) {
          return function (ns) {
            return (
              (ns = is.call(this, ns)),
              this.shadowRoot &&
                ts.addShadowRoot(this.shadowRoot, this.ownerDocument),
              ns
            );
          };
        })
      );
    }
    addShadowRoot(es, ts) {
      !ke(es) ||
        this.shadowDoms.has(es) ||
        (this.shadowDoms.add(es),
        Ct(
          Object.assign(Object.assign({}, this.bypassOptions), {
            doc: ts,
            mutationCb: this.mutationCb,
            mirror: this.mirror,
            shadowDomManager: this,
          }),
          es
        ),
        yt(
          Object.assign(Object.assign({}, this.bypassOptions), {
            scrollCb: this.scrollCb,
            doc: es,
            mirror: this.mirror,
          })
        ),
        setTimeout(() => {
          es.adoptedStyleSheets &&
            0 < es.adoptedStyleSheets.length &&
            this.bypassOptions.stylesheetManager.adoptStyleSheets(
              es.adoptedStyleSheets,
              this.mirror.getId(es.host)
            ),
            bt(
              {
                mirror: this.mirror,
                stylesheetManager: this.bypassOptions.stylesheetManager,
              },
              es
            );
        }, 0));
    }
    observeAttachShadow(es) {
      if (es.contentWindow) {
        const ts = this;
        this.restorePatches.push(
          Ie(
            es.contentWindow.HTMLElement.prototype,
            "attachShadow",
            function (is) {
              return function (ns) {
                return (
                  (ns = is.call(this, ns)),
                  this.shadowRoot &&
                    ts.addShadowRoot(this.shadowRoot, es.contentDocument),
                  ns
                );
              };
            }
          )
        );
      }
    }
    reset() {
      this.restorePatches.forEach((es) => es()),
        (this.shadowDoms = new WeakSet());
    }
  }
  function Or(Et, es) {
    var ts = {};
    for (ns in Et)
      Object.prototype.hasOwnProperty.call(Et, ns) &&
        es.indexOf(ns) < 0 &&
        (ts[ns] = Et[ns]);
    if (Et != null && typeof Object.getOwnPropertySymbols == "function")
      for (
        var is = 0, ns = Object.getOwnPropertySymbols(Et);
        is < ns.length;
        is++
      )
        es.indexOf(ns[is]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(Et, ns[is]) &&
          (ts[ns[is]] = Et[ns[is]]);
    return ts;
  }
  function Fr(Et, es, ts, is) {
    return new (ts = ts || Promise)(function (ns, rs) {
      function ss(as) {
        try {
          ds(is.next(as));
        } catch (cs) {
          rs(cs);
        }
      }
      function os(as) {
        try {
          ds(is.throw(as));
        } catch (cs) {
          rs(cs);
        }
      }
      function ds(as) {
        var cs;
        as.done
          ? ns(as.value)
          : ((cs = as.value) instanceof ts
              ? cs
              : new ts(function (fs) {
                  fs(cs);
                })
            ).then(ss, os);
      }
      ds((is = is.apply(Et, [])).next());
    });
  }
  for (
    var ye = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
      Er = typeof Uint8Array == "undefined" ? [] : new Uint8Array(256),
      Le = 0;
    Le < ye.length;
    Le++
  )
    Er[ye.charCodeAt(Le)] = Le;
  var Lr = function (Et) {
    for (
      var es = new Uint8Array(Et), ts = es.length, is = "", ns = 0;
      ns < ts;
      ns += 3
    )
      is =
        (is =
          (is =
            (is += ye[es[ns] >> 2]) +
            ye[((3 & es[ns]) << 4) | (es[ns + 1] >> 4)]) +
          ye[((15 & es[ns + 1]) << 2) | (es[ns + 2] >> 6)]) +
        ye[63 & es[ns + 2]];
    return (
      ts % 3 == 2
        ? (is = is.substring(0, is.length - 1) + "=")
        : ts % 3 == 1 && (is = is.substring(0, is.length - 2) + "=="),
      is
    );
  };
  const wt = new s$5();
  function Dr(Et, es) {
    let ts = wt.get(Et);
    return (
      ts || ((ts = new s$5()), wt.set(Et, ts)),
      ts.has(es) || ts.set(es, []),
      ts.get(es)
    );
  }
  const kt = (Et, es, ts) => {
    if (Et && (Rt(Et, es) || typeof Et == "object")) {
      es = Dr(ts, Et.constructor.name);
      let is = es.indexOf(Et);
      return is === -1 && ((is = es.length), es.push(Et)), is;
    }
  };
  function De(Et, es, ts) {
    if (Et instanceof Array) return Et.map((is) => De(is, es, ts));
    if (Et === null) return Et;
    if (
      Et instanceof Float32Array ||
      Et instanceof Float64Array ||
      Et instanceof Int32Array ||
      Et instanceof Uint32Array ||
      Et instanceof Uint8Array ||
      Et instanceof Uint16Array ||
      Et instanceof Int16Array ||
      Et instanceof Int8Array ||
      Et instanceof Uint8ClampedArray
    )
      return { rr_type: Et.constructor.name, args: [Object.values(Et)] };
    if (Et instanceof ArrayBuffer)
      return { rr_type: Et.constructor.name, base64: Lr(Et) };
    if (Et instanceof DataView)
      return {
        rr_type: Et.constructor.name,
        args: [De(Et.buffer, es, ts), Et.byteOffset, Et.byteLength],
      };
    if (Et instanceof HTMLImageElement) {
      const is = Et.constructor.name,
        ns = Et.src;
      return { rr_type: is, src: ns };
    }
    return Et instanceof HTMLCanvasElement
      ? { rr_type: "HTMLImageElement", src: Et.toDataURL() }
      : Et instanceof ImageData
      ? {
          rr_type: Et.constructor.name,
          args: [De(Et.data, es, ts), Et.width, Et.height],
        }
      : Rt(Et, es) || typeof Et == "object"
      ? { rr_type: Et.constructor.name, index: kt(Et, es, ts) }
      : Et;
  }
  const Mt = (Et, es, ts) => [...Et].map((is) => De(is, es, ts)),
    Rt = (Et, es) =>
      !![
        "WebGLActiveInfo",
        "WebGLBuffer",
        "WebGLFramebuffer",
        "WebGLProgram",
        "WebGLRenderbuffer",
        "WebGLShader",
        "WebGLShaderPrecisionFormat",
        "WebGLTexture",
        "WebGLUniformLocation",
        "WebGLVertexArrayObject",
        "WebGLVertexArrayObjectOES",
      ]
        .filter((ts) => typeof es[ts] == "function")
        .find((ts) => Et instanceof es[ts]);
  function xr(Et, es, ts, is) {
    const ns = [],
      rs = Object.getOwnPropertyNames(es.CanvasRenderingContext2D.prototype);
    for (const ss of rs)
      try {
        if (typeof es.CanvasRenderingContext2D.prototype[ss] != "function")
          continue;
        const os = Ie(es.CanvasRenderingContext2D.prototype, ss, function (ds) {
          return function (...as) {
            return (
              Q$2(this.canvas, ts, is, !0) ||
                setTimeout(() => {
                  var cs = Mt([...as], es, this);
                  Et(this.canvas, { type: Ce["2D"], property: ss, args: cs });
                }, 0),
              ds.apply(this, as)
            );
          };
        });
        ns.push(os);
      } catch (os) {
        const ds = Fe(es.CanvasRenderingContext2D.prototype, ss, {
          set(as) {
            Et(this.canvas, {
              type: Ce["2D"],
              property: ss,
              args: [as],
              setter: !0,
            });
          },
        });
        ns.push(ds);
      }
    return () => {
      ns.forEach((ss) => ss());
    };
  }
  function Nt(Et, es, ts) {
    const is = [];
    try {
      var ns = Ie(Et.HTMLCanvasElement.prototype, "getContext", function (rs) {
        return function (ss, ...os) {
          return (
            Q$2(this, es, ts, !0) ||
              "__context" in this ||
              (this.__context = ss),
            rs.apply(this, [ss, ...os])
          );
        };
      });
      is.push(ns);
    } catch (rs) {
      console.error("failed to patch HTMLCanvasElement.prototype.getContext");
    }
    return () => {
      is.forEach((rs) => rs());
    };
  }
  function Tt(Et, es, ts, is, ns, rs, ss) {
    const os = [],
      ds = Object.getOwnPropertyNames(Et);
    for (const as of ds)
      if (
        ![
          "isContextLost",
          "canvas",
          "drawingBufferWidth",
          "drawingBufferHeight",
        ].includes(as)
      )
        try {
          if (typeof Et[as] != "function") continue;
          const cs = Ie(Et, as, function (fs) {
            return function (...us) {
              var ls = fs.apply(this, us);
              if ((kt(ls, ss, this), !Q$2(this.canvas, is, ns, !0))) {
                const hs = Mt([...us], ss, this),
                  gs = { type: es, property: as, args: hs };
                ts(this.canvas, gs);
              }
              return ls;
            };
          });
          os.push(cs);
        } catch (cs) {
          const fs = Fe(Et, as, {
            set(us) {
              ts(this.canvas, {
                type: es,
                property: as,
                args: [us],
                setter: !0,
              });
            },
          });
          os.push(fs);
        }
    return os;
  }
  function Wr(Et, es, ts, is, ns) {
    const rs = [];
    return (
      rs.push(
        ...Tt(es.WebGLRenderingContext.prototype, Ce.WebGL, Et, ts, is, ns, es)
      ),
      es.WebGL2RenderingContext !== void 0 &&
        rs.push(
          ...Tt(
            es.WebGL2RenderingContext.prototype,
            Ce.WebGL2,
            Et,
            ts,
            is,
            ns,
            es
          )
        ),
      () => {
        rs.forEach((ss) => ss());
      }
    );
  }
  var Ot = null;
  try {
    var Br =
        (typeof module != "undefined" &&
          typeof module.require == "function" &&
          module.require("worker_threads")) ||
        (typeof __non_webpack_require__ == "function" &&
          __non_webpack_require__("worker_threads")) ||
        (typeof require == "function" && require("worker_threads")),
      Ot = Br.Worker;
  } catch (Et) {}
  function Gr(Et, es) {
    return Buffer.from(Et, "base64").toString("utf8");
  }
  function _r(is, es, ts) {
    var is = Gr(is),
      ns =
        is.indexOf(
          `
`,
          10
        ) + 1,
      rs = is.substring(ns) + "";
    return function (ss) {
      return new Ot(rs, Object.assign({}, ss, { eval: !0 }));
    };
  }
  function Ur(Et, es) {
    return atob(Et);
  }
  function Zr(is, es, ts) {
    var is = Ur(is),
      ns =
        is.indexOf(
          `
`,
          10
        ) + 1,
      is = is.substring(ns) + "",
      ns = new Blob([is], { type: "application/javascript" });
    return URL.createObjectURL(ns);
  }
  function Vr(Et, es, ts) {
    var is;
    return function (ns) {
      return (is = is || Zr(Et)), new Worker(is, ns);
    };
  }
  var Kr =
    Object.prototype.toString.call(
      typeof process != "undefined" ? process : 0
    ) === "[object process]";
  function zr() {
    return Kr;
  }
  function Hr(Et, es, ts) {
    return (zr() ? _r : Vr)(Et);
  }
  var Yr = Hr(
    "Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwooZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIC8qISAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KICAgIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLg0KDQogICAgUGVybWlzc2lvbiB0byB1c2UsIGNvcHksIG1vZGlmeSwgYW5kL29yIGRpc3RyaWJ1dGUgdGhpcyBzb2Z0d2FyZSBmb3IgYW55DQogICAgcHVycG9zZSB3aXRoIG9yIHdpdGhvdXQgZmVlIGlzIGhlcmVieSBncmFudGVkLg0KDQogICAgVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIgQU5EIFRIRSBBVVRIT1IgRElTQ0xBSU1TIEFMTCBXQVJSQU5USUVTIFdJVEgNCiAgICBSRUdBUkQgVE8gVEhJUyBTT0ZUV0FSRSBJTkNMVURJTkcgQUxMIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkNCiAgICBBTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsDQogICAgSU5ESVJFQ1QsIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBPUiBBTlkgREFNQUdFUyBXSEFUU09FVkVSIFJFU1VMVElORyBGUk9NDQogICAgTE9TUyBPRiBVU0UsIERBVEEgT1IgUFJPRklUUywgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1INCiAgICBPVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SDQogICAgUEVSRk9STUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS4NCiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLw0KDQogICAgZnVuY3Rpb24gX19hd2FpdGVyKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikgew0KICAgICAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH0NCiAgICAgICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7DQogICAgICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9DQogICAgICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvclsidGhyb3ciXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9DQogICAgICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfQ0KICAgICAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpOw0KICAgICAgICB9KTsNCiAgICB9CgogICAgLyoKICAgICAqIGJhc2U2NC1hcnJheWJ1ZmZlciAxLjAuMSA8aHR0cHM6Ly9naXRodWIuY29tL25pa2xhc3ZoL2Jhc2U2NC1hcnJheWJ1ZmZlcj4KICAgICAqIENvcHlyaWdodCAoYykgMjAyMSBOaWtsYXMgdm9uIEhlcnR6ZW4gPGh0dHBzOi8vaGVydHplbi5jb20+CiAgICAgKiBSZWxlYXNlZCB1bmRlciBNSVQgTGljZW5zZQogICAgICovCiAgICB2YXIgY2hhcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLyc7CiAgICAvLyBVc2UgYSBsb29rdXAgdGFibGUgdG8gZmluZCB0aGUgaW5kZXguCiAgICB2YXIgbG9va3VwID0gdHlwZW9mIFVpbnQ4QXJyYXkgPT09ICd1bmRlZmluZWQnID8gW10gOiBuZXcgVWludDhBcnJheSgyNTYpOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGFycy5sZW5ndGg7IGkrKykgewogICAgICAgIGxvb2t1cFtjaGFycy5jaGFyQ29kZUF0KGkpXSA9IGk7CiAgICB9CiAgICB2YXIgZW5jb2RlID0gZnVuY3Rpb24gKGFycmF5YnVmZmVyKSB7CiAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlidWZmZXIpLCBpLCBsZW4gPSBieXRlcy5sZW5ndGgsIGJhc2U2NCA9ICcnOwogICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gMykgewogICAgICAgICAgICBiYXNlNjQgKz0gY2hhcnNbYnl0ZXNbaV0gPj4gMl07CiAgICAgICAgICAgIGJhc2U2NCArPSBjaGFyc1soKGJ5dGVzW2ldICYgMykgPDwgNCkgfCAoYnl0ZXNbaSArIDFdID4+IDQpXTsKICAgICAgICAgICAgYmFzZTY0ICs9IGNoYXJzWygoYnl0ZXNbaSArIDFdICYgMTUpIDw8IDIpIHwgKGJ5dGVzW2kgKyAyXSA+PiA2KV07CiAgICAgICAgICAgIGJhc2U2NCArPSBjaGFyc1tieXRlc1tpICsgMl0gJiA2M107CiAgICAgICAgfQogICAgICAgIGlmIChsZW4gJSAzID09PSAyKSB7CiAgICAgICAgICAgIGJhc2U2NCA9IGJhc2U2NC5zdWJzdHJpbmcoMCwgYmFzZTY0Lmxlbmd0aCAtIDEpICsgJz0nOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChsZW4gJSAzID09PSAxKSB7CiAgICAgICAgICAgIGJhc2U2NCA9IGJhc2U2NC5zdWJzdHJpbmcoMCwgYmFzZTY0Lmxlbmd0aCAtIDIpICsgJz09JzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGJhc2U2NDsKICAgIH07CgogICAgY29uc3QgbGFzdEJsb2JNYXAgPSBuZXcgTWFwKCk7DQogICAgY29uc3QgdHJhbnNwYXJlbnRCbG9iTWFwID0gbmV3IE1hcCgpOw0KICAgIGZ1bmN0aW9uIGdldFRyYW5zcGFyZW50QmxvYkZvcih3aWR0aCwgaGVpZ2h0LCBkYXRhVVJMT3B0aW9ucykgew0KICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgew0KICAgICAgICAgICAgY29uc3QgaWQgPSBgJHt3aWR0aH0tJHtoZWlnaHR9YDsNCiAgICAgICAgICAgIGlmICgnT2Zmc2NyZWVuQ2FudmFzJyBpbiBnbG9iYWxUaGlzKSB7DQogICAgICAgICAgICAgICAgaWYgKHRyYW5zcGFyZW50QmxvYk1hcC5oYXMoaWQpKQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNwYXJlbnRCbG9iTWFwLmdldChpZCk7DQogICAgICAgICAgICAgICAgY29uc3Qgb2Zmc2NyZWVuID0gbmV3IE9mZnNjcmVlbkNhbnZhcyh3aWR0aCwgaGVpZ2h0KTsNCiAgICAgICAgICAgICAgICBvZmZzY3JlZW4uZ2V0Q29udGV4dCgnMmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBibG9iID0geWllbGQgb2Zmc2NyZWVuLmNvbnZlcnRUb0Jsb2IoZGF0YVVSTE9wdGlvbnMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFycmF5QnVmZmVyID0geWllbGQgYmxvYi5hcnJheUJ1ZmZlcigpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJhc2U2NCA9IGVuY29kZShhcnJheUJ1ZmZlcik7DQogICAgICAgICAgICAgICAgdHJhbnNwYXJlbnRCbG9iTWFwLnNldChpZCwgYmFzZTY0KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gYmFzZTY0Ow0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICB9DQogICAgY29uc3Qgd29ya2VyID0gc2VsZjsNCiAgICB3b3JrZXIub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsNCiAgICAgICAgICAgIGlmICgnT2Zmc2NyZWVuQ2FudmFzJyBpbiBnbG9iYWxUaGlzKSB7DQogICAgICAgICAgICAgICAgY29uc3QgeyBpZCwgYml0bWFwLCB3aWR0aCwgaGVpZ2h0LCBkYXRhVVJMT3B0aW9ucyB9ID0gZS5kYXRhOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zcGFyZW50QmFzZTY0ID0gZ2V0VHJhbnNwYXJlbnRCbG9iRm9yKHdpZHRoLCBoZWlnaHQsIGRhdGFVUkxPcHRpb25zKTsNCiAgICAgICAgICAgICAgICBjb25zdCBvZmZzY3JlZW4gPSBuZXcgT2Zmc2NyZWVuQ2FudmFzKHdpZHRoLCBoZWlnaHQpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGN0eCA9IG9mZnNjcmVlbi5nZXRDb250ZXh0KCcyZCcpOw0KICAgICAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2UoYml0bWFwLCAwLCAwKTsNCiAgICAgICAgICAgICAgICBiaXRtYXAuY2xvc2UoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBibG9iID0geWllbGQgb2Zmc2NyZWVuLmNvbnZlcnRUb0Jsb2IoZGF0YVVSTE9wdGlvbnMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSBibG9iLnR5cGU7DQogICAgICAgICAgICAgICAgY29uc3QgYXJyYXlCdWZmZXIgPSB5aWVsZCBibG9iLmFycmF5QnVmZmVyKCk7DQogICAgICAgICAgICAgICAgY29uc3QgYmFzZTY0ID0gZW5jb2RlKGFycmF5QnVmZmVyKTsNCiAgICAgICAgICAgICAgICBpZiAoIWxhc3RCbG9iTWFwLmhhcyhpZCkgJiYgKHlpZWxkIHRyYW5zcGFyZW50QmFzZTY0KSA9PT0gYmFzZTY0KSB7DQogICAgICAgICAgICAgICAgICAgIGxhc3RCbG9iTWFwLnNldChpZCwgYmFzZTY0KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdvcmtlci5wb3N0TWVzc2FnZSh7IGlkIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAobGFzdEJsb2JNYXAuZ2V0KGlkKSA9PT0gYmFzZTY0KQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gd29ya2VyLnBvc3RNZXNzYWdlKHsgaWQgfSk7DQogICAgICAgICAgICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsNCiAgICAgICAgICAgICAgICAgICAgaWQsDQogICAgICAgICAgICAgICAgICAgIHR5cGUsDQogICAgICAgICAgICAgICAgICAgIGJhc2U2NCwNCiAgICAgICAgICAgICAgICAgICAgd2lkdGgsDQogICAgICAgICAgICAgICAgICAgIGhlaWdodCwNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICBsYXN0QmxvYk1hcC5zZXQoaWQsIGJhc2U2NCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gd29ya2VyLnBvc3RNZXNzYWdlKHsgaWQ6IGUuZGF0YS5pZCB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgfTsKCn0pKCk7Cgo="
  );
  class Jr {
    constructor(es) {
      (this.pendingCanvasMutations = new s$5()),
        (this.rafStamps = { latestId: 0, invokeId: null }),
        (this.frozen = !1),
        (this.locked = !1),
        (this.processMutation = (ds, as) => {
          ((this.rafStamps.invokeId &&
            this.rafStamps.latestId !== this.rafStamps.invokeId) ||
            !this.rafStamps.invokeId) &&
            (this.rafStamps.invokeId = this.rafStamps.latestId),
            this.pendingCanvasMutations.has(ds) ||
              this.pendingCanvasMutations.set(ds, []),
            this.pendingCanvasMutations.get(ds).push(as);
        });
      var {
        sampling: ts = "all",
        win: is,
        blockClass: ns,
        blockSelector: rs,
        recordCanvas: ss,
        dataURLOptions: os,
      } = es;
      (this.mutationCb = es.mutationCb),
        (this.mirror = es.mirror),
        ss && ts === "all" && this.initCanvasMutationObserver(is, ns, rs),
        ss &&
          typeof ts == "number" &&
          this.initCanvasFPSObserver(ts, is, ns, rs, { dataURLOptions: os });
    }
    reset() {
      this.pendingCanvasMutations.clear(),
        this.resetObservers && this.resetObservers();
    }
    freeze() {
      this.frozen = !0;
    }
    unfreeze() {
      this.frozen = !1;
    }
    lock() {
      this.locked = !0;
    }
    unlock() {
      this.locked = !1;
    }
    initCanvasFPSObserver(es, ts, is, ns, rs) {
      const ss = Nt(ts, is, ns),
        os = new s$5(),
        ds = new Yr(),
        as =
          ((ds.onmessage = (ls) => {
            var hs,
              gs,
              ps,
              ms = ls.data.id;
            os.set(ms, !1),
              "base64" in ls.data &&
                (({ base64: ls, type: hs, width: gs, height: ps } = ls.data),
                this.mutationCb({
                  id: ms,
                  type: Ce["2D"],
                  commands: [
                    { property: "clearRect", args: [0, 0, gs, ps] },
                    {
                      property: "drawImage",
                      args: [
                        {
                          rr_type: "ImageBitmap",
                          args: [
                            {
                              rr_type: "Blob",
                              data: [{ rr_type: "ArrayBuffer", base64: ls }],
                              type: hs,
                            },
                          ],
                        },
                        0,
                        0,
                      ],
                    },
                  ],
                }));
          }),
          1e3 / es);
      let cs,
        fs = 0;
      const us = (ls) => {
        (fs && ls - fs < as) ||
          ((fs = ls),
          (() => {
            const hs = [];
            return (
              ts.document.querySelectorAll("canvas").forEach((gs) => {
                Q$2(gs, is, ns, !0) || hs.push(gs);
              }),
              hs
            );
          })().forEach((hs) =>
            Fr(this, void 0, void 0, function* () {
              const gs = this.mirror.getId(hs);
              if (!os.get(gs)) {
                if (
                  (os.set(gs, !0), ["webgl", "webgl2"].includes(hs.__context))
                ) {
                  const ms = hs.getContext(hs.__context);
                  ((ps = ms == null ? void 0 : ms.getContextAttributes()) ==
                  null
                    ? void 0
                    : ps.preserveDrawingBuffer) !== !1 ||
                    (ms != null && ms.clear(ms.COLOR_BUFFER_BIT));
                }
                var ps = yield createImageBitmap(hs);
                ds.postMessage(
                  {
                    id: gs,
                    bitmap: ps,
                    width: hs.width,
                    height: hs.height,
                    dataURLOptions: rs.dataURLOptions,
                  },
                  [ps]
                );
              }
            })
          )),
          (cs = requestAnimationFrame(us));
      };
      (cs = requestAnimationFrame(us)),
        (this.resetObservers = () => {
          ss(), cancelAnimationFrame(cs);
        });
    }
    initCanvasMutationObserver(es, ts, is) {
      this.startRAFTimestamping(), this.startPendingCanvasMutationFlusher();
      const ns = Nt(es, ts, is),
        rs = xr(this.processMutation.bind(this), es, ts, is),
        ss = Wr(this.processMutation.bind(this), es, ts, is, this.mirror);
      this.resetObservers = () => {
        ns(), rs(), ss();
      };
    }
    startPendingCanvasMutationFlusher() {
      requestAnimationFrame(() => this.flushPendingCanvasMutations());
    }
    startRAFTimestamping() {
      const es = (ts) => {
        (this.rafStamps.latestId = ts), requestAnimationFrame(es);
      };
      requestAnimationFrame(es);
    }
    flushPendingCanvasMutations() {
      this.pendingCanvasMutations.forEach((es, ts) => {
        var is = this.mirror.getId(ts);
        this.flushPendingCanvasMutationFor(ts, is);
      }),
        requestAnimationFrame(() => this.flushPendingCanvasMutations());
    }
    flushPendingCanvasMutationFor(es, ts) {
      var is, ns;
      this.frozen ||
        this.locked ||
        ((ns = this.pendingCanvasMutations.get(es)) &&
          ts !== -1 &&
          ((is = ns.map((rs) => Or(rs, ["type"]))),
          (ns = ns[0].type),
          this.mutationCb({ id: ts, type: ns, commands: is }),
          this.pendingCanvasMutations.delete(es)));
    }
  }
  class Pr {
    constructor(es) {
      (this.trackedLinkElements = new WeakSet()),
        (this.styleMirror = new fr()),
        (this.mutationCb = es.mutationCb),
        (this.adoptedStyleSheetCb = es.adoptedStyleSheetCb);
    }
    attachLinkElement(es, ts) {
      "_cssText" in ts.attributes &&
        this.mutationCb({
          adds: [],
          removes: [],
          texts: [],
          attributes: [{ id: ts.id, attributes: ts.attributes }],
        }),
        this.trackLinkElement(es);
    }
    trackLinkElement(es) {
      this.trackedLinkElements.has(es) ||
        (this.trackedLinkElements.add(es),
        this.trackStylesheetInLinkElement(es));
    }
    adoptStyleSheets(es, ts) {
      if (es.length !== 0) {
        const is = { id: ts, styleIds: [] },
          ns = [];
        for (const rs of es) {
          let ss;
          if (this.styleMirror.has(rs)) ss = this.styleMirror.getId(rs);
          else {
            ss = this.styleMirror.add(rs);
            const os = Array.from(rs.rules || CSSRule);
            ns.push({
              styleId: ss,
              rules: os.map((ds, as) => ({ rule: Je(ds), index: as })),
            });
          }
          is.styleIds.push(ss);
        }
        0 < ns.length && (is.styles = ns), this.adoptedStyleSheetCb(is);
      }
    }
    reset() {
      this.styleMirror.reset(), (this.trackedLinkElements = new WeakSet());
    }
    trackStylesheetInLinkElement(es) {}
  }
  function G$1(Et) {
    return Object.assign(Object.assign({}, Et), { timestamp: Date.now() });
  }
  let W$2,
    xe,
    He,
    We = !1;
  const ne = Vt();
  function se$1(Et = {}) {
    const {
        emit: es,
        checkoutEveryNms: ts,
        checkoutEveryNth: is,
        blockClass: ns = "rr-block",
        blockSelector: rs = null,
        ignoreClass: ss = "rr-ignore",
        maskTextClass: os = "rr-mask",
        maskTextSelector: ds = null,
        inlineStylesheet: as = !0,
        maskAllInputs: cs,
        maskInputOptions: fs,
        slimDOMOptions: us,
        maskInputFn: ls,
        maskTextFn: hs,
        hooks: gs,
        packFn: ps,
        sampling: ms = {},
        dataURLOptions: Es = {},
        mousemoveWait: $s,
        recordCanvas: Cs = !1,
        recordCrossOriginIframes: ys = !1,
        userTriggeredOnInput: bs = !1,
        collectFonts: Ss = !1,
        inlineImages: vs = !1,
        plugins: ws,
        keepIframeSrcFn: Ts = () => !1,
        ignoreCSSAttributes: Ds = new Set([]),
      } = Et,
      Ns = !ys || window.parent === window;
    let Rs = !1;
    if (!Ns)
      try {
        window.parent.document, (Rs = !1);
      } catch (_s) {
        Rs = !0;
      }
    if (Ns && !es) throw new Error("emit function is required");
    $s !== void 0 && ms.mousemove === void 0 && (ms.mousemove = $s), ne.reset();
    const Bs =
        cs === !0
          ? {
              color: !0,
              date: !0,
              "datetime-local": !0,
              email: !0,
              month: !0,
              number: !0,
              range: !0,
              search: !0,
              tel: !0,
              text: !0,
              time: !0,
              url: !0,
              week: !0,
              textarea: !0,
              select: !0,
              password: !0,
            }
          : fs !== void 0
          ? fs
          : { password: !0 },
      Ms =
        us === !0 || us === "all"
          ? {
              script: !0,
              comment: !0,
              headFavicon: !0,
              headWhitespace: !0,
              headMetaSocial: !0,
              headMetaRobots: !0,
              headMetaHttpEquiv: !0,
              headMetaVerification: !0,
              headMetaAuthorship: us === "all",
              headMetaDescKeywords: us === "all",
            }
          : us || {};
    hr();
    let Ps,
      Gs = 0;
    const Ks = (_s) => {
        for (const As of ws || [])
          As.eventProcessor && (_s = As.eventProcessor(_s));
        return (_s = ps ? ps(_s) : _s);
      },
      Hs =
        ((W$2 = (_s, As) => {
          var ks;
          if (
            ((ks = ue$2[0]) == null ||
              !ks.isFrozen() ||
              _s.type === k$2.FullSnapshot ||
              (_s.type === k$2.IncrementalSnapshot &&
                _s.data.source === w$5.Mutation) ||
              ue$2.forEach((xs) => xs.unfreeze()),
            Ns)
          )
            es != null && es(Ks(_s), As);
          else if (Rs) {
            const xs = { type: "rrweb", event: Ks(_s), isCheckout: As };
            window.parent.postMessage(xs, "*");
          }
          if (_s.type === k$2.FullSnapshot) (Ps = _s), (Gs = 0);
          else if (
            _s.type === k$2.IncrementalSnapshot &&
            (_s.data.source !== w$5.Mutation || !_s.data.isAttachIframe)
          ) {
            Gs++;
            const xs = is && Gs >= is,
              Is = ts && _s.timestamp - Ps.timestamp > ts;
            (xs || Is) && xe(!0);
          }
        }),
        (_s) => {
          W$2(
            G$1({
              type: k$2.IncrementalSnapshot,
              data: Object.assign({ source: w$5.Mutation }, _s),
            })
          );
        }),
      Fs = (_s) =>
        W$2(
          G$1({
            type: k$2.IncrementalSnapshot,
            data: Object.assign({ source: w$5.Scroll }, _s),
          })
        ),
      Us = (_s) =>
        W$2(
          G$1({
            type: k$2.IncrementalSnapshot,
            data: Object.assign({ source: w$5.CanvasMutation }, _s),
          })
        ),
      Os = new Pr({
        mutationCb: Hs,
        adoptedStyleSheetCb: (_s) =>
          W$2(
            G$1({
              type: k$2.IncrementalSnapshot,
              data: Object.assign({ source: w$5.AdoptedStyleSheet }, _s),
            })
          ),
      }),
      Ls = new Nr({
        mirror: ne,
        mutationCb: Hs,
        stylesheetManager: Os,
        recordCrossOriginIframes: ys,
        wrappedEmit: W$2,
      });
    for (const _s of ws || [])
      _s.getMirror &&
        _s.getMirror({
          nodeMirror: ne,
          crossOriginIframeMirror: Ls.crossOriginIframeMirror,
          crossOriginIframeStyleMirror: Ls.crossOriginIframeStyleMirror,
        });
    He = new Jr({
      recordCanvas: Cs,
      mutationCb: Us,
      win: window,
      blockClass: ns,
      blockSelector: rs,
      mirror: ne,
      sampling: ms.canvas,
      dataURLOptions: Es,
    });
    const zs = new Tr({
      mutationCb: Hs,
      scrollCb: Fs,
      bypassOptions: {
        blockClass: ns,
        blockSelector: rs,
        maskTextClass: os,
        maskTextSelector: ds,
        inlineStylesheet: as,
        maskInputOptions: Bs,
        dataURLOptions: Es,
        maskTextFn: hs,
        maskInputFn: ls,
        recordCanvas: Cs,
        inlineImages: vs,
        sampling: ms,
        slimDOMOptions: Ms,
        iframeManager: Ls,
        stylesheetManager: Os,
        canvasManager: He,
        keepIframeSrcFn: Ts,
      },
      mirror: ne,
    });
    xe = (As = !1) => {
      W$2(
        G$1({
          type: k$2.Meta,
          data: { href: window.location.href, width: rt(), height: tt() },
        }),
        As
      ),
        Os.reset(),
        ue$2.forEach((ks) => ks.lock());
      var As = cr(document, {
        mirror: ne,
        blockClass: ns,
        blockSelector: rs,
        maskTextClass: os,
        maskTextSelector: ds,
        inlineStylesheet: as,
        maskAllInputs: Bs,
        maskTextFn: hs,
        slimDOM: Ms,
        dataURLOptions: Es,
        recordCanvas: Cs,
        inlineImages: vs,
        onSerialize: (ks) => {
          it(ks, ne) && Ls.addIframe(ks),
            at(ks, ne) && Os.trackLinkElement(ks),
            st(ks) && zs.addShadowRoot(ks.shadowRoot, document);
        },
        onIframeLoad: (ks, xs) => {
          Ls.attachIframe(ks, xs), zs.observeAttachShadow(ks);
        },
        onStylesheetLoad: (ks, xs) => {
          Os.attachLinkElement(ks, xs);
        },
        keepIframeSrcFn: Ts,
      });
      if (!As) return console.warn("Failed to snapshot the document");
      W$2(
        G$1({
          type: k$2.FullSnapshot,
          data: {
            node: As,
            initialOffset: {
              left:
                window.pageXOffset !== void 0
                  ? window.pageXOffset
                  : (document == null
                      ? void 0
                      : document.documentElement.scrollLeft) ||
                    ((As =
                      (As = document == null ? void 0 : document.body) == null
                        ? void 0
                        : As.parentElement) == null
                      ? void 0
                      : As.scrollLeft) ||
                    ((As = document == null ? void 0 : document.body) == null
                      ? void 0
                      : As.scrollLeft) ||
                    0,
              top:
                window.pageYOffset !== void 0
                  ? window.pageYOffset
                  : (document == null
                      ? void 0
                      : document.documentElement.scrollTop) ||
                    ((As =
                      (As = document == null ? void 0 : document.body) == null
                        ? void 0
                        : As.parentElement) == null
                      ? void 0
                      : As.scrollTop) ||
                    ((As = document == null ? void 0 : document.body) == null
                      ? void 0
                      : As.scrollTop) ||
                    0,
            },
          },
        })
      ),
        ue$2.forEach((ks) => ks.unlock()),
        document.adoptedStyleSheets &&
          0 < document.adoptedStyleSheets.length &&
          Os.adoptStyleSheets(document.adoptedStyleSheets, ne.getId(document));
    };
    try {
      const _s = [],
        As =
          (_s.push(
            P$4("DOMContentLoaded", () => {
              W$2(G$1({ type: k$2.DomContentLoaded, data: {} }));
            })
          ),
          (xs) =>
            Rr(
              {
                mutationCb: Hs,
                mousemoveCb: (Is, qs) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: { source: qs, positions: Is },
                    })
                  ),
                mouseInteractionCb: (Is) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.MouseInteraction }, Is),
                    })
                  ),
                scrollCb: Fs,
                viewportResizeCb: (Is) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.ViewportResize }, Is),
                    })
                  ),
                inputCb: (Is) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.Input }, Is),
                    })
                  ),
                mediaInteractionCb: (Is) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.MediaInteraction }, Is),
                    })
                  ),
                styleSheetRuleCb: (Is) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.StyleSheetRule }, Is),
                    })
                  ),
                styleDeclarationCb: (Is) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.StyleDeclaration }, Is),
                    })
                  ),
                canvasMutationCb: Us,
                fontCb: (Is) =>
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.Font }, Is),
                    })
                  ),
                selectionCb: (Is) => {
                  W$2(
                    G$1({
                      type: k$2.IncrementalSnapshot,
                      data: Object.assign({ source: w$5.Selection }, Is),
                    })
                  );
                },
                blockClass: ns,
                ignoreClass: ss,
                maskTextClass: os,
                maskTextSelector: ds,
                maskInputOptions: Bs,
                inlineStylesheet: as,
                sampling: ms,
                recordCanvas: Cs,
                inlineImages: vs,
                userTriggeredOnInput: bs,
                collectFonts: Ss,
                doc: xs,
                maskInputFn: ls,
                maskTextFn: hs,
                keepIframeSrcFn: Ts,
                blockSelector: rs,
                slimDOMOptions: Ms,
                dataURLOptions: Es,
                mirror: ne,
                iframeManager: Ls,
                stylesheetManager: Os,
                shadowDomManager: zs,
                canvasManager: He,
                ignoreCSSAttributes: Ds,
                plugins:
                  ((xs =
                    ws == null ? void 0 : ws.filter((Is) => Is.observer)) ==
                  null
                    ? void 0
                    : xs.map((Is) => ({
                        observer: Is.observer,
                        options: Is.options,
                        callback: (qs) =>
                          W$2(
                            G$1({
                              type: k$2.Plugin,
                              data: { plugin: Is.name, payload: qs },
                            })
                          ),
                      }))) || [],
              },
              gs
            )),
        ks =
          (Ls.addLoadListener((xs) => {
            _s.push(As(xs.contentDocument));
          }),
          () => {
            xe(), _s.push(As(document)), (We = !0);
          });
      return (
        document.readyState === "interactive" ||
        document.readyState === "complete"
          ? ks()
          : _s.push(
              P$4(
                "load",
                () => {
                  W$2(G$1({ type: k$2.Load, data: {} })), ks();
                },
                window
              )
            ),
        () => {
          _s.forEach((xs) => xs()), (We = !1);
        }
      );
    } catch (_s) {
      console.warn(_s);
    }
  }
  function Qr(Et) {
    return (
      (Et = JSON.stringify(Et)),
      (Et = $r.gzip(Et, { level: 9 })),
      btoa(
        new Uint8Array(Et).reduce(function (es, ts) {
          return es + String.fromCharCode(ts);
        }, "")
      )
    );
  }
  (se$1.addCustomEvent = (Et, es) => {
    if (!We) throw new Error("please add custom event after start recording");
    W$2(G$1({ type: k$2.Custom, data: { tag: Et, payload: es } }));
  }),
    (se$1.freezePage = () => {
      ue$2.forEach((Et) => Et.freeze());
    }),
    (se$1.takeFullSnapshot = (Et) => {
      if (!We)
        throw new Error("please take full snapshot after start recording");
      xe(Et);
    }),
    (se$1.mirror = ne);
  let Ye = !1;
  function Ft(ts, is) {
    var { data: ts, url: is, sectionInfo: ns } = jr(ts, be, is);
    (ns && ns.isRestSID === void 0) || (ns && ns.isRestSID === !1)
      ? ((Ye = !1),
        fetch(is, { method: "POST", body: ts })
          .then((rs) => {
            rs.ok ? (he$1 = []) : ce++, (Ae = !1), (ce = 0);
          })
          .catch((rs) => {
            (Ae = !1), ce++;
          }))
      : ((Ae = !1), (ce = 0), (Ye = !0));
  }
  function Xr(Et) {
    return new Blob([Et]).size;
  }
  function jr(Et, es, ts) {
    if (Ye === !0) {
      const ss = Et.findIndex(
        (os) =>
          os.type === 4 && os.data && os.data.href === window.location.href
      );
      -1 < ss && Et.splice(0, ss);
    }
    le$2 === 0 && (le$2 = 1e3 * Et[0].timestamp);
    var is,
      ns = new FormData(),
      rs =
        (ns.append("di", JSON.stringify(getDeviceInfo())),
        bonreeRUM.getSession());
    if (
      (ns.append("s", rs.sessionID),
      ns.append("v", (bonreeRUM && bonreeRUM.version) || "1.0.0"),
      ns.append("mt", String(now())),
      ns.append("cmt", String(ts.initTime)),
      ns.append(
        "ai",
        JSON.stringify({
          ai: ts.appId,
          av: ts.appVersion || "unknown",
          an: ts.appName || "unknown",
          at: 4,
        })
      ),
      ts.dataFusionInfo == "net" &&
        ns.append("dfi", JSON.stringify({ net: "net" })),
      le$2 === 0 && (le$2 = 1e3 * Et[0].timestamp),
      ns.append("st", le$2),
      isDefined(window.bonreeRUM) || !isDefined(window.bonreeRUM.getUserInfo))
    )
      return (
        Object.getOwnPropertyNames(bonreeRUM.getUserInfo()).length !== 0 &&
          ns.append(
            "ui",
            JSON.stringify(Object.entries(bonreeRUM.getUserInfo())[0][1])
          ),
        (is = 1e3 * Et[Et.length - 1].timestamp - le$2),
        ns.append("ud", is),
        (le$2 = 1e3 * Et[Et.length - 1].timestamp),
        ns.append("wev", "2.0.0-alpha.8"),
        (is = new Blob([JSON.stringify({ wsd: Qr(Et) })], {
          type: "application/json",
        })),
        ns.append("event", is),
        {
          data: ns,
          url:
            es +
            "?a=" +
            ts.appId +
            "&brkey=" +
            uuid() +
            "&d=" +
            getDeviceInfo().di +
            "&v=2024083001",
          sectionInfo: rs,
        }
      );
    log("C154");
  }
  function qr(Et) {
    if (
      window.fetch &&
      !Ae &&
      !isDefined(window.stopBonreeRecordUpload) &&
      ve.length !== 0
    ) {
      Ae = !0;
      let is = 0;
      for (3 <= ce && ((he$1 = []), (ce = 0)); 0 < ve.length && ce === 0; ) {
        var es = ve.shift(),
          ts = Xr(JSON.stringify(es));
        is + ts > Gt && (Ft(he$1, Et), (is = 0)), he$1.push(es), (is += ts);
      }
      0 < he$1.length && Ft(he$1, Et);
    }
  }
  function BonreeRecord(Et) {
    (u$1.BonreeRecordState = !0),
      (ts = Et.RecordConfiguration || Et.mc) instanceof Array &&
        ts.forEach(function (ns) {
          ns.n === "sessionreplay" && (es = ns);
        });
    var es,
      ts = es || ts;
    if (isDefined(ts)) {
      var is = function (ns) {
        return !(ns < Math.floor(100 * Math.random()));
      };
      if (
        (isDefined(ts) && isDefined(ts.Rate) && is(ts.Rate)) ||
        (isDefined(ts) && isDefined(ts.c) && is(ts.c))
      )
        return (
          (be =
            window.location.protocol === "https:"
              ? ts.UploadHttps || (ts.src && ts.src.uas)
              : ts.UploadHttp || (ts.src && ts.src.ua)),
          isDefined((window.$bonreeReplayUrl = be)) &&
            window === window.top &&
            setInterval(
              qr,
              1e3 * (ts.UploadCycle || (ts.src && ts.src.uc)),
              Et
            ),
          (is = {
            emit: function (ns) {
              window === window.top && ve.push(ns);
            },
            maskAllInputs: !0,
            recordCanvas: !0,
            sampling: { canvas: 5 },
            dataURLOptions: { type: "image/webp", quality: 0.3 },
            recordCrossOriginIframes: !0,
            maskTextSelector: "body",
            maskTextFn: function (ns) {
              var rs;
              return ns.indexOf(`
`) === -1
                ? "*".repeat(ns.length)
                : ((rs = ns.trim()), ns.replace(rs, "*".repeat(rs.length)));
            },
          }),
          (Et = {
            emit: function (ns) {
              window === window.top && ve.push(ns);
            },
            maskAllInputs: !0,
            recordCanvas: !0,
            recordCrossOriginIframes: !0,
            sampling: { canvas: 5 },
            dataURLOptions: { type: "image/webp", quality: 0.3 },
          }),
          ts.src && ts.src.sl !== void 0
            ? ts.src.sl === 1
              ? se$1(is)
              : se$1(Et)
            : ts.Sensitivity !== void 0
            ? ts.Sensitivity === 1
              ? se$1(is)
              : se$1(Et)
            : void 0
        );
    }
  }
  BonreeRecord.takeFullSnapshot = se$1.takeFullSnapshot;
  let D$4 = class {
      constructor() {
        (this.firstDayEnd = 0), (this.isFirstDay = !1);
      }
      getTodayEnd() {
        var ts = new Date(),
          Et = ts.getFullYear(),
          es = ts.getMonth(),
          ts = ts.getDate();
        return +new Date(Et, es, ts + 1);
      }
      unserialize(Et) {
        try {
          return JSON.parse(Et);
        } catch (es) {
          return Et;
        }
      }
      updateFirstDay(Et) {
        var es = this.unserialize(getLocaStore(GC.FIRST_DAY));
        return (
          es && isRightTimestamp(es)
            ? ((this.firstDayEnd = es),
              (this.isFirstDay = Et <= this.firstDayEnd))
            : ((this.firstDayEnd = this.getTodayEnd()),
              (this.isFirstDay = !0),
              setLocalStore(GC.FIRST_DAY, this.firstDayEnd)),
          this.isFirstDay
        );
      }
      getIsFirstDay(Et) {
        return this.updateFirstDay(Et);
      }
    },
    y$2 = new D$4();
  function m$6() {
    function Et() {
      for (var rs = 0; rs < is.length; rs++) is[rs]();
    }
    var es = !(!window.attachEvent || window.opera),
      ts = /webkit\/(\d+)/i.test(navigator.userAgent) && RegExp.$1 < 525,
      is = [],
      ns = document;
    ns.ready = function (rs) {
      if (!es && !ts && ns.addEventListener)
        return ns.readyState === "complete" || ns.readyState === "interactive"
          ? rs()
          : ns.addEventListener("DOMContentLoaded", rs, !1);
      var ss;
      1 < is.push(rs) ||
        (es
          ? (function () {
              try {
                ns.documentElement.doScroll("left"), Et();
              } catch (os) {
                setTimeout(arguments.callee, 0);
              }
            })()
          : ts &&
            (ss = setInterval(function () {
              /^(loaded|complete)$/.test(ns.readyState) &&
                (clearInterval(ss), Et());
            }, 0)));
    };
  }
  function D$3() {
    return (
      !/BonreeRUM=0/.test(window.location.search) ||
      (E$6.checkProbability(0), 0)
    );
  }
  function h$b() {
    v$a([GC.PAGE_READY, GC.PAGE_LOAD], (Et) => {
      Et.t === GC.PAGE_READY ? u$1.changeState(1) : u$1.changeState(2);
    });
  }
  function I$5() {
    document &&
      (u$1.setData(GC.TITLE, document.title),
      u$1.setEviData("n", document.URL),
      document.title != "" && u$1.setEviData("vt", document.title),
      document.referrer) &&
      u$1.setEviData("ru", document.referrer);
  }
  function w$4() {
    function Et(es) {
      (es = es.data), isDefined(es.bonreeID) && S$4(es.bonreeID);
    }
    try {
      if (
        (window.addEventListener
          ? window.addEventListener("message", Et, !1)
          : window.attachEvent("onmessage", Et),
        window.parent)
      ) {
        let es = window.parent.document.querySelectorAll("iframe"),
          ts = !1;
        forEach(es, function (is) {
          !ts &&
            isDefined(is.getAttribute("bonreeid")) &&
            (S$4(is.getAttribute("bonreeid")), (ts = !0));
        });
      }
    } catch (es) {}
  }
  function A$6() {
    if ((w$4(), !D$3())) return log("C106", !0), !1;
    m$6(),
      h$b(),
      document &&
        (v$8(),
        v$a([GC.PAGE_LOAD], () => {
          I$5();
        })),
      isDefined(window) &&
        (window.setJsBridge = function (ts) {
          window.bonreePrivateInterface = ts;
        });
    try {
      var Et = document.querySelector("#BonreeAgent");
      if (!isDefined(Et)) return !1;
      var es = Et.getAttribute("data");
      if (
        !isJSON(
          (es = window.decodeURIComponent && window.decodeURIComponent(es))
        )
      )
        return log("C102", !0), !1;
      if (
        (isDefined((es = JSON.parse(es)).appId) || log("C101", !0),
        isDefined(window.getIsRunWithNetClient) && (es.dataFusionInfo = "net"),
        isDefined(window.bonreeRUM)
          ? window.bonreeRUM.config(es, !1, 1)
          : E$6.setConfig(es),
        (E$6.sett.initTime = now()),
        E$6.sett.probability)
      )
        return !0;
      log("C103", !0);
    } catch (ts) {
      return log("C102", !0), !1;
    }
    return !0;
  }
  class Protocol {
    constructor() {
      this.json = { v: (bonreeRUM && bonreeRUM.version) || "1.0.0", e: [] };
    }
  }
  (Protocol.prototype.setMonitorTime = function (Et) {
    return (this.json.mt = Et), this;
  }),
    (Protocol.prototype.setConfigTime = function (Et) {
      return (this.json.cmt = Et), this;
    }),
    (Protocol.prototype.setSessionId = function (Et) {
      return (this.json.s = Et), this;
    }),
    (Protocol.prototype.setDeviceInfo = function (Et) {
      return (this.json.di = Et), this;
    }),
    (Protocol.prototype.setAppInfo = function (Et) {
      return (this.json.ai = Et), this;
    }),
    (Protocol.prototype.setFirstUserInfoIndex = function () {
      var Et = u$1.firstUserInfoSetMapKey;
      return (
        Et !== "" &&
          ((this.json.fui = Et), u$1.updateFirstUserInfoSetMapKey("")),
        this
      );
    }),
    (Protocol.prototype.setUserInfo = function (Et) {
      return (this.json.ui = Et), this;
    }),
    (Protocol.prototype.setEventViewInfo = function (Et) {
      return (this.json.evi = Et), this;
    }),
    (Protocol.prototype.setIfd = function (Et) {
      return (this.json.ifd = Et), this;
    }),
    (Protocol.prototype.setEei = function (Et) {
      return isEmpty(Et) || (this.json.eei = Et), this;
    }),
    (Protocol.prototype.setSessionDuration = function (Et) {
      return (this.json.usd = Et), this;
    }),
    (Protocol.prototype.pushEventData = function (Et) {
      var es = { k: Et.type, ent: Et.ent, sin: Et.sin, v: Et.data };
      return (
        isDefined(Et.eei) && !isEmpty(Et.eei) && (es.eei = Et.eei),
        isDefined(Et.revts) && (es.revts = Et.revts),
        this.json.e.push(es),
        this
      );
    }),
    (Protocol.prototype.build = function (Et) {
      return this.json;
    }),
    (Protocol.prototype.setDataFusionInfo = function (Et) {
      return (this.json.dfi = { net: Et }), this;
    }),
    (Protocol.prototype.setSessionStartTime = function (Et) {
      return (this.json.sst = Et), this;
    });
  const c = 3e4,
    a$2 = [];
  let p$2 = !0;
  function A$5() {
    return E$6.sett.isFirstUpload
      ? (extend(E$6.sett, { isFirstUpload: 0 }), 1)
      : 0;
  }
  function S$2(Et, es) {
    let ts = "";
    return (
      window.location.protocol === "https:"
        ? (isDefined(E$6.sett.uploadAddrHttps) &&
            (ts = E$6.sett.uploadAddrHttps),
          isDefined(E$6.secondSett.uploadAddrHttps) &&
            (ts = E$6.secondSett.uploadAddrHttps))
        : (isDefined(E$6.sett.uploadAddrHttp) && (ts = E$6.sett.uploadAddrHttp),
          isDefined(E$6.secondSett.uploadAddrHttp) &&
            (ts = E$6.secondSett.uploadAddrHttp)),
      (ts =
        (ts =
          (ts =
            (ts =
              (ts =
                (ts = (ts += "?v=2024083001") + ("&a=" + Et.ai.ai)) +
                ("&d=" + Et.di.di)) +
              ("&mt=" + Et.mt)) +
            ("&cmt=" + Et.cmt)) +
          ("&s=" + Et.s) +
          ("&brkey=" + es)) +
        ("&if=" + A$5())),
      E$6.sett.sm4Config !== void 0 &&
        /^[A-Za-z0-9_-]{1,256}$/.test(
          E$6.sett.sm4Config.identify || E$6.sett.sm4Config.identifier
        ) &&
        (ts +=
          "&BR-Encryption-Method=sm4:" +
          (E$6.sett.sm4Config.identify || E$6.sett.sm4Config.identifier)),
      isDefined(window.bonreeRUM) && window.bonreeRUM.isPrivate
        ? (ts += "&isp=1")
        : (ts += "&isp=0"),
      ts
    );
  }
  function C$2(Et, es, ts, is, ns) {
    var rs;
    if (window.XDomainRequest)
      return (
        (rs = new window.XDomainRequest()).open("POST", Et),
        (rs.timeout = c),
        (rs.onload = function () {
          ts && ts(!0);
        }),
        (rs.onerror = rs.ontimeout =
          function () {
            ts && ts(!1);
          }),
        delay(function () {
          rs.send(es);
        })
      );
    if (window.XMLHttpRequest) {
      rs = new window.XMLHttpRequest();
      try {
        (rs.$$inner = !0),
          rs.overrideMimeType("text/plain"),
          rs.open("POST", Et, !0),
          rs.setRequestHeader("brkey", ns),
          (rs.timeout = c),
          (rs.onreadystatechange = function () {
            rs.readyState === 4 && (ts && ts(rs.status === 200), h$a(rs));
          });
      } catch (ss) {}
      rs.send(es);
    }
  }
  function H$3() {
    return /\bQQ\b/i.test(navigator.userAgent);
  }
  function h$a(Et) {
    (p$2 = !0), w$3();
  }
  function y$1(Et) {
    var es;
    p$2 === !0 &&
      0 < a$2.length &&
      ((es = a$2.shift()), (p$2 = !1), C$2(es.url, es.data, Et, !0, es.uid));
  }
  function w$3(Et, es, ts, is, ns) {
    Et && es && a$2.length < 100 && a$2.push({ data: es, uid: ns, url: Et }),
      y$1(ts);
  }
  function sendUpload(Et, es, ts) {
    var is = uuid(),
      ns = S$2(Et, is);
    if (startWith(ns, "http")) {
      var rs,
        ss = E$6.sett.useXHR || E$6.secondSett.useXHR || !1;
      if (window.navigator && navigator.sendBeacon && !H$3() && ss === !1) {
        if (
          E$6.sett.sm4Config !== void 0 &&
          /^[A-Za-z0-9_-]{1,256}$/.test(
            E$6.sett.sm4Config.identify || E$6.sett.sm4Config.identifier
          )
        ) {
          try {
            isDefined(window.BonreeRecord) &&
              window.BonreeRecord.Sm4 &&
              (rs = new window.BonreeRecord.Sm4(E$6.sett.sm4Config)),
              isDefined(window.BonreeAgent) &&
                window.BonreeAgent.Sm4 &&
                (rs = new window.BonreeAgent.Sm4(E$6.sett.sm4Config));
          } catch (os) {
            return (
              log("C156"),
              (ss =
                E$6.sett.sm4Config.identify || E$6.sett.sm4Config.identifier),
              ts(
                navigator.sendBeacon(
                  ns.replace("&BR-Encryption-Method=sm4:" + ss, ""),
                  stringify(Et)
                )
              )
            );
          }
          return ts(navigator.sendBeacon(ns, rs.encrypt(stringify(Et))));
        }
        return ts(navigator.sendBeacon(ns, stringify(Et)));
      }
      if (E$6.sett.sm4Config !== void 0) {
        if (isDefined(window.BonreeRecord) && window.BonreeRecord.Sm4)
          return w$3(
            ns,
            (rs = new window.BonreeRecord.Sm4(E$6.sett.sm4Config)).encrypt(
              stringify(Et)
            ),
            ts,
            es,
            is
          );
        if (isDefined(window.BonreeAgent) && window.BonreeAgent.Sm4)
          return w$3(
            ns,
            (rs = new window.BonreeAgent.Sm4(E$6.sett.sm4Config)).encrypt(
              stringify(Et)
            ),
            ts,
            es,
            is
          );
      }
      w$3(ns, stringify(Et), ts, es, is);
    }
  }
  let S$1 = 0,
    d$6 = [];
  const ALL_DATAS = [];
  let s$3 = { WORKER: null, IDLE: 0, CAPACITY: 0, RETRY: 3 };
  const U$6 = "br-session-cache";
  function W$1() {
    var Et;
    0 < s$3.IDLE ||
      ((Et =
        Number(E$6.sett.cycleTime) || Number(E$6.secondSett.cycleTime) || 10),
      (s$3.IDLE = Et && 0 < Et && Et <= 60 ? 1e3 * Et : 1e4));
  }
  function getMaxSize() {
    var Et;
    0 < s$3.CAPACITY ||
      ((Et = Number(E$6.sett.maxSize) || Number(E$6.secondSett.maxSize) || 20),
      (s$3.CAPACITY = Et && 0 < Et && Et <= 60 ? 1024 * Et : 20480));
  }
  function x$4(Et) {
    var es = 0;
    if (Et.length !== 0)
      return (
        forEach(Et, function (ts) {
          (es === 0 || es > ts.data.ent) && (es = ts.data.ent);
        }),
        es
      );
  }
  function z$1(Et) {
    Et &&
      Et.sin &&
      (Et.sin[0] === "" &&
        u$1.lastUserInfoSetMapKey !== "" &&
        (Et.sin[0] = u$1.lastUserInfoSetMapKey),
      Et.sin[3] === "" &&
        u$1.getEeiData("key") !== "" &&
        (Et.sin[3] = u$1.getEeiData("key")),
      Et.sin[4] === "") &&
      u$1.getEviData("key") !== "" &&
      (Et.sin[4] = u$1.getEviData("key"));
  }
  function V$1() {
    v$a(GC.FLUSH_DATA, function (Et) {
      var es;
      W$1(),
        E$6.sett.osType !== 1 ||
          isDefined(s$3.WORKER) ||
          ((es = setInterval(A$4, s$3.IDLE)), s$3.changeData(es)),
        1 < u$1.state && !isDefined(s$3.WORKER)
          ? ((es = setInterval(A$4, s$3.IDLE)), s$3.changeData(es))
          : isDefined(s$3.WORKER) ||
            ((es = setInterval(A$4, s$3.IDLE)), s$3.changeData(es));
    }),
      v$a(GC.INIT_SESSION_START, function (Et) {
        S$1 = 0;
        var es = x$4(d$6);
        E$6.sett.initTime = es || now();
      });
  }
  function b$2(Et, es, ts) {
    const is = new Protocol();
    var ns = {
        ai: E$6.sett.appId || E$6.secondSett.appId,
        av: E$6.sett.appVersion || E$6.secondSett.appVersion || "unknown",
        an: E$6.sett.appName || E$6.secondSett.appName || "unknown",
        at: 4,
      },
      rs =
        (isDefined(E$6.sett.channelId) && (ns.ci = E$6.sett.channelId),
        isDefined(window.BonreeAgent) &&
        isDefined(window.BonreeAgent.getDeviceInfo)
          ? is.setDeviceInfo(window.BonreeAgent.getDeviceInfo())
          : log("C153"),
        isDefined(window.BonreeRecord) &&
        isDefined(window.BonreeRecord.getDeviceInfo)
          ? is.setDeviceInfo(window.BonreeRecord.getDeviceInfo())
          : log("C153"),
        w$9.getSession().sessionID);
    is
      .setMonitorTime(now())
      .setConfigTime(E$6.sett.initTime)
      .setSessionId(rs)
      .setAppInfo(ns)
      .setUserInfo(u$1.getUserInfo())
      .setEventViewInfo(u$1.getEviData())
      .setEei(u$1.getEeiData())
      .setIfd(y$2.getIsFirstDay(+new Date()))
      .setFirstUserInfoIndex(),
      isDefined(E$6.sett.dataFusionInfo) &&
        E$6.sett.dataFusionInfo == "net" &&
        is.setDataFusionInfo("net"),
      S$1 === 0
        ? ((S$1 = x$4(d$6)),
          is.setSessionStartTime(S$1),
          (E$6.sett.initTime = S$1),
          is.setConfigTime(E$6.sett.initTime))
        : is.setSessionStartTime(S$1);
    let ss = 0,
      os = 0;
    forEach(
      Et,
      function (ds) {
        var as = ds.ent;
        if (
          ((as < ss || ss === 0) && (ss = as),
          (as > os || os === 0) && (os = as),
          z$1(ds),
          isDefined(ds.revts))
        )
          for (var cs of ds.revts)
            cs.ent < ss && (ss = cs.ent), cs.ent > os && (os = cs.ent), z$1(cs);
        is.pushEventData(ds);
      },
      function () {
        var ds,
          as = getCookie(U$6),
          cs = (isJSON(as) && JSON.parse(as)) || [];
        for (ds of cs)
          isDefined(ds.startTime) &&
            ds.startTime == 0 &&
            ((ds.startTime = ss),
            w$9.setSessionCookie(U$6, JSON.stringify(cs)));
      }
    ),
      (rs = (E$5.usdTime && os - E$5.usdTime) || os - ss),
      (rs = Math.abs(rs)),
      E$5.changUsdTime(os),
      is.setSessionDuration(rs),
      sendUpload(is.build(), es, ts);
  }
  function J$1(Et, es, ts) {
    if (isDefined(Et) && !isEmpty(Et))
      try {
        b$2(Et, es, ts), ts && ts(!0);
      } catch (is) {
        log(is), ts && ts(!1);
      }
  }
  function G(Et, es) {
    let ts,
      is = [],
      ns = 0,
      rs = 0;
    if (ns >= s$3.RETRY) return log("C117");
    function ss(os, ds) {
      !isEmpty(is) &&
        (getMaxSize(), os || rs > s$3.CAPACITY) &&
        (J$1(is, es, function (as) {
          as
            ? 0 < ns && (ns = 0)
            : ((ns += 1),
              es ||
                delay(function () {
                  var cs = size(Et);
                  (rs += cs), is.push(Et);
                }, s$3.IDLE / 10));
        }),
        (is = []),
        (rs = 0),
        (ts = os === 1 ? ds : null));
    }
    forEach(Et, (os) => {
      var as = os.data && os.data.e;
      if ((os.data && os.data.eei && delete os.data.eei, !isDefined(as)))
        return (rs += os.size), is.push(os.data), ss.call(this);
      var ds = as[0],
        as = as[1],
        cs = os.data && os.data.p.info;
      (cs.userTime = Math.max(0, cs.timestamp - as)),
        (ts = isDefined(ts) ? ts : ds) !== ds && ss.call(this, 1, ds),
        (rs += os.size),
        is.push(os.data),
        ss.call(this);
    }),
      ss.call(this, 2);
  }
  function A$4(Et) {
    isEmpty(
      (d$6 = Et && ALL_DATAS.length ? d$6.concat(ALL_DATAS.splice(0)) : d$6)
    ) ||
      (g$6.useAPI || (w$4(), g$6.startCatchDataFun()), G(d$6, Et), (d$6 = []));
  }
  s$3.changeData = function (Et) {
    this.WORKER = Et;
  };
  var h$9 = {};
  let a$1 = class Ws {
      constructor(es, ts, is = !1, ns, rs = -1, ss = !1, os) {
        (this.isChild = is),
          isDefined(ns) && (this.startTime = ns),
          isDefined(es) &&
          isDefined(ts) &&
          typeof es == "string" &&
          typeof ts == "string" &&
          /^[a-zA-Z0-9:_-\s@./]+$/.test(ts) &&
          ts.trim() !== "" &&
          /^[a-zA-Z0-9:_-\s@./]+$/.test(es) &&
          es.trim() !== ""
            ? ((this.spanEvent = {
                n: es.slice(0, 256),
                t: ts.slice(0, 256),
                da: [],
                tag: [],
                m: [],
                ic: !0,
                st: isDefined(ns) ? 1e3 * new Date().getTime() - ns : 0,
              }),
              (this.special = ss))
            : (this.special = !0),
          is ||
            this.special ||
            ((this.spanEvent.timestamp = 1e3 * new Date().getTime()),
            (this.startTime = this.spanEvent.timestamp)),
          is
            ? ((this.identify = os),
              (h$9[this.identify] = h$9[this.identify] + 1))
            : ((this.identify = uuid()), (h$9[this.identify] = 0)),
          (this.dataSave = []),
          (this.tagSave = []),
          (this.metricSave = []),
          (this.childSave = []),
          (this.hasFinished = !1),
          (this.deep = rs + 1);
      }
      startChild(es, ts) {
        return this.hasFinished ||
          !(
            isDefined(es) &&
            isDefined(ts) &&
            typeof es == "string" &&
            typeof ts == "string" &&
            /^[a-zA-Z0-9:_-\s@./]+$/.test(ts) &&
            ts.trim() !== "" &&
            /^[a-zA-Z0-9:_-\s@./]+$/.test(es) &&
            es.trim() !== ""
          ) ||
          this.special ||
          10 <= this.deep ||
          (isDefined(this.childSave) && 50 <= this.childSave.length) ||
          (isDefined(h$9) &&
            isDefined(h$9[this.identify]) &&
            200 <= h$9[this.identify])
          ? new Ws(
              "name",
              "type",
              !0,
              this.startTime,
              this.deep,
              !0,
              this.identify
            )
          : isDefined(this.spanEvent)
          ? ((es = new Ws(
              es,
              ts,
              !0,
              this.startTime,
              this.deep,
              !1,
              this.identify
            )),
            isDefined(this.spanEvent.sub)
              ? this.spanEvent.sub.push(es.spanEvent)
              : (this.spanEvent.sub = [es.spanEvent]),
            this.childSave.push(es),
            es)
          : void 0;
      }
      setData(es, ts) {
        if (
          !this.special &&
          !this.hasFinished &&
          isDefined(es) &&
          isDefined(ts) &&
          typeof es == "string" &&
          typeof ts == "string" &&
          !(200 < es.length) &&
          /^[a-zA-Z][a-zA-Z._-]{0,199}$/.test(es) &&
          es.trim() !== "" &&
          ts.trim() !== "" &&
          !(isDefined(this.spanEvent.da) && 64 <= this.spanEvent.da.length) &&
          isDefined(this.spanEvent.da)
        )
          if (0 < this.spanEvent.da.length)
            if (isDefined(this.dataSave) && -1 < this.dataSave.indexOf(es))
              for (let is = 0; is < this.spanEvent.da.length; is++)
                isDefined(this.spanEvent.da[is].k) &&
                  this.spanEvent.da[is].k === es &&
                  ((this.spanEvent.da[is].k = es),
                  (this.spanEvent.da[is].v = ts.slice(0, 7e3)));
            else
              this.spanEvent.da.push({ k: es, v: ts.slice(0, 7e3) }),
                this.dataSave.push(es);
          else
            this.spanEvent.da.push({ k: es, v: ts.slice(0, 7e3) }),
              this.dataSave.push(es);
      }
      removeData(es) {
        if (
          !this.special &&
          !this.hasFinished &&
          isDefined(es) &&
          typeof es == "string" &&
          !(200 < es.length) &&
          /^[a-zA-Z][a-zA-Z._-]{0,199}$/.test(es) &&
          es.trim() !== "" &&
          isDefined(this.dataSave) &&
          -1 < this.dataSave.indexOf(es)
        )
          for (let is = 0; is < this.spanEvent.da.length; is++) {
            var ts;
            isDefined(this.spanEvent.da[is].k) &&
              this.spanEvent.da[is].k === es &&
              (this.spanEvent.da.splice(is, 1),
              (ts = this.dataSave.indexOf(es)),
              this.dataSave.splice(ts, 1));
          }
      }
      setTag(es, ts) {
        if (
          !this.special &&
          !this.hasFinished &&
          isDefined(es) &&
          isDefined(ts) &&
          typeof es == "string" &&
          typeof ts == "string" &&
          !(200 < es.length) &&
          /^[a-zA-Z][a-zA-Z._-]{0,199}$/.test(es) &&
          es.trim() !== "" &&
          ts.trim() !== "" &&
          !(isDefined(this.spanEvent.tag) && 64 <= this.spanEvent.tag.length) &&
          isDefined(this.spanEvent.tag)
        )
          if (0 < this.spanEvent.tag.length)
            if (isDefined(this.tagSave) && -1 < this.tagSave.indexOf(es))
              for (let is = 0; is < this.spanEvent.tag.length; is++)
                isDefined(this.spanEvent.tag[is].k) &&
                  this.spanEvent.tag[is].k === es &&
                  ((this.spanEvent.tag[is].k = es),
                  (this.spanEvent.tag[is].v = ts.slice(0, 7e3)));
            else
              this.spanEvent.tag.push({ k: es, v: ts.slice(0, 7e3) }),
                this.tagSave.push(es);
          else
            this.spanEvent.tag.push({ k: es, v: ts.slice(0, 7e3) }),
              this.tagSave.push(es);
      }
      removeTag(es) {
        if (
          !this.special &&
          !this.hasFinished &&
          isDefined(es) &&
          typeof es == "string" &&
          !(200 < es.length) &&
          /^[a-zA-Z][a-zA-Z._-]{0,199}$/.test(es) &&
          es.trim() !== "" &&
          isDefined(this.tagSave) &&
          -1 < this.tagSave.indexOf(es)
        )
          for (let is = 0; is < this.spanEvent.tag.length; is++) {
            var ts;
            isDefined(this.spanEvent.tag[is].k) &&
              this.spanEvent.tag[is].k === es &&
              (this.spanEvent.tag.splice(is, 1),
              (ts = this.tagSave.indexOf(es)),
              this.tagSave.splice(ts, 1));
          }
      }
      setMetric(es, ts, is) {
        if (
          !this.special &&
          !this.hasFinished &&
          isDefined(es) &&
          isDefined(ts) &&
          typeof ts == "number" &&
          typeof es == "string" &&
          !(200 < es.length) &&
          /^[a-zA-Z][a-zA-Z._-]{0,199}$/.test(es) &&
          es.trim() !== "" &&
          !(isDefined(this.spanEvent.m) && 64 <= this.spanEvent.m.length) &&
          isDefined(this.spanEvent.m)
        )
          if (0 < this.spanEvent.m.length)
            if (isDefined(this.metricSave) && -1 < this.metricSave.indexOf(es))
              for (let ns = 0; ns < this.spanEvent.m.length; ns++)
                isDefined(this.spanEvent.m[ns].k) &&
                  this.spanEvent.m[ns].k === es &&
                  ((this.spanEvent.m[ns].k = es),
                  (this.spanEvent.m[ns].v = Math.round(ts)),
                  isDefined(is) &&
                  typeof is == "string" &&
                  is.length <= 256 &&
                  /^[a-zA-Z0-9:_-\s@./]+$/.test(is) &&
                  is.trim() !== ""
                    ? (this.spanEvent.m[ns].u = is)
                    : delete this.spanEvent.m[ns].u);
            else
              isDefined(is) &&
              typeof is == "string" &&
              is.length <= 256 &&
              /^[a-zA-Z0-9:_-\s@./]+$/.test(is) &&
              is.trim() !== ""
                ? this.spanEvent.m.push({ k: es, v: Math.round(ts), u: is })
                : this.spanEvent.m.push({ k: es, v: Math.round(ts) }),
                this.metricSave.push(es);
          else
            isDefined(is) &&
            typeof is == "string" &&
            is.length <= 256 &&
            /^[a-zA-Z0-9:_-\s@./]+$/.test(is) &&
            is.trim() !== ""
              ? this.spanEvent.m.push({ k: es, v: Math.round(ts), u: is })
              : this.spanEvent.m.push({ k: es, v: Math.round(ts) }),
              this.metricSave.push(es);
      }
      removeMetric(es) {
        if (
          !this.special &&
          !this.hasFinished &&
          isDefined(es) &&
          typeof es == "string" &&
          !(200 < es.length) &&
          /^[a-zA-Z][a-zA-Z._-]{0,199}$/.test(es) &&
          es.trim() !== "" &&
          isDefined(this.metricSave) &&
          -1 < this.metricSave.indexOf(es)
        )
          for (let is = 0; is < this.spanEvent.m.length; is++) {
            var ts;
            isDefined(this.spanEvent.m[is].k) &&
              this.spanEvent.m[is].k === es &&
              (this.spanEvent.m.splice(is, 1),
              (ts = this.metricSave.indexOf(es)),
              this.metricSave.splice(ts, 1));
          }
      }
      setDuration(es) {
        this.special ||
          this.hasFinished ||
          !isDefined(es) ||
          typeof es != "number" ||
          (this.spanEvent.du = Math.round(es));
      }
      setStatus(es) {
        this.special ||
          this.hasFinished ||
          !isDefined(es) ||
          typeof es != "number" ||
          (es !== 0 && es !== 1 && es !== 2) ||
          (this.spanEvent.sta = es);
      }
      setStatusCode(es) {
        this.special ||
          this.hasFinished ||
          !isDefined(es) ||
          typeof es != "string" ||
          7e3 < es.length ||
          es.trim() === "" ||
          (this.spanEvent.stac = es);
      }
      finish(es) {
        if (
          !this.special &&
          !this.hasFinished &&
          ((!isDefined(es) && typeof es != "number") ||
            (es !== 0 && es !== 1 && es !== 2) ||
            (this.spanEvent.sta = es),
          (this.hasFinished = !0),
          isDefined(this.spanEvent.da) &&
            this.spanEvent.da.length === 0 &&
            delete this.spanEvent.da,
          isDefined(this.spanEvent.tag) &&
            this.spanEvent.tag.length === 0 &&
            delete this.spanEvent.tag,
          isDefined(this.spanEvent.m) &&
            this.spanEvent.m.length === 0 &&
            delete this.spanEvent.m,
          isDefined(this.spanEvent.du) ||
            (this.spanEvent.du =
              1e3 * new Date().getTime() - this.startTime - this.spanEvent.st),
          isDefined(this.spanEvent.sta) || (this.spanEvent.sta = 1),
          isDefined(this.spanEvent.st)) &&
          isDefined(this.spanEvent.n) &&
          isDefined(this.spanEvent.t) &&
          isDefined(this.spanEvent.ic)
        ) {
          if (isDefined(this.childSave) && 0 < this.childSave.length)
            for (let ts = 0; ts < this.childSave.length; ts++)
              this.childSave[ts].finish();
          this.isChild ||
            (isDefined(h$9) &&
              isDefined(h$9[this.identify]) &&
              delete h$9[this.identify],
            c$5({ t: GC.SPAN_DATA, p: { info: this.spanEvent } }));
        }
      }
    },
    T$4 = class {
      constructor() {
        (this.varObj = {}), (this.localObj = {}), (this.pushData = {});
      }
      objDeal(Et) {
        let es = 0;
        for (const is in Et) {
          var ts;
          es >= GC.LIMIT_64 && delete Et[is],
            (es += 1),
            Object.hasOwnProperty.call(Et, is) &&
              ((ts = Et[is]),
              (isString(is) &&
                GC.ATT_REG.test(is) &&
                !(is.length > GC.LIMIT_256) &&
                isDefined(ts) &&
                typeof ts != "object") ||
                (delete Et[is], --es),
              isDefined(ts)) &&
              typeof ts == "string" &&
              ts.length > GC.LIMIT_512 &&
              (Et[is] = set_length(ts, GC.LIMIT_512));
        }
        return Et;
      }
      addWithObj(Et, es) {
        for (const ts in Et)
          Object.hasOwnProperty.call(Et, ts) &&
            (ts == null ||
              /^\s{0,}$/.test(ts) ||
              typeof ts == "number" ||
              typeof ts == "boolean") &&
            delete Et[ts];
        (typeof this.varObj == "object" &&
          64 <= Object.keys(this.varObj).length) ||
          (es
            ? ((es = getLocaStore(GC.BR_ATTRIBUTE) || "{}"),
              (this.localObj = Object.assign(
                {},
                JSON.parse(es),
                this.objDeal(Et)
              )),
              setLocalStore(GC.BR_ATTRIBUTE, JSON.stringify(this.localObj)))
            : ((es = Object.assign({}, this.varObj)),
              (this.varObj = Object.assign({}, es, this.objDeal(Et)))),
          this.sendObj());
      }
      addWithKey(Et, es, ts) {
        Et == null ||
          /^\s{0,}$/.test(Et) ||
          typeof Et == "number" ||
          typeof Et == "boolean" ||
          (typeof this.varObj == "object" &&
            64 <= Object.keys(this.varObj).length) ||
          !isString(Et) ||
          !GC.ATT_REG.test(Et) ||
          Et.length > GC.LIMIT_256 ||
          !isDefined(es) ||
          typeof es == "object" ||
          ((Et = {
            [Et]: (es =
              typeof es != "number" && es.length > GC.LIMIT_512
                ? set_length(es, GC.LIMIT_512)
                : es),
          }),
          ts
            ? ((es = getLocaStore(GC.BR_ATTRIBUTE) || "{}"),
              (this.localObj = Object.assign({}, JSON.parse(es), Et)),
              setLocalStore(GC.BR_ATTRIBUTE, JSON.stringify(this.localObj)))
            : ((ts = Object.assign({}, this.varObj)),
              (this.varObj = Object.assign({}, ts, Et))),
          this.sendObj());
      }
      delWithKeys(Et) {
        let es = JSON.parse(getLocaStore(GC.BR_ATTRIBUTE) || "{}"),
          ts = this.varObj;
        isArray(Et) &&
          forEach(Et, function (is) {
            delete es[is], delete ts[is];
          }),
          (this.localObj = Object.assign({}, es)),
          setLocalStore(GC.BR_ATTRIBUTE, JSON.stringify(this.localObj)),
          (this.varObj = Object.assign({}, ts)),
          this.sendObj();
      }
      delAll() {
        c$5({ t: GC.FLUSH_DATA, p: !1 }),
          (this.localObj = {}),
          setLocalStore(GC.BR_ATTRIBUTE, JSON.stringify(this.localObj)),
          (this.varObj = {}),
          this.sendObj();
      }
      sendObj() {
        var Et = getLocaStore(GC.BR_ATTRIBUTE) || "{}",
          es = Object.assign({}, JSON.parse(Et), this.varObj);
        if (64 < Object.keys(es).length) {
          let ts = 0;
          for (const is in es)
            Object.hasOwnProperty.call(es, is) &&
              (64 <= ts ? delete es[is] : (ts += 1));
        }
        (this.pushData = es), u$1.setEeiData(this.pushData);
      }
    },
    g$3 = new T$4();
  class Metric {
    constructor(es, ts) {
      (this.d_type = ts),
        (this.data = es || {}),
        (this.$metric = {}),
        (ts =
          (es && es.info && es.info.timestamp && es.info.timestamp) || now()),
        (this.ent = ts);
    }
  }
  function R$1(Et, es) {
    this.$metric[Et] = es;
  }
  (Metric.prototype.info = function (Et, es = "", ts, is = !1) {
    var ns = this.data.info;
    if (isDefined(ns)) {
      let rs = ns[Et];
      isDefined(rs) || (rs = es),
        isDefined(ts) && (Et = ts),
        (is && rs === "") || (this.$metric[Et] = rs);
    }
    return this;
  }),
    (Metric.prototype.metric = function (Et, es = "", ts) {
      var is = this.data.metric;
      if (isDefined(is)) {
        let ns = is[Et];
        isDefined(ns) || (ns = isDefined(es) ? es : -1),
          isDefined(ts) && (Et = ts),
          R$1.call(this, Et, ns);
      }
      return this;
    }),
    (Metric.prototype.build = function (ss) {
      var es = u$1.getEviData("key"),
        ts = u$1.getEeiData("key"),
        is = u$1.lastUserInfoSetMapKey,
        ss = (ss && ss.ent ? ss : this).ent,
        ns = g$3.pushData,
        rs = u$1.getEviData("value"),
        ss = {
          type: this.d_type,
          ent: ss,
          data: {},
          sin: [is, "", "", ts, es],
          evi: rs,
        },
        os = (isEmpty(ns) || (ss.eei = ns), this.$metric);
      if (isDefined(this.data.ext))
        switch (this.d_type) {
          case GC.ACTION:
          case GC.NET:
          case GC.ERROR:
          case GC.ROUTE:
            break;
          case GC.PAGE:
          case GC.RESOURCE:
          case GC.WEBVIEWDATA:
          default:
            os.ext = this.data.ext;
        }
      return (ss.data = os), ss;
    });
  let h$8 = 0;
  function pushQueueData(Et, es) {
    if (isDefined(Et) && isDefined(d$6)) {
      const ts = size(Et);
      ALL_DATAS.push({ data: Et, size: ts }),
        getMaxSize(),
        h$8 + ts > s$3.CAPACITY
          ? (A$4(!0), (h$8 = 0))
          : ((h$8 += ts), d$6.push(ALL_DATAS.shift()));
    }
  }
  function k$1(Et, is) {
    var ts = is.fullCollect || is.fc,
      is = is.whiteList || is.wl;
    if (!isDefined(ts) || ts) return 1;
    if (isDefined(is)) {
      try {
        var ns = Et,
          rs = "";
        if (
          ns.indexOf("http") !== 0 &&
          ns.indexOf("file:") !== 0 &&
          ns.indexOf("ws") !== 0
        )
          return;
        rs = (
          isDefined(ns.match(/:\/\/\[([^\]]+)\]/))
            ? ns.match(/:\/\/\[([^\]]+)\]/)
            : ns.match(/:\/\/(.[^/:]+)/)
        )[1];
      } catch (as) {
        return;
      }
      (ts = isDefined(is.hostRule || is.hr)
        ? (is.hostRule || is.hr).slice(0, 20)
        : []),
        (is = isDefined(is.pathRule || is.pr)
          ? (is.pathRule || is.pr).slice(0, 20)
          : []);
      let ss = function (as, cs) {
          var fs = cs.split("*");
          return (
            !(2 < fs.length) &&
            (cs.indexOf("*") === -1
              ? cs === as
              : fs[0] !== "" && fs[1] !== ""
              ? new RegExp("(" + fs[0] + ").+(" + fs[1] + ")").test(as)
              : fs[0] == "" && fs[1] !== ""
              ? !!endWith(as, fs[1])
              : fs[0] !== "" && fs[1] == ""
              ? !!startWith(as, fs[0])
              : void 0)
          );
        },
        os = function (as, cs) {
          return (as = as.split("?")[0]), ss(as, cs);
        },
        ds = function (as, cs) {
          var fs,
            us = cs === 1 ? ss : os,
            ls = cs === 1 ? rs : ns;
          for (fs of as) if (us(ls, fs)) return !0;
          return !1;
        };
      return ds(ts, 1) || ds(is, 2);
    }
  }
  function O$3(Et) {
    var es = void 0;
    return (
      isDefined(Et.collectionStrategy)
        ? (es = Et.collectionStrategy)
        : isDefined(Et.mc) &&
          Et.mc instanceof Array &&
          Et.mc.forEach(function (ts) {
            ts.n === "network" && isDefined(ts.cs) && (es = ts.cs);
          }),
      es
    );
  }
  function A$3(Et, es, ts) {
    {
      var is = Et.mk || Et.maskKeys,
        ns = Et.mt || Et.maskType,
        Et = isDefined(is.qka || is.urlKeys) && (is.qka || is.urlKeys);
      if (is.aqk || is.allQueryKeys)
        switch (ns) {
          case 1:
            (es.p.info.url = es.p.info.url.split("?")[0]),
              isDefined(ts.reqURLKey) && (es.p.info.reqUrlDta = null);
            break;
          case 2:
            (es.p.info.url = es.p.info.url.replace(
              /(\?|&)([^=&]+)=([^&]+)/g,
              "$1$2=**"
            )),
              isDefined(ts.reqURLKey) &&
                (es.p.info.reqUrlDta = es.p.info.url.split("?")[1]);
            break;
          default:
            return;
        }
      else if (
        isDefined(Et) &&
        0 < Et.length &&
        es.p.info &&
        es.p.info.url &&
        -1 < es.p.info.url.indexOf("?")
      ) {
        var rs = es.p.info.url.split("?")[1].split("&"),
          ss = "";
        for (let ms = 0; ms < rs.length; ms++) {
          var os = rs[ms].split("=");
          switch (ns) {
            case 1:
              includes(is.qka || is.urlKeys, os[0]) || (ss += rs[ms] + "&");
              break;
            case 2:
              includes(is.qka || is.urlKeys, os[0])
                ? (ss += rs[ms].split("=")[0] + "=**&")
                : (ss += rs[ms] + "&");
          }
        }
        isDefined(ts.reqURLKey) && (es.p.info.reqUrlDta = ss.slice(0, -1)),
          ss.slice(0, -1) !== ""
            ? (es.p.info.url =
                es.p.info.url.split("?")[0] + "?" + ss.slice(0, -1))
            : (es.p.info.url = es.p.info.url.split("?")[0]);
      }
      let gs = isDefined(is.reqhka || is.requestHeadersKeys)
        ? is.reqhka || is.requestHeadersKeys
        : [];
      if (
        ((gs = gs.map(function (ms) {
          return ms.toLowerCase();
        })),
        is.areqh || is.allRequestHeaders)
      )
        switch (ns) {
          case 1:
            (es.p.info[GC.REQUEST_HEADER] = void 0), (es.p.info.reqhtData = {});
            break;
          case 2:
            isDefined(es.p.info[GC.REQUEST_HEADER]) &&
              (es.p.info[GC.REQUEST_HEADER] = es.p.info[
                GC.REQUEST_HEADER
              ].replace(/:(.*?)($|\r\n)/g, ":**$2")),
              isDefined(ts.reqHeaderTraceKey) &&
                0 < ts.reqHeaderTraceKey.length &&
                (isEmpty(es.p.info.reqhtData) ||
                  forEach(es.p.info.reqhtData, function (ms, Es) {
                    es.p.info.reqhtData[Es] = "**";
                  }));
            break;
          default:
            return;
        }
      else
        switch (ns) {
          case 1:
            if (
              isDefined(es.p.info[GC.REQUEST_HEADER]) &&
              isDefined(gs) &&
              0 < gs.length
            )
              for (var ds of gs)
                (ds = new RegExp(
                  ds +
                    `:(.*?)(\r
|$)`,
                  "i"
                )),
                  ds.test(es.p.info[GC.REQUEST_HEADER]) &&
                    (es.p.info[GC.REQUEST_HEADER] = es.p.info[
                      GC.REQUEST_HEADER
                    ].replace(ds, ""));
            if (
              isDefined(ts.reqHeaderTraceKey) &&
              0 < ts.reqHeaderTraceKey.length &&
              !isEmpty(es.p.info.reqhtData)
            ) {
              for (var as in es.p.info.reqhtData)
                if (includes(gs, as.toLowerCase())) {
                  delete es.p.info.reqhtData[as];
                  continue;
                }
            }
            break;
          case 2:
            if (
              isDefined(es.p.info[GC.REQUEST_HEADER]) &&
              isDefined(gs) &&
              0 < gs.length
            )
              for (var cs of gs)
                (cs = new RegExp(
                  cs +
                    `:(.*?)(\r
|$)`,
                  "i"
                )),
                  cs.test(es.p.info[GC.REQUEST_HEADER]) &&
                    (es.p.info[GC.REQUEST_HEADER] = es.p.info[
                      GC.REQUEST_HEADER
                    ].replace(cs, function (ms, Es) {
                      return ms.replace(Es, "**");
                    }));
            if (
              isDefined(ts.reqHeaderTraceKey) &&
              0 < ts.reqHeaderTraceKey.length &&
              !isEmpty(es.p.info.reqhtData)
            ) {
              for (var fs in es.p.info.reqhtData)
                if (includes(gs, fs.toLowerCase())) {
                  es.p.info.reqhtData[fs] = "**";
                  continue;
                }
            }
            break;
          default:
            return;
        }
      let ps = isDefined(is.reshka || is.responseHeadersKeys)
        ? is.reshka || is.responseHeadersKeys
        : [];
      if (
        ((ps = ps.map(function (ms) {
          return ms.toLowerCase();
        })),
        is.aresh || is.allResponseHeaders)
      )
        switch (ns) {
          case 1:
            isDefined(es.p.info.responseHeader) &&
              delete es.p.info.responseHeader,
              isEmpty(es.p.info.reshtData) || delete es.p.info.reshtData,
              isDefined(es.p.info.guid) && delete es.p.info.guid,
              isDefined(es.p.info.xBrResponse) && delete es.p.info.xBrResponse,
              isDefined(es.p.info.traceResponse) &&
                delete es.p.info.traceResponse;
            break;
          case 2:
            isDefined(es.p.info.responseHeader) &&
              (es.p.info.responseHeader = es.p.info.responseHeader.replace(
                /:(.*?)($|\r\n)/g,
                ":**$2"
              )),
              isEmpty(es.p.info.reshtData) ||
                forEach(es.p.info.reshtData, function (ms, Es) {
                  es.p.info.reshtData[Es] = "**";
                }),
              isDefined(es.p.info.guid) &&
                es.p.info.guid !== "" &&
                (es.p.info.guid = "**"),
              isDefined(es.p.info.xBrResponse) &&
                es.p.info.xBrResponse != "" &&
                (es.p.info.xBrResponse = "**"),
              isDefined(es.p.info.traceResponse) &&
                es.p.info.traceResponse !== "" &&
                (es.p.info.traceResponse = "**");
        }
      else
        switch (ns) {
          case 1:
            if (isDefined(es.p.info.responseHeader))
              for (var us of ps)
                (us = new RegExp(
                  us +
                    `:(.*?)(\r
|$)`,
                  "i"
                )),
                  us.test(es.p.info.responseHeader) &&
                    (es.p.info.responseHeader =
                      es.p.info.responseHeader.replace(us, ""));
            isEmpty(es.p.info.reshtData) ||
              forEach(es.p.info.reshtData, function (ms, Es) {
                includes(ps, Es.toLowerCase()) &&
                  delete es.p.info.reshtData[Es];
              }),
              isDefined(es.p.info.guid) &&
                includes(ps, "br-resp-key") &&
                delete es.p.info.guid,
              isDefined(es.p.info.xBrResponse) &&
                includes(ps, "x-br-response") &&
                delete es.p.info.xBrResponse,
              isDefined(es.p.info.traceResponse) &&
                includes(ps, "traceresponse") &&
                delete es.p.info.traceResponse;
            break;
          case 2:
            if (isDefined(es.p.info.responseHeader))
              for (var ls of ps)
                (ls = new RegExp(
                  ls +
                    `:(.*?)(\r
|$)`,
                  "i"
                )),
                  ls.test(es.p.info.responseHeader) &&
                    (es.p.info.responseHeader =
                      es.p.info.responseHeader.replace(ls, function (ms, Es) {
                        return ms.replace(Es, "**");
                      }));
            isEmpty(es.p.info.reshtData) ||
              forEach(es.p.info.reshtData, function (ms, Es) {
                includes(ps, Es.toLowerCase()) &&
                  (es.p.info.reshtData[Es] = "**");
              }),
              isDefined(es.p.info.guid) &&
                includes(ps, "br-resp-key") &&
                (es.p.info.guid = "**"),
              isDefined(es.p.info.xBrResponse) &&
                includes(ps, "x-br-response") &&
                (es.p.info.xBrResponse = "**"),
              isDefined(es.p.info.traceResponse) &&
                includes(ps, "traceresponse") &&
                (es.p.info.traceResponse = "**");
        }
    }
  }
  function d$5(Et, es) {
    if (
      isDefined(es) &&
      (isDefined(es.sensitiveNetworkRule) || isDefined(es.snr))
    ) {
      try {
        var ts,
          is = Et.p.info.url;
        if (
          is.indexOf("http") !== 0 &&
          is.indexOf("file:") !== 0 &&
          is.indexOf("ws") !== 0
        )
          return Et;
        ts = is.match(/:\/\/(.[^/:?]+)/)[1];
      } catch (ds) {
        return Et;
      }
      var ns,
        rs = es.sensitiveNetworkRule || es.snr,
        ss = function (ds) {
          if (ds.type === 1 || ds.t === 1) {
            if (!isDefined(ds.c || ds.content)) return !1;
            switch (ds.r || ds.rule) {
              case 1:
                if (ts.toLowerCase() === (ds.c || ds.content).toLowerCase())
                  return !0;
                break;
              case 2:
                if (
                  -1 <
                  ts.toLowerCase().indexOf((ds.c || ds.content).toLowerCase())
                )
                  return !0;
                break;
              case 3:
                if (
                  startWith(
                    ts.toLowerCase(),
                    (ds.c || ds.content).toLowerCase()
                  )
                )
                  return !0;
                break;
              case 4:
                if (
                  endWith(ts.toLowerCase(), (ds.c || ds.content).toLowerCase())
                )
                  return !0;
              default:
                return !1;
            }
          }
          if (ds.type === 2 || ds.t === 2)
            switch (ds.r || ds.rule) {
              case 1:
                if (is === (ds.c || ds.content)) return !0;
                break;
              case 2:
                if (-1 < is.indexOf(ds.c || ds.content)) return !0;
                break;
              case 3:
                if (startWith(is, ds.c || ds.content)) return !0;
                break;
              case 4:
                if (endWith(is, ds.c || ds.content)) return !0;
              default:
                return !1;
            }
          return !1;
        },
        os = function (ds, as) {
          switch (as) {
            case 1:
              for (var cs of ds) if (ss(cs)) return !0;
              return !1;
            case 2:
              for (var fs of ds) if (!ss(fs)) return !1;
              return !0;
            default:
              return !1;
          }
        };
      for (ns of rs)
        ns.t !== 1 && ns.type !== 1
          ? (ns.t !== 2 && ns.type !== 2) ||
            (os(ns.sa || ns.scopes, 2) && A$3(ns, Et, es))
          : os(ns.sa || ns.scopes, 1) && A$3(ns, Et, es);
    }
    return Et;
  }
  function x$3(Et) {
    let es = 0,
      ts = 0,
      is = 0,
      ns = 0,
      rs = 0,
      ss = 0,
      {
        domainLookupStart: os,
        domainLookupEnd: ds,
        connectStart: as,
        connectEnd: cs,
        responseStart: fs,
        responseEnd: us,
        secureConnectionStart: ls,
        fetchStart: hs,
        requestStart: gs,
      } = Et.p.metric;
    isDefined(os) &&
      isDefined(ds) &&
      0 < os &&
      ((ps = ds - os || -1), (es = 0 < ps ? ps : 0)),
      isDefined(as) &&
        isDefined(cs) &&
        0 < as &&
        ((ps = cs - as || -1), (ts = 0 < ps ? ps : 0)),
      isDefined(cs) &&
        isDefined(ls) &&
        0 < ls &&
        ((ps = cs - ls || -1), (is = 0 < ps ? ps : 0)),
      isDefined(fs) && 0 < fs
        ? (isDefined(gs) &&
            0 < gs &&
            ((ps = fs - gs || -1), (rs = 0 <= ps ? ps : 999)),
          isDefined(cs) &&
            0 < cs &&
            ((ps = gs - cs || -1), (ns = 0 <= ps ? ps : 999)),
          isDefined(us) && ((ps = us - fs || -1), (ss = 0 <= ps ? ps : 999)))
        : isDefined(hs) &&
          0 < hs &&
          ((ps = us - hs || -1), (ss = 0 <= ps ? ps : 999));
    var ps = isDefined(Et.p.metric) ? Et.p.metric : {};
    (ps.domianTime = es),
      (ps.connetcTime = ts),
      (ps.sslt = is),
      (ps.rti = rs),
      (ps.dti = ss),
      (ps.rt = ns);
  }
  function g$2(Et, es) {
    if (isDefined(es.reqBodyKey)) {
      let ts = "";
      if (isJSON(Et.p.info.requestBody))
        try {
          const is = new Function("", "return " + Et.p.info.requestBody)();
          forEach(es.reqBodyKey, function (ns, rs) {
            isDefined(is[ns]) && (ts += `${ns}=${escape(is[ns])}&`);
          }),
            (Et.p.info[GC.NET_CBBQ] = ts.slice(0, -1));
        } catch (is) {}
      else if (isString(Et.p.info.requestBody))
        try {
          forEach(Et.p.info.requestBody.split("&"), function (is) {
            forEach(es.reqBodyKey, function (ns, rs) {
              ns &&
                is.indexOf(ns + "=") !== -1 &&
                (ts += is.split("=")[0] + "=" + escape(is.split("=")[1]) + "&");
            });
          }),
            (Et.p.info[GC.NET_CBBQ] = ts.slice(0, -1));
        } catch (is) {}
    }
    if (isDefined(es.reqURLKey) && isString(Et.p.info.reqUrlDta))
      try {
        let ts = "";
        forEach(Et.p.info.reqUrlDta.split("&"), function (is) {
          forEach(es.reqURLKey, function (ns, rs) {
            ns &&
              is.split("=")[0] === ns &&
              (ts += is.split("=")[0] + "=" + escape(is.split("=")[1]) + "&");
          });
        }),
          (Et.p.info[GC.NET_CBQ] = ts.slice(0, -1));
      } catch (ts) {}
    else delete Et.p.info[GC.NET_CBQ];
    if (
      (isDefined(Et.p.metric) &&
        isDefined(Et.p.metric[GC.CALLBACK_END]) &&
        isDefined(Et.p.metric[GC.CALLBACK_START]) &&
        ((Et.p.metric[GC.CALLBACK_TIME] =
          Et.p.metric[GC.CALLBACK_END] - Et.p.metric[GC.CALLBACK_START]),
        (Et.p.metric[GC.CALLBACK_TIME] =
          (0 < Et.p.metric[GC.CALLBACK_TIME] &&
            1e3 * Et.p.metric[GC.CALLBACK_TIME]) ||
          0)),
      isDefined(es.reqHeaderKey) &&
        isDefined(Et.p.info) &&
        isDefined(Et.p.info[GC.REQUEST_HEADER]))
    )
      try {
        let ts = "";
        forEach(
          Et.p.info[GC.REQUEST_HEADER].split(`\r
`),
          function (is) {
            forEach(es.reqHeaderKey, function (ns) {
              isDefined(ns) &&
                ns != "" &&
                is.split(":")[0].toLowerCase() === ns.toLowerCase() &&
                (ts += is.split(":")[0] + "=" + escape(is.split(":")[1]) + "&");
            });
          }
        ),
          (Et.p.info[GC.NET_CBHQ] = ts.slice(0, -1));
      } catch (ts) {}
    return Et;
  }
  function B$3(Et) {
    var es = Et.data;
    return (
      isDefined(es.tid) && es.tid === "" && delete es.tid,
      isDefined(es.xbr) && es.xbr === "" && delete es.xbr,
      isDefined(es.trsp) && es.trsp === "" && delete es.trsp,
      isDefined(es.tpar) && es.tpar === "" && delete es.tpar,
      isDefined(es.cbhq) && es.cbhq === "" && delete es.cbhq,
      isDefined(es.cbbq) && es.cbbq === "" && delete es.cbbq,
      isDefined(es.cbq) && es.cbq === "" && delete es.cbq,
      isDefined(es.ti) && es.ti === "" && delete es.ti,
      isDefined(es.ec) &&
        200 <= es.ec &&
        es.ec < 400 &&
        (isDefined(es.ep) && delete es.ep, isDefined(es.eop)) &&
        delete es.eop,
      isDefined(es.ec) &&
        400 < es.ec &&
        es.ec <= 602 &&
        isDefined(es.eop) &&
        (es.eop = 4),
      isDefined(es.cbhq) && (es.cbhq = es.cbhq.replace("/", "%2F")),
      isDefined(es.ec) &&
        es.ec === 602 &&
        isDefined(es.ru) &&
        es.ru.indexOf("file:") === 0 &&
        ((es.ec = 200), delete es.eop, delete es.ep, delete es.em),
      Et
    );
  }
  function U$5(Et, es) {
    if (isDefined(es.reqHeaderTraceKey) && 0 < es.reqHeaderTraceKey.length) {
      let ts = {};
      isDefined(
        Et.p.info.reqhtData &&
          Object.getOwnPropertyNames(Et.p.info.reqhtData).length <= 64
      )
        ? (ts = Et.p.info.reqhtData)
        : Object.getOwnPropertyNames(Et.p.info.reqhtData)
            .slice(0, 64)
            .forEach(function (is) {
              ts[is] = Et.p.info.reqhtData[is];
            }),
        isEmpty(ts) || (Et.p.info.reqht = ts);
    }
    if (isDefined(es.respHeaderTraceKey) && 0 < es.respHeaderTraceKey.length) {
      let ts = {},
        is = 0;
      for (let ns = 0, rs = es.respHeaderTraceKey.length - 1; ns <= rs; ns++)
        is < 64 &&
          isDefined(Et.p.info.reshtData) &&
          isDefined(Et.p.info.reshtData[es.respHeaderTraceKey[ns]]) &&
          ((is += 1),
          (ts[es.respHeaderTraceKey[ns]] =
            Et.p.info.reshtData[es.respHeaderTraceKey[ns]]));
      isEmpty(ts) || (Et.p.info.resht = ts);
    }
  }
  function Q$1(Et, es, ts = !1) {
    var is = {};
    if (Et) {
      var is = JSON.parse(JSON.stringify(Et)),
        ns = O$3(es);
      if (!ts && isDefined(ns) && !k$1(is.p.info.url || "", ns)) return null;
      try {
        if (
          isDefined(window.$bonreeReplayUrl) &&
          -1 < is.p.info.url.indexOf(window.$bonreeReplayUrl)
        )
          return null;
      } catch (ss) {}
      return (
        isDefined(is.p.metric) && x$3.call(this, is),
        isDefined(is.p.metric) && x$3.call(this, is),
        isDefined(es.sensitiveNetworkRule || es.snr) && d$5.call(this, is, es),
        g$2.call(this, is, es),
        U$5.call(this, is, es),
        (ts = is.p.info),
        (ns = es.hcs),
        (es =
          (isDefined(ns) &&
            (isDefined(ts.requestHeader) || isDefined(ts.responseHeader)) &&
            (ns === 0 ||
              (ns === 1 && ts.status < 400) ||
              (ns === 1 && ts.code < 400)) &&
            (delete is.p.info.requestHeader, delete is.p.info.responseHeader),
          is && is.p.info.url && -1 < is.p.info.url.indexOf("https") ? 2 : 1)),
        (ns =
          getMineTypeByHeader(is.p.info[GC.RESPONSE_HEADER]) ||
          getMineTypeByHeader(is.p.info[GC.REQUEST_HEADER]) ||
          getMineTypeByUrl(is.p.info[GC.URL]) ||
          "text/html"),
        (ts = new Metric(is.p, GC.NET)),
        ((isDefined(ts.data.info[GC.NET_EC]) &&
          400 < ts.data.info[GC.NET_EC]) ||
          !isDefined(ts.data.info[GC.NET_EC])) &&
          isDefined(window.BRLog) &&
          window.BRLog.__sendNetInfo(ts.data.info),
        ts
          .info("id")
          .info(GC.URL, "", "ru")
          .info(GC.NET_METHOD, "", "m")
          .info(GC.NET_IP, "", "ti")
          .info(GC.NET_PORT, 0, "tp")
          .info(GC.REQUEST_HEADER, "", "rh", !0)
          .info(GC.RESPONSE_HEADER, "", "rhe", !0)
          .info(GC.NET_TID, "", "tid")
          .info(GC.NET_XBR, "", "xbr")
          .info(GC.NET_TRACE, "", "trsp")
          .info("reqht", "", "reqht", !0)
          .info("resht", "", "resht", !0)
          .info(GC.E_TYPE, "http", "ep", !0)
          .info(GC.NET_EOP, "", "eop", !0)
          .info(GC.NET_TYPE, 3, "art")
          .info(GC.PAGE_ID, "", "pvid")
          .info(GC.CUSTOM_IC, !1, "ic")
          .info(GC.NET_CBBQ, "", "cbbq")
          .info(GC.NET_CBHQ, "", "cbhq")
          .info(GC.NET_CBQ, "", "cbq")
          .info("ret", ns, "ret")
          .metric("domianTime", 0, "dt")
          .metric("connetcTime", 0, "ct")
          .metric("sslt", 0, "sslt")
          .metric("rt", 0, "rt")
          .metric("rti", 0, "rti")
          .metric("dti", 0, "dti")
          .metric(GC.DECODED_BODY_SIZE, 0, "ds")
          .metric(GC.UPLOAD_BODY_SIZE, 0, "rds")
          .metric(GC.NET_PT, es, "pt"),
        is.p && is.p.info.ai && ts.info("ai", "", "ai"),
        ((is.p && is.p.info[GC.NET_EC] == 200) ||
          (is.p && is.p[GC.STATUS] == 200)) &&
          ts.info(GC.NET_EOP, 0, "eop"),
        is.p &&
          isDefined(is.p.info[GC.NET_EC]) &&
          ts.info(GC.NET_EC, 200, "ec"),
        is.p &&
          isDefined(is.p.info[GC.STATUS]) &&
          ts.info(GC.STATUS, 200, "ec"),
        is.p &&
          is.p.info[GC.E_TYPE] === "XHR" &&
          ts.info(GC.MESSAGE, "", "em", !0),
        is.p &&
          is.p.info[GC.E_TYPE] === "FETCH" &&
          ts.info(GC.STATUS_TEXT, "", "em", !0),
        B$3(ts.build())
      );
    }
  }
  function P$3(Et) {
    var es;
    if (isDefined(Et))
      return (
        (es = new Metric(Et, GC.NET)),
        (Et = getMineTypeByUrl(Et.info[GC.URL]) || "text/html"),
        es
          .info("id")
          .info("ru")
          .info("m")
          .info("ti")
          .info("tp")
          .info("art")
          .info("pvid", "", "pvid")
          .info("ic")
          .info("ret", Et, "ret")
          .info("dt")
          .info("ct")
          .info("sslt")
          .info("rt")
          .info("rti")
          .info("dti")
          .info("ds", 0, "ds")
          .info("rds", 0, "rds")
          .info("pt")
          .info("ec", 200, "ec"),
        B$3(es.build())
      );
  }
  const d$4 = function (Et, es, ts, is, ns, rs) {
      return !(
        Et === void 0 ||
        (es == null || es === ""
          ? (v$b.log(
              ts +
                " Parameter has a value or key [" +
                Et +
                "] that does not exist!"
            ),
            rs)
          : is !== null && es.length > is
          ? (v$b.log(
              ts +
                " Parameter has a value or key [" +
                Et +
                "] that the value length exceeds " +
                es.length +
                "!"
            ),
            0)
          : !ns ||
            !isNaN(es) ||
            (v$b.log(
              ts +
                " Parameter has a value or key [" +
                Et +
                "] value is not a valid number!"
            ),
            0))
      );
    },
    E$2 = 2083,
    m$5 = 256,
    T$3 = 512,
    W = function (Et) {
      var es = {};
      if (
        Et !== void 0 &&
        Object.prototype.toString.call(Et) === "[object Object]"
      ) {
        if (64 < Object.getOwnPropertyNames(Et).length) {
          var ts,
            is = Object.getOwnPropertyNames(Et).slice(0, 64);
          for (ts in is)
            typeof is[ts] != "string" ||
              256 < is[ts].length ||
              is[ts] === "" ||
              (es[is[ts]] = Et[is[ts]]);
        } else
          for (var ns in Et)
            typeof ns != "string" ||
              256 < ns.length ||
              ns === "" ||
              (es[ns] = Et[ns]);
        return Object.getOwnPropertyNames(es).length === 0 ? void 0 : es;
      }
    };
  let O$2 = {},
    _$1 = {},
    M$2 = {},
    U$4 = {},
    A$2 = [],
    I$4 = [],
    Y = u$1.getEviData("value");
  function v$5(Et, es) {
    !isDefined(E$6.secondSett) ||
      isEmpty(E$6.secondSett) ||
      isEmpty(Et) ||
      (isDefined(Et.data.url) &&
        (Et.data.url = d$5(
          { p: { info: { url: Et.data.url } } },
          E$6.secondSett
        ).p.info.url),
      isDefined(E$6.secondSett.osType) && E$6.secondSett.osType !== GC.BROWSER
        ? es.call(
            v$b,
            stringify({ ent: Et.ent, v: Et.data, evi: Y }),
            E$6.secondSett
          )
        : pushQueueData(Et)),
      !isDefined(E$6.sett) ||
        isEmpty(E$6.sett) ||
        isEmpty(Et) ||
        (isDefined(E$6.sett.osType) && E$6.sett.osType !== GC.BROWSER
          ? es.call(v$b, stringify({ ent: Et.ent, v: Et.data }), E$6.sett)
          : pushQueueData(Et));
  }
  const ee = {
    returnShadeArea: function () {
      return S$6.checkElement();
    },
    setCustomSpeedTest: function (Et, es) {
      var ts;
      arguments.length < 1 ||
        2 < arguments.length ||
        (Et && 256 < Et.length) ||
        (Array.isArray(es) && 0 < es.length && es.length <= 1e3
          ? ((ts = {}),
            isDefined(Et) &&
              Et !== "" &&
              ((ts.oip = Et),
              (ts.sti = es),
              (Et = new Metric({ info: ts }, "speedtest"))
                .info("oip")
                .info("sti"),
              v$5(Et.build(), v$b.customSpeedTestEvent)))
          : log("C156"));
    },
    setExtraInfo: function (Et) {
      v$b.log("setExtraInfo=>" + Et);
      var es = (Et && set_64_keys(Et, 64)) || Et;
      try {
        b$4(es),
          U$9(E$6.sett.osType) || U$9(E$6.secondSett.osType)
            ? window.webkit.messageHandlers.brsWKSetExtraInfo.postMessage(
                stringify(es)
              )
            : B$6(E$6.sett.osType) || B$6(E$6.secondSett.osType)
            ? window.bonreePrivateInterface.call(
                stringify({ setExtraInfo: es })
              )
            : window.bonreePrivateInterface.setExtraInfo(stringify(es));
      } catch (ts) {}
    },
    setUserID: function (Et) {
      if (
        (v$b.log("setUserID=>" + Et),
        !d$4("userId", Et, "setUserID", m$5, !1) &&
          /^[\u4E00-\u9FFFa-zA-Z0-9:_\-@.\s/*#!]+$/.test(Et))
      )
        try {
          S$4(Et),
            U$9(E$6.sett.osType) || U$9(E$6.secondSett.osType)
              ? window.webkit.messageHandlers.brsWKSetUserId.postMessage(Et)
              : B$6(E$6.sett.osType) || B$6(E$6.secondSett.osType)
              ? window.bonreePrivateInterface.call(stringify({ setUserID: Et }))
              : window.bonreePrivateInterface.setUserID(Et);
        } catch (es) {}
    },
    setCustomEventWithLabel: function (Et, es, ts, is, ns) {
      var rs;
      arguments.length < 1 ||
        5 < arguments.length ||
        d$4("eventId", Et, "setCustomEvent", m$5, !1) ||
        (isDefined(ns) && 7e3 < JSON.stringify(ns).length) ||
        ((rs = {}),
        (es = set_length(es, m$5)),
        (is = set_length(is, 7e3)),
        (rs.eventId = isDefined(Et) ? Et : ""),
        (rs.eventName = es),
        (rs.eventParam = is),
        (rs.eventLabel = set_length(ts, 256)),
        (rs.info = W(ns)),
        (Et = new Metric({ info: rs }, GC.CUSTOM_EVENT))
          .info("eventId", "", "i")
          .info("t", 0)
          .info("d", 0),
        rs.eventName !== void 0 &&
          rs.eventName !== "" &&
          rs.eventName !== null &&
          Et.info("eventName", "", "n"),
        rs.eventLabel !== void 0 &&
          rs.eventLabel !== "unuse" &&
          rs.eventLabel !== "" &&
          rs.eventLabel !== null &&
          Et.info("eventLabel", "", "l"),
        rs.eventParam !== void 0 &&
          rs.eventParam !== "" &&
          rs.eventParam !== null &&
          Et.info("eventParam", "", "p"),
        rs.info !== void 0 &&
          rs.info instanceof Object &&
          Et.info("info", "", "info"),
        v$5(Et.build(), v$b.customEvent));
    },
    setCustomEvent: function (Et, es, ts, is) {
      this.setCustomEventWithLabel(Et, es, "unuse", ts, is);
    },
    setCustomLog: function (Et, es) {
      var ts;
      arguments.length < 1 || 2 < arguments.length
        ? v$b.log("setcustomlog custom log parameter number error")
        : d$4("logInfo", Et, "setCustomLog", null, !1) ||
          ((ts = {}),
          (Et = (isDefined(Et) && set_length(Et, 1e4)) || ""),
          (es = isDefined(es) ? set_length(es, 1e4) : es),
          (ts.logInfo = Et),
          (ts.logParam = es),
          (Et = new Metric({ info: ts }, GC.CUSTOM_LOG)).info(
            "logInfo",
            "",
            "i"
          ),
          ts.logParam !== void 0 && Et.info("logParam", "", "p"),
          v$5(Et.build(), v$b.customLogEvent));
    },
    setCustomMetric: function (Et, es, ts) {
      var is;
      arguments.length < 1 || 3 < arguments.length
        ? v$b.log(
            "setCustomMetric\u81EA\u5B9A\u4E49\u6307\u6807\u53C2\u6570\u4E2A\u6570\u9519\u8BEF"
          )
        : d$4("metricName", Et, "setCustomMetric", m$5, !1) ||
          d$4("metricValue", es, "setCustomMetric", null, !1) ||
          (((is = {}).metricName = isDefined(Et) ? Et : ""),
          (is.metricValue = isDefined(es) ? Math.round(es) : ""),
          isDefined(ts) &&
            (is.metricParam = 1e4 < ts.length ? ts.slice(0, 1e4) : ts),
          (Et = new Metric({ info: is }, GC.CUSTOM_METRIC))
            .info("metricName", "", "n")
            .info("metricValue", 0, "v"),
          ts !== void 0 && Et.info("metricParam", "", "p"),
          v$5(Et.build(), v$b.customMetricEvent));
    },
    setCustomException: function (Et, es, ts) {
      var is;
      arguments.length < 1 || 3 < arguments.length
        ? v$b.log(
            "onEvent\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u53C2\u6570\u4E2A\u6570\u9519\u8BEF"
          )
        : d$4("exceptionType", Et, "setCustomException", m$5, !1) ||
          ((is = {}),
          (es = (isDefined(es) && set_length(es, 512)) || ""),
          (ts = (isDefined(ts) && set_length(ts, 1e4)) || ""),
          (is.exceptionType = isDefined(Et) ? Et : ""),
          (is.causedBy = es),
          (is.errorDump = ts),
          (Et = new Metric({ info: is }, GC.CRASH))
            .info("causedBy", "", "cab")
            .info("exceptionType", "", "t")
            .info("errorDump", "", "p")
            .info("ic", !0)
            .info("id", uuid()),
          v$5(Et.build(), v$b.customExceptionEvent));
    },
    setCustomPageStart: function (Et, es) {
      var ts;
      arguments.length < 1 ||
        2 < arguments.length ||
        d$4("pageName", Et, "setCustomPageStart", m$5, !1) ||
        includes(A$2, Et) ||
        (A$2.push(Et), (O$2[Et] = dateNow()), (_$1[Et] = buildViewID()), !Et) ||
        ((ts = set_length(es, m$5)),
        (ts = new Metric({ info: { pageName: Et, param: ts } }, GC.VIEW))
          .info("pageName", "", "n")
          .info("ci", _$1[Et])
          .info("lt", 0)
          .info("m", 1)
          .info("t", 1)
          .info("ic", !0),
        es !== void 0 && ts.info("param", "", "p"),
        v$5(ts.build(), v$b.webviewPageEvent));
    },
    setCustomPageEnd: function (Et, es) {
      if (
        !(
          arguments.length < 1 ||
          2 < arguments.length ||
          d$4("pageName", Et, "setCustomPageEnd", m$5, !1)
        ) &&
        includes(A$2, Et)
      ) {
        let is = 0;
        var ts;
        isDefined(dateNow) &&
          O$2 &&
          isDefined(O$2[Et]) &&
          ((is = dateNow() - O$2[Et]), (is *= 1e3), Et) &&
          ((ts = set_length(es, m$5)),
          (ts = { pageName: Et, param: ts }),
          (A$2 = filter(A$2, function (ns) {
            return ns !== Et;
          })),
          delete O$2[Et],
          (ts = new Metric({ info: ts }, GC.VIEW))
            .info("pageName", "", "n")
            .info("ci", _$1[Et])
            .info("st", is)
            .info("lt", 0)
            .info("m", 2)
            .info("t", 1)
            .info("ic", !0),
          es !== void 0 && ts.info("param", "", "p"),
          v$5(ts.build(), v$b.webviewPageEvent),
          delete _$1[Et]);
      }
    },
    setCustomH5performanceData: function (Et) {
      let es = {};
      try {
        es = JSON.parse(Et);
      } catch (rs) {
        return void v$b.log("setCustomH5performanceData has error! ==>" + rs);
      }
      let ts = !0;
      if (
        (ts &&
          forEach(["url"], function (rs) {
            d$4(rs, es[rs], "setCustomH5performanceData", E$2, !1) &&
              (es[rs] = set_length(es[rs], E$2));
          }),
        ts &&
          forEach(
            [
              "imd",
              "ns",
              "ues",
              "uee",
              "rds",
              "rde",
              "fs",
              "dls",
              "dle",
              "cs",
              "scs",
              "ce",
              "reqs",
              "rsps",
              "rspe",
              "dl",
              "di",
              "dcles",
              "dclee",
              "dc",
              "les",
              "lee",
              "fp",
              "fcp",
              "lcp",
            ],
            function (rs) {
              if (d$4(rs, es[rs], "setCustomH5performanceData", null, !0))
                return (ts = !1);
            }
          ),
        ts &&
          ((es.pvid === void 0 ||
            es.pvid === null ||
            es.pvid === "" ||
            es.pvid.length > m$5) &&
            (es.pvid = uuid()),
          (es = {
            url: es.url,
            pvid: es.pvid,
            ic: !0,
            wpi: {
              ns: isDefined(es.ns) && 0 < es.ns ? es.ns : 0,
              ues: isDefined(es.ues) && 0 < es.ues ? es.ues : -1,
              uee: isDefined(es.uee) && 0 < es.uee ? es.uee : -1,
              rds: isDefined(es.rds) && 0 < es.rds ? es.rds : -1,
              rde: isDefined(es.rde) && 0 < es.rde ? es.rde : -1,
              fs: isDefined(es.fs) && 0 < es.fs ? es.fs : 0,
              dls: isDefined(es.dls) && 0 < es.dls ? es.dls : -1,
              dle: isDefined(es.dle) && 0 < es.dle ? es.dle : -1,
              cs: isDefined(es.cs) && 0 < es.cs ? es.cs : -1,
              scs: isDefined(es.scs) && 0 < es.scs ? es.scs : -1,
              ce: isDefined(es.ce) && 0 < es.ce ? es.ce : -1,
              reqs: isDefined(es.reqs) && 0 < es.reqs ? es.reqs : 0,
              rsps: isDefined(es.rsps) && 0 < es.rsps ? es.rsps : 0,
              rspe: isDefined(es.rspe) && 0 < es.rspe ? es.rspe : 0,
              dl: isDefined(es.dl) && 0 < es.dl ? es.dl : 0,
              di: isDefined(es.di) && 0 < es.di ? es.di : 0,
              dcles: isDefined(es.dcles) && 0 < es.dcles ? es.dcles : 0,
              dclee: isDefined(es.dclee) && 0 < es.dclee ? es.dclee : 0,
              dc: isDefined(es.dc) && 0 < es.dc ? es.dc : 0,
              les: isDefined(es.les) && 0 < es.les ? es.les : 0,
              lee: isDefined(es.lee) && 0 < es.lee ? es.lee : -1,
              fp: isDefined(es.fp) && 0 < es.fp ? es.fp : -1,
              fcp: isDefined(es.fcp) && 0 < es.fcp ? es.fcp : -1,
              lcp: isDefined(es.lcp) && 0 < es.lcp ? es.lcp : -1,
            },
          }),
          isDefined(es.url)) &&
          es.url.trim("") !== "")
      ) {
        if (q$4(E$6.sett.osType) || q$4(E$6.secondSett.osType)) {
          const rs = new Metric({ info: es }, GC.WEBVIEWDATA);
          rs.info("url", "").info("ic", !0).info("pvid").info("wpi"),
            pushQueueData(rs.build());
        }
        var ns = u$1.getEviData("value"),
          is = stringify({
            h5: [{ ent: now(), v: es, k: "h5", evi: ns }],
            imd: es.imd,
          }),
          ns = stringify({ ent: now(), v: es, evi: ns });
        v$b.log("setCustomH5performanceData=> " + ns);
        try {
          U$9(E$6.sett.osType) || U$9(E$6.secondSett.osType)
            ? window.webkit.messageHandlers.brsWKSetCustomH5performanceData.postMessage(
                ns
              )
            : B$6(E$6.sett.osType) || B$6(E$6.secondSett.osType)
            ? window.bonreePrivateInterface.call(is)
            : window.bonreePrivateInterface.webViewEventBus(
                is,
                E$6.sett.webviewID || E$6.secondSett.webviewID
              );
        } catch (rs) {}
      }
    },
    setCustomRouteChangeData: function (Et) {
      let es = {};
      try {
        (es = JSON.parse(Et)).d = 1e3 * Math.round(es.d);
      } catch (ns) {
        return void v$b.log("setCustomRouteChangeData has error! ==>" + ns);
      }
      let ts = !0;
      var is;
      ts &&
        forEach(["tu", "fu", "rt", "pu"], function (ns) {
          (!isDefined(es[ns]) || es[ns] === "" || es[ns].length > E$2) &&
            (ts = !1);
        }),
        ts &&
          forEach(["pt", "fw"], function (ns) {
            (!isDefined(es[ns]) || es[ns] === "" || es[ns].length > m$5) &&
              (ts = !1);
          }),
        ts &&
          forEach(["d", "sta"], function (ns) {
            (isDefined(es[ns]) && typeof es[ns] == "number") || (ts = !1);
          }),
        ts &&
          (es.fu === void 0 && es.fu === null
            ? v$b.log(
                "setCustomRouteChangeData Parameter has a value or key [fu] that does not exist!"
              )
            : (es.al !== void 0 &&
                es.al !== null &&
                es.al.length > m$5 &&
                (v$b.log(
                  "setCustomRouteChangeData Parameter has a value or key [al] that the value length exceeds " +
                    m$5 +
                    "!"
                ),
                (es.al = "")),
              (es.ent = 1e3 * new Date().getTime()),
              (is = new Metric({ info: es }, GC.ROUTE))
                .info("tu", "")
                .info("fu", "")
                .info("d", 0)
                .info("sta", 0)
                .info("pt", "")
                .info("rt", "")
                .info("pu", "")
                .info("fw", "")
                .info("ic", !0)
                .info("ctp", 2)
                .info(
                  "pvid",
                  isDefined(E$6.sett.pageViewId) ? E$6.sett.pageViewId : ""
                ),
              isDefined(es.al) && es.al !== "" && is.info("al", ""),
              isDefined(window.performance) &&
                isDefined(window.performance.timing) &&
                is.info("ns", window.performance.timing.navigationStart),
              v$5(is.build(), v$b.routeChangeData)));
    },
    setCustomNetworkData: function (Et) {
      let es = {};
      try {
        es = JSON.parse(Et);
      } catch (ns) {
        return void v$b.log("setCustomNetworkData has error! ==>" + ns);
      }
      let ts = !0;
      var is;
      forEach(
        ["tp", "dt", "ct", "sslt", "rt", "rti", "dti", "ds", "pt", "rds"],
        function (ns) {
          if (d$4(ns, es[ns], "setCustomNetworkData", null, !0) || es[ns] < 0)
            return (ts = !1);
        }
      ),
        d$4("ti", es.ti, "setCustomNetworkData", null, !1) && (ts = !1),
        isDefined(es.ru) &&
          es.ru !== "" &&
          (d$4("ru", es.ru, "setCustomNetworkData", E$2, !1) &&
            (es.ru = set_length(es.ru, E$2)),
          d$4("m", es.m, "setCustomNetworkData", E$2, !1) &&
            (es.m = set_length(es.m, E$2)),
          ts) &&
          ((es.ent = 1e3 * new Date().getTime()),
          (is = new Metric({ info: es }, GC.NET))
            .info("ru", "")
            .info("m", "")
            .info("ti", "")
            .info("tp", 1e3)
            .info("dt", 1e3)
            .info("ct", 1e3)
            .info("sslt", 1e3)
            .info("rt", 1e3)
            .info("rti", 1e3)
            .info("dti", 1e3)
            .info("ds", 0)
            .info("pt", 0)
            .info("rh", "")
            .info("rhe", "")
            .info("ret", "")
            .info("rds", 0)
            .info("id", uuid())
            .info("ic", !0)
            .info("art", 0)
            .info("ec", 200),
          v$5(is.build(), v$b.NetworkEvent));
    },
    setCustomEventStart: function (Et, es, ts, is, ns) {
      var rs;
      arguments.length < 1 ||
        5 < arguments.length ||
        d$4("eventId", Et, "setCustomEventStart", null, !1) ||
        (isDefined(ns) && 7e3 < JSON.stringify(ns).length) ||
        includes(I$4, Et) ||
        (I$4.push(Et), !Et) ||
        ((U$4[Et] = dateNow()),
        (M$2[Et] = buildViewID()),
        (rs = {}),
        (es = set_length(es, m$5)),
        (is = set_length(is, 7e3)),
        (rs.eventId = isDefined(Et) ? Et : ""),
        256 < Et.length ||
          Et.length === 0 ||
          ((rs.eventName = es),
          (rs.eventParam = is),
          (rs.eventLabel = set_length(ts, 256)),
          (rs.info = W(ns)),
          (es = new Metric({ info: rs }, GC.CUSTOM_EVENT))
            .info("eventId", "", "i")
            .info("t", 1)
            .info("d", 0)
            .info("ci", M$2[Et]),
          rs.eventName !== void 0 &&
            rs.eventName !== "" &&
            es.info("eventName", "", "n"),
          rs.eventLabel !== void 0 &&
            rs.eventLabel !== "" &&
            es.info("eventLabel", "", "l"),
          rs.eventParam !== void 0 &&
            rs.eventParam !== "" &&
            es.info("eventParam", "", "p"),
          rs.info !== void 0 &&
            rs.info instanceof Object &&
            es.info("info", "", "info"),
          v$5(es.build(), v$b.customEvent)));
    },
    setCustomEventEnd: function (Et, es, ts, is, ns) {
      if (
        !(arguments.length < 1 || 5 < arguments.length) &&
        !d$4("eventId", Et, "setCustomEventEnd", null, !1) &&
        !(isDefined(ns) && 7e3 < JSON.stringify(ns).length) &&
        includes(I$4, Et)
      ) {
        if (Et) {
          let ss = 0;
          isDefined(dateNow) &&
            U$4 &&
            isDefined(U$4[Et]) &&
            ((ss = dateNow() - U$4[Et]), (ss *= 1e3));
          var rs = {},
            es = set_length(es, m$5),
            is = set_length(is, 7e3);
          if (
            ((rs.eventId = isDefined(Et) ? Et : ""),
            256 < Et.length || Et.length === 0)
          )
            return;
          (rs.eventName = es),
            (rs.eventParam = is),
            (rs.eventLabel = set_length(ts, 256)),
            (rs.info = W(ns)),
            (es = new Metric({ info: rs }, GC.CUSTOM_EVENT)),
            es
              .info("eventId", "", "i")
              .info("t", 2)
              .info("d", ss)
              .info("ci", M$2[Et]),
            rs.eventName !== void 0 &&
              rs.eventName !== "" &&
              es.info("eventName", "", "n"),
            rs.eventLabel !== void 0 &&
              rs.eventLabel !== "" &&
              es.info("eventLabel", "", "l"),
            rs.eventParam !== void 0 &&
              rs.eventParam !== "" &&
              es.info("eventParam", "", "p"),
            rs.info !== void 0 &&
              rs.info instanceof Object &&
              es.info("info", "", "info"),
            v$5(es.build(), v$b.customEvent);
        }
        (I$4 = filter(I$4, function (ss) {
          return ss !== Et;
        })),
          delete U$4[Et],
          delete M$2[Et];
      }
    },
    startSpan: function (Et, es) {
      return new a$1(Et, es);
    },
    addUserExtraInfo: function (Et, es) {
      var ts;
      d$4("key", Et, "setUserProperty", m$5, !1, !1) ||
        !/^[:0-9a-zA-Z /@._-]{1,}$/.test(Et) ||
        /^\s{0,}$/.test(Et) ||
        typeof Et == "boolean" ||
        typeof Et == "number" ||
        !isDefined(es) ||
        typeof es == "object" ||
        /^\s{0,}$/.test(es) ||
        (typeof es != "number" && es.length > T$3 && (es = set_length(es, T$3)),
        (ts = u$1.getUser() || "") != "" &&
          (((ts = { ui: ts, c: 2, i: {} }).i[Et] = es),
          (Et = new Metric({ info: ts }, GC.USERCHANGE))
            .info("ui", "")
            .info("c")
            .info("i"),
          v$5(Et.build(), v$b.setUserProperty)));
    },
    setUserExtraInfo: function (Et) {
      if (isObj(Et) && !isEmpty(Et)) {
        for (const is in Et)
          if (Object.hasOwnProperty.call(Et, is)) {
            const ns = Et[is];
            let rs = !0;
            (!d$4("key", is, "setUserProperty", m$5, !1, !1) &&
              /^[:0-9a-zA-Z /@._-]{1,}$/.test(is) &&
              !/^\s{0,}$/.test(is)) ||
              (delete Et[is], (rs = !1)),
              (isDefined(ns) &&
                typeof ns != "object" &&
                !/^\s{0,}$/.test(ns)) ||
                (delete Et[is], (rs = !1)),
              rs &&
                typeof ns != "number" &&
                ns.length > T$3 &&
                (Et[is] = set_length(ns, T$3));
          }
        let ts = set_64_keys(Et, 64);
        if (!isEmpty(ts)) {
          let is = u$1.getUser() || "";
          var es;
          is != "" &&
            ((es = new Metric({ info: { ui: is, c: 1, i: ts } }, GC.USERCHANGE))
              .info("ui", "")
              .info("c")
              .info("i"),
            v$5(es.build(), v$b.setUserProperty));
        }
      }
    },
    increaseUserExtraInfo: function (Et, es) {
      var ts;
      !d$4("key", Et, "setUserProperty", m$5, !1, !1) &&
        /^[:0-9a-zA-Z /@._-]{1,}$/.test(Et) &&
        !/^\s{0,}$/.test(Et) &&
        typeof Et == "string" &&
        isDefined(es) &&
        typeof es != "object" &&
        typeof es == "number" &&
        (typeof es != "number" && es.length > T$3 && (es = set_length(es, T$3)),
        (ts = u$1.getUser() || "") != "") &&
        (((ts = { ui: ts, c: 4, i: {} }).i[Et] = es),
        (Et = new Metric({ info: ts }, GC.USERCHANGE))
          .info("ui", "")
          .info("c")
          .info("i"),
        v$5(Et.build(), v$b.setUserProperty));
    },
    removeUserExtraInfo: function (Et) {
      var es;
      d$4("key", Et, "setUserProperty", m$5, !1, !1) ||
        !/^[:0-9a-zA-Z /@._-]{1,}$/.test(Et) ||
        typeof Et != "string" ||
        /^\s{0,}$/.test(Et) ||
        ((es = u$1.getUser() || "") != "" &&
          ((es = { ui: es, c: 3, i: {} }),
          Et && (es.i[Et] = ""),
          (Et = new Metric({ info: es }, GC.USERCHANGE))
            .info("ui", "")
            .info("c")
            .info("i"),
          v$5(Et.build(), v$b.setUserProperty)));
    },
    addEventAttributes(Et, es = !1) {
      var ts;
      typeof Et == "object" &&
        ((ts = Object.assign({}, Et)),
        g$3.addWithObj(Et, es),
        (Et = { local: es, attributes: ts }),
        v$b.addAtt(Et));
    },
    addEventAttributeWithKey(Et, es, ts = !1) {
      g$3.addWithKey(Et, es, ts),
        (ts = { local: ts, attributes: { [Et]: es } }),
        v$b.addAtt(ts);
    },
    removeEventAttributeWithKeys(Et) {
      g$3.delWithKeys(Et), v$b.delAtt(Et);
    },
    removeAllEventAttributes() {
      g$3.delAll(), v$b.delAttAll();
    },
    getIntersectionObserverInfo(Et) {
      w$8(Et);
    },
    actionExternalData(Et) {
      v$4(Et);
    },
  };
  var h$7 = Object.defineProperty,
    o = (Et, es, ts) =>
      es in Et
        ? h$7(Et, es, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: ts,
          })
        : (Et[es] = ts),
    e$2 = (Et, es, ts) => o(Et, typeof es != "symbol" ? es + "" : es, ts);
  class u {
    constructor(es) {
      e$2(this, "funActionModify", function (ts, is) {
        return isDefined(ts) && isDefined(is) && (this[ts] = is), this;
      }),
        e$2(this, "funActionBuild", function () {
          var ts = {
            n: this.n,
            t: this.t,
            to: this.to,
            ice: this.ice,
            st: this.st,
            et: this.et || now(),
            ti: this.ti,
            im: this.im,
            ne: this.ne,
          };
          return isEmpty(ts.ne) && delete ts.ne, ts;
        }),
        (this.n = es && typeof es == "string" ? es : es.name),
        (this.t = 12),
        (this.to = !1),
        (this.ice = !1),
        (this.st = 1),
        (this.et = 0),
        (this.ti = 1225),
        (this.im = !0),
        (this.ne = {});
    }
  }
  let e$1 = class {
      constructor() {
        (this.lastTarget = null), (this.count = 0), (this.lastTime = 0);
      }
      isClick(Et, es) {
        return (
          (es = (es && es / 1e3) || +new Date()),
          this.lastTarget === null && this.count === 0
            ? ((this.lastTarget = Et),
              (this.count += 1),
              (this.lastTime = es),
              0)
            : this.lastTarget !== Et
            ? ((this.lastTarget = Et),
              (this.count = 1),
              (this.lastTime = es),
              0)
            : this.lastTarget == Et && 300 <= es - this.lastTime
            ? ((this.count = 1), (this.lastTime = es), 0)
            : this.lastTarget == Et &&
              this.count < 2 &&
              es - this.lastTime < 300
            ? ((this.count += 1), (this.lastTime = es), 0)
            : this.lastTarget == Et &&
              2 <= this.count &&
              es - this.lastTime < 300
            ? ((this.count += 1), (this.lastTime = es), 1)
            : void 0
        );
      }
    },
    h$6 = new e$1(),
    h$5;
  function J(Et) {
    if (isDefined(Et)) {
      let es = E$6.sett.findGenerate || 0,
        ts = getActionText(Et, es, E$6.sett.specialCharacter),
        is = E$6.sett.findEleReg || null;
      return isDefined(is)
        ? is.every((ns) => new RegExp(ns).test(ts))
          ? ts
          : getActionText(Et, 0, E$6.sett.specialCharacter)
        : ts && !isEmpty(ts)
        ? ts
        : getActionText(Et, es, E$6.sett.specialCharacter);
    }
  }
  function x$2(Et) {
    var es;
    return isDefined(Et)
      ? (Et.$xpath ||
          (200 < (es = xpath(Et)).length
            ? (Et.$xpath = "[Error: Overflow with more than 200 characters.]")
            : (Et.$xpath = es)),
        Et.$xpath)
      : "";
  }
  function l$1(Et, es = !1) {
    var ts;
    isDefined(Et) &&
      (isDefined(Et.$timeoutTimer) && clearTimeout(Et.$timeoutTimer),
      d$a(GC.LIFESTYLE_REQUEST_END + Et.identify),
      d$a(GC.CUSTOM_ACTION_END),
      d$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify),
      d$a(GC.ROUTE_CHANGE_END + Et.identify),
      d$a(GC.WEBSOCKET_CONNECTION_END),
      d$a(GC.SPAN_CALLBACK_DATA),
      (ts = new u("anonymous")).funActionModify("st", Et.startTime),
      ts.funActionModify("et", Et.endTime),
      es &&
        (ts.funActionModify("ice", !0),
        (Et.startEvent.lt = Et.endTime - Et.startTime),
        (Et.startEvent.ice = !0),
        isDefined(Et.hasEmitStart)) &&
        !Et.hasEmitStart &&
        (c$5({ t: GC.TRACE_ACTION_DATA, p: { info: Et.startEvent }, type: 1 }),
        isEmpty(E$6.secondSett) ||
          c$5({ t: GC.TRACE_ACTION_DATA, p: { info: Et.startEvent }, type: 2 }),
        (Et.hasEmitStart = !0)),
      ((es = extend({}, Et.startEvent)).m = 2),
      (es.me = ts.funActionBuild()),
      c$5({
        t: GC.TRACE_ACTION_DATA,
        p: { info: es },
        revts: Et.handledRequestStruct,
        type: 1,
      }),
      isEmpty(E$6.secondSett) ||
        c$5({
          t: GC.TRACE_ACTION_DATA,
          p: { info: es },
          revts: Et.handledRequestStructSecond,
          type: 2,
        }));
  }
  function V(Et) {
    try {
      d$a(GC.CUSTOM_ACTION_END);
      let cs = now();
      (Et.startTime = cs),
        (Et.requestRecord = []),
        (Et.handledRequestStruct = []),
        (Et.handledRequestStructSecond = []),
        (Et.requestCount = 0),
        (Et.routeCount = 0),
        (Et.wsCount = 0),
        (Et.identify = uuid()),
        (Et.handledRouteRequest = []),
        (Et.handledRouteRequestSecond = []),
        (Et.handledSpan = []),
        v$a(GC.ROUTE_CHANGE_START, function (fs) {
          (Et.routeCount = Et.routeCount + 1),
            (Et.relatedRoute = !0),
            (fs.info.id = Et.identify);
        }),
        v$a(GC.ROUTE_CHANGE_END + Et.identify, function (fs) {
          var us;
          (Et.routeCount = Et.routeCount - 1),
            isDefined(fs.routeData) &&
            Et.relatedRoute &&
            0 < Et.handledRouteRequest.length &&
            Et.routeCount === 0
              ? (((us = JSON.parse(JSON.stringify(fs.routeData))).revts =
                  Et.handledRouteRequest),
                Et.handledRequestStruct.push(us))
              : Et.handledRequestStruct.push(fs.routeData),
            !isEmpty(E$6.secondSett) &&
              checkMoudle("routechange") &&
              (isDefined(fs.routeData) &&
              Et.relatedRoute &&
              0 < Et.handledRouteRequestSecond.length &&
              Et.routeCount === 0
                ? (((us = JSON.parse(JSON.stringify(fs.routeData))).revts =
                    Et.handledRouteRequestSecond),
                  Et.handledRequestStructSecond.push(us))
                : Et.handledRequestStructSecond.push(fs.routeData)),
            Et.hasEmitStart &&
              Et.requestCount === 0 &&
              Et.wsCount === 0 &&
              (d$a(GC.LIFESTYLE_REQUEST_END + Et.identify),
              d$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify),
              d$a(GC.ROUTE_CHANGE_END + Et.identify),
              d$a(GC.WEBSOCKET_CONNECTION_END),
              l$1(Et));
        }),
        v$a(GC.LIFESTYLE_FETCH_START, function (fs) {
          isDefined(fs.info) && (fs.info.ai = Et.identify),
            Et.requestRecord.push(now()),
            (Et.requestCount = Et.requestCount + 1);
        }),
        v$a(GC.LIFESTYLE_XHR_START, function (fs) {
          isDefined(fs.info) && (fs.info.ai = Et.identify),
            Et.requestRecord.push(now()),
            (Et.requestCount = Et.requestCount + 1);
        }),
        v$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify, function (fs) {
          Et.requestCount = Et.requestCount + 1;
        }),
        v$a(GC.LIFESTYLE_REQUEST_END + Et.identify, function (fs) {
          Et.requestCount = Et.requestCount - 1;
          var us,
            ls = u$1.getEviData("value");
          isDefined(fs) &&
            isDefined(fs.requestData) &&
            isDefined(fs.endTime) &&
            !Et.relatedRoute &&
            ((us = Q$1(fs.requestData, E$6.sett, !0)),
            Et.handledRequestStruct.push({
              k: us.type,
              ent: us.ent,
              sin: us.sin,
              v: us.data,
              evi: ls,
            }),
            !isEmpty(E$6.secondSett)) &&
            checkMoudle("network") &&
            ((us = Q$1(fs.requestData, E$6.secondSett, !0)),
            Et.handledRequestStructSecond.push({
              k: us.type,
              ent: us.ent,
              sin: us.sin,
              v: us.data,
              evi: ls,
            })),
            Et.relatedRoute &&
              ((us = Q$1(fs.requestData, E$6.sett, !0)),
              (ls = u$1.getEviData("value")),
              Et.handledRouteRequest.push({
                k: us.type,
                ent: us.ent,
                sin: us.sin,
                v: us.data,
                evi: ls,
              }),
              !isEmpty(E$6.secondSett)) &&
              checkMoudle("network") &&
              ((us = Q$1(fs.requestData, E$6.secondSett, !0)),
              Et.handledRouteRequestSecond.push({
                k: us.type,
                ent: us.ent,
                sin: us.sin,
                v: us.data,
                evi: ls,
              })),
            Et.requestCount === 0 &&
              Et.routeCount === 0 &&
              Et.wsCount === 0 &&
              (d$a(GC.LIFESTYLE_REQUEST_END + Et.identify),
              d$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify),
              d$a(GC.ROUTE_CHANGE_END + Et.identify),
              d$a(GC.WEBSOCKET_CONNECTION_END),
              isDefined(Et.loadTime) && l$1(Et),
              T$8.turnOffRecord(),
              T$8.stopPageActivityObserver());
        }),
        v$a(GC.CUSTOM_ACTION_END, function (fs) {
          (Et.endTime = now()), l$1(Et, !0);
        }),
        v$a(GC.SPAN_CALLBACK_DATA, function (fs) {
          var us, ls, hs, gs, ps;
          isDefined(fs.websocketData) &&
            (({
              type: us,
              ent: ls,
              sin: hs,
              data: gs,
              evi: ps,
            } = fs.websocketData),
            (fs.websocketData.isRelated = !0),
            Et.handledRequestStruct.push({
              k: us,
              ent: ls,
              sin: hs,
              v: gs,
              evi: ps,
            }),
            checkMoudle("span") &&
              Et.handledRequestStructSecond.push({
                k: us,
                ent: ls,
                sin: hs,
                v: gs,
                evi: ps,
              }),
            Et.handledSpan.push(fs.websocketData));
        }),
        v$a(GC.WEBSOCKET_CONNECTION_START, function () {
          Et.wsCount = Et.wsCount + 1;
        }),
        v$a(GC.WEBSOCKET_CONNECTION_END, function () {
          (Et.wsCount = Et.wsCount - 1),
            Et.requestCount === 0 &&
              Et.routeCount === 0 &&
              Et.wsCount === 0 &&
              (d$a(GC.LIFESTYLE_REQUEST_END + Et.identify),
              d$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify),
              d$a(GC.ROUTE_CHANGE_END + Et.identify),
              d$a(GC.WEBSOCKET_CONNECTION_END),
              l$1(Et));
        }),
        (E$6.sett.pageUrl = d$5(
          {
            p: {
              info: {
                url: isDefined(window.location) ? window.location.href : "",
              },
            },
          },
          E$6.sett
        ).p.info.url),
        isDefined(T$8) && (T$8.startPageActivityObserver(), T$8.turnOnRecord());
      var es,
        ts,
        is,
        ns,
        rs,
        ss,
        os,
        ds,
        as = Et.target;
      (isString(as.tagName) || as.name || "") !== "BODY" &&
        ((es = x$2(as)),
        (ts =
          "xpath" +
          unicode("=") +
          es +
          ",outerHTML" +
          unicode("=") +
          as.outerHTML),
        (is = Et && Et.type === "click" ? 1 : 4),
        (ns = (Et && Et.target && Et.target.tagName) || ""),
        (rs = {
          t: J(as) || as.innerText || "",
          c: String(as.className || ""),
          tag: as.nodeName || as.localName || "",
          id: isDefined(as.id) ? as.id : "",
        }),
        (ss = E$6.sett.pageUrl),
        (os = h$6.isClick(es, cs)),
        (Et.startEvent = {
          t: is,
          n: ns,
          sa: 1,
          i: ts,
          vn: ss,
          ic: !1,
          lt: 0,
          is: !1,
          id: Et.identify,
          m: 1,
          ice: !1,
          ci: rs,
          timestamp: cs,
          vci: E$6.sett.pageViewId,
          ir: os,
        }),
        isDefined(h$5) &&
          isFunction(h$5) &&
          ((ds = {
            xpath: es,
            target: as,
            t: getActionText(as, 0) || as.innerText || "",
          }),
          h$5(ds)),
        (Et.$startTimer = setTimeout(function () {
          isDefined(T$8) &&
            isDefined(checkRecord) &&
            (checkRecord(T$8.mutationRecord, cs) ||
            checkRecord(T$8.performanceRecord, cs) ||
            checkRecord(Et.requestRecord, cs)
              ? (c$5({
                  t: GC.TRACE_ACTION_DATA,
                  p: { info: Et.startEvent },
                  type: 1,
                }),
                isEmpty(E$6.secondSett) ||
                  c$5({
                    t: GC.TRACE_ACTION_DATA,
                    p: { info: Et.startEvent },
                    type: 2,
                  }),
                d$a(GC.LIFESTYLE_REQUEST_END + Et.identify),
                d$a(GC.LIFESTYLE_FETCH_START),
                d$a(GC.LIFESTYLE_XHR_START),
                d$a(GC.CUSTOM_ACTION_END),
                d$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify),
                d$a(GC.ROUTE_CHANGE_START),
                d$a(GC.ROUTE_CHANGE_END + Et.identify),
                d$a(GC.SPAN_CALLBACK_DATA),
                d$a(GC.WEBSOCKET_CONNECTION_START),
                d$a(GC.WEBSOCKET_CONNECTION_END),
                T$8.turnOffRecord(),
                T$8.stopPageActivityObserver(),
                (Et.hasEmitStart = !0))
              : (d$a(GC.LIFESTYLE_REQUEST_END + Et.identify),
                d$a(GC.LIFESTYLE_FETCH_START),
                d$a(GC.LIFESTYLE_XHR_START),
                d$a(GC.CUSTOM_ACTION_END),
                d$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify),
                d$a(GC.ROUTE_CHANGE_START),
                d$a(GC.ROUTE_CHANGE_END + Et.identify),
                d$a(GC.SPAN_CALLBACK_DATA),
                d$a(GC.WEBSOCKET_CONNECTION_START),
                d$a(GC.WEBSOCKET_CONNECTION_END),
                T$8.turnOffRecord(),
                T$8.stopPageActivityObserver()));
        }, 1e3)));
    } catch (cs) {
      log("C151");
    }
  }
  function j(Et) {
    try {
      var es = now(),
        ts =
          (isDefined(Et.$startTimer) && clearTimeout(Et.$startTimer),
          d$a(GC.LIFESTYLE_FETCH_START),
          d$a(GC.LIFESTYLE_XHR_START),
          d$a(GC.ROUTE_CHANGE_START),
          d$a(GC.WEBSOCKET_CONNECTION_START),
          es - Et.startTime);
      if (((Et.loadTime = ts), (Et.endTime = es), isDefined(T$8)))
        if (
          !Et.hasEmitStart &&
          (0 < Et.requestRecord.length ||
            checkRecord(T$8.mutationRecord, Et.startTime) ||
            checkRecord(T$8.performanceRecord, Et.startTime))
        )
          (Et.startEvent.lt = ts),
            c$5({
              t: GC.TRACE_ACTION_DATA,
              p: { info: Et.startEvent },
              type: 1,
            }),
            isEmpty(E$6.secondSett) ||
              c$5({
                t: GC.TRACE_ACTION_DATA,
                p: { info: Et.startEvent },
                type: 2,
              }),
            (Et.hasEmitStart = !0),
            (Et.$timeoutTimer = setTimeout(function () {
              l$1(Et);
            }, 12e4)),
            Et.requestCount === 0 &&
              Et.routeCount === 0 &&
              Et.wsCount === 0 &&
              l$1(Et),
            T$8.turnOffRecord(),
            T$8.stopPageActivityObserver();
        else {
          if (0 < Et.handledSpan.length)
            for (var is of Et.handledSpan) v$5(is, v$b.spanEvent);
          d$a(GC.LIFESTYLE_REQUEST_END + Et.identify),
            d$a(GC.CUSTOM_ACTION_END),
            d$a(GC.LIFESTYLE_CALLBACK_REQUEST_START + Et.identify),
            d$a(GC.ROUTE_CHANGE_END + Et.identify),
            d$a(GC.WEBSOCKET_CONNECTION_END),
            d$a(GC.SPAN_CALLBACK_DATA);
        }
    } catch (ns) {
      log("C152");
    }
  }
  function z() {
    c$5({ t: GC.CUSTOM_ACTION_END });
  }
  function Z$1() {
    on$1(window, "click", V, !0),
      on$1(window, "click", (Et) => setTimeout(() => j(Et), 50), !1);
  }
  function v$4(Et) {
    Et && isFunction(Et)
      ? (h$5 = Et)
      : console.warn(
          "The parameters passed in are incorrect. Please pass in a function!!"
        );
  }
  function e(Et, es) {
    (this.lastTimer = null),
      (this.lastEvent = null),
      (this.period = es || 1e3),
      (this.compare = function () {
        return !1;
      }),
      (this.submit = Et || NIL_FN);
  }
  function p$1(Et) {
    var es = Et.data;
    return isDefined(es.al) && es.al === "" && delete es.al, Et;
  }
  function s$2() {
    try {
      return navigator.userAgent.match(
        /(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i
      )
        ? 2
        : 1;
    } catch (Et) {
      log("C119");
    }
  }
  function routeService(Et) {
    var es = new Metric(Et.p, GC.ROUTE),
      ts = s$2(),
      ts =
        (es
          .info(GC.URL, "", "tu")
          .info(GC.REFERRER, "", "fu")
          .info(GC.DURATION, 0, "d")
          .info(GC.STATUS, 0, "sta")
          .info(GC.ALIAS, "", "al")
          .info(GC.PATH, "", "pt")
          .info(GC.ROOT, "", "rt")
          .info(GC.FULL_URL, "", "pu")
          .info(GC.FRAME_WORK, "", "fw")
          .info(GC.CUSTOM_IC, !1, "ic")
          .info(GC.CLIENT_TYPE, ts, "ctp")
          .info("pvid", "", "pvid")
          .info("ns", 0, "ns"),
        isDefined(Et.p.info.wri) && es.info("wri", [], "wri"),
        es.build());
    return (
      isDefined(Et.revts) && 0 < Et.revts.length && (ts.revts = Et.revts),
      p$1(ts)
    );
  }
  extend(e.prototype, {
    $schedule: function (Et) {
      isDefined(this.lastTimer) && clearTimeout(this.lastTimer);
      var es = this;
      (this.lastEvent = Et),
        (this.lastTimer = delay(function () {
          es.submit(es.lastEvent), (es.lastEvent = null);
        }, this.period));
    },
    event: function (Et) {
      isDefined(this.lastEvent) &&
        (this.compare(this.lastEvent, Et)
          ? ((Et.info[GC.DURATION] =
              Et.info[GC.START_TIME] - this.lastEvent.info[GC.START_TIME]),
            (Et.info[GC.TIMESTAMP] = this.lastEvent.info[GC.TIMESTAMP]),
            (Et.info[GC.START_TIME] = this.lastEvent.info[GC.START_TIME]),
            (Et.info.count = this.lastEvent.info.count + 1))
          : this.submit(this.lastEvent)),
        this.$schedule(Et);
    },
    flush: function () {
      isDefined(this.lastTimer) &&
        (clearTimeout(this.lastTimer), (this.lastTimer = null)),
        isDefined(this.lastEvent) &&
          (this.submit(this.lastEvent), (this.lastEvent = null));
    },
    equalsWith: function (Et) {
      "apply" in Et && (this.compare = Et);
    },
  });
  var m$4 = isDefined(window.location) ? window.location : "";
  function getFramework() {
    return window
      ? window.Vue !== void 0 ||
        window.__VUE__ ||
        (window.$nuxt && window.$nuxt._isVue)
        ? "Vue"
        : window.React
        ? "React"
        : window.ng !== void 0 ||
          isDefined(window.Zone) ||
          isDefined(window.angular)
        ? "Angular"
        : "Other"
      : "Other";
  }
  var h$4 = [],
    n = {};
  function P$2() {
    u$1.setData(GC.TITLE, document.title),
      u$1.setEviData("n", document.URL),
      document.title != "" && u$1.setEviData("vt", document.title),
      document.referrer && u$1.setEviData("ru", document.referrer);
  }
  function T$2() {
    if (
      (H$2(),
      document && document.ready(P$2),
      isDefined(m$4) &&
        isDefined(m$4.href) &&
        m$4.href.split("?")[0] !==
          (isDefined(location) ? location.href : "").split("?")[0])
    ) {
      let rs = { id: "" };
      c$5({ t: GC.ROUTE_CHANGE_START, info: rs }),
        isDefined(n) &&
          0 < Object.getOwnPropertyNames(n).length &&
          Object.keys(n).map((ss) => {
            typeof n[ss] == "function" && (n[ss](), delete n[ss]);
          }),
        (E$6.sett.isSinglePage = !0),
        (E$6.sett.pageViewId = uuid());
      var Et = extend({}, location),
        es = {
          info: {
            uuid: uuid(),
            timestamp: now(),
            url: Et.href,
            referrer: extend({}, m$4).href,
            duration: 1e3,
            status: 0,
            path: Et.hash === "" ? Et.pathname : Et.hash,
            root:
              Et.hash === ""
                ? Et.origin + Et.pathname
                : Et.origin + Et.pathname + Et.hash.replace("#/", ""),
            fullUrl: Et.hash !== "" ? Et.origin + Et.pathname : Et.origin + "/",
            framework: getFramework(),
            pvid: E$6.sett.pageViewId,
            ns:
              isDefined(performance) && isDefined(performance.timing)
                ? performance.timing.navigationStart
                : 0,
          },
        },
        ts =
          (-1 < es.info.url.indexOf("?") &&
            (es.info.url = es.info.url.split("?")[0]),
          -1 < es.info.referrer.indexOf("?") &&
            (es.info.referrer = es.info.referrer.split("?")[0]),
          -1 < es.info.path.indexOf("?") &&
            (es.info.path = es.info.path.split("?")[0]),
          -1 < es.info.root.indexOf("?") &&
            (es.info.root = es.info.root.split("?")[0]),
          -1 < es.info.fullUrl.indexOf("?") &&
            (es.info.fullUrl = es.info.fullUrl.split("?")[0]),
          function () {
            var ss, os, ds, as, cs;
            isDefined(n) &&
              isDefined(n[es.info.uuid]) &&
              (isDefined(n) &&
                isDefined(n[es.info.uuid]) &&
                delete n[es.info.uuid],
              ({
                type: ss,
                ent: os,
                sin: ds,
                data: as,
              } = routeService({ p: es })),
              (cs = u$1.getEviData("value")),
              c$5({
                t: GC.ROUTE_CHANGE_END + rs.id,
                routeData: { k: ss, ent: os, sin: ds, v: as, evi: cs },
              }));
          }),
        is = (isDefined(n) && (n[es.info.uuid] = ts), setTimeout(ts, 1e3)),
        ns = new PageActivityManager(function (ss) {
          ss.forEach((os) => {
            var ds = {
              st: getFixedMetric(os, GC.START_TIME),
              name: d$5({ p: { info: { url: os[GC.NAME] } } }, E$6.sett).p.info
                .url,
              dura: isDefined(os[GC.DURATION])
                ? getFixedMetric(os, GC.DURATION)
                : os[GC.RESPONSE_END] - os[GC.START_TIME],
              rt: getMineTypeByUrl(os[GC.NAME]),
              fs: getFixedMetric(os, GC.FETCH_START),
              dls: getFixedMetric(os, GC.DOMAIN_LOOKUP_START),
              dle: getFixedMetric(os, GC.DOMAIN_LOOKUP_END),
              cs: getFixedMetric(os, GC.CONNECT_START),
              ce: getFixedMetric(os, GC.CONNECT_END),
              scs: getFixedMetric(os, GC.SECURE_CONNECTION_START),
              reqs: getFixedMetric(os, GC.REQUEST_START),
              rsps: getFixedMetric(os, GC.RESPONSE_START),
              rspe: getFixedMetric(os, GC.RESPONSE_END),
              rs: isDefined(os[GC.RESPONSE_STATUS])
                ? os[GC.RESPONSE_STATUS]
                : -1,
            };
            isDefined(os[GC.INITIATOR_TYPE]) && (ds.it = os[GC.INITIATOR_TYPE]),
              isDefined(os[GC.DECODED_BODY_SIZE])
                ? ((ds.ts = os[GC.TRANSFER_SIZE]),
                  (ds.ebs =
                    os[GC.ENCODED_BODY_SIZE] >= Math.pow(2, 64)
                      ? Math.pow(2, 60)
                      : os[GC.ENCODED_BODY_SIZE]),
                  (ds.dbs = os[GC.DECODED_BODY_SIZE]))
                : ((ds.ts = 0), (ds.ebs = 0), (ds.dbs = 0)),
              (isDefined(ds.it) &&
                (ds.it === "xmlhttprequest" || ds.it === "fetch")) ||
                h$4.push(ds);
          }),
            isDefined(is) && (clearTimeout(is), (is = setTimeout(ts, 1e3)));
        });
      ns.turnOnRecord(),
        ns.startPageActivityObserver(),
        (ts = function () {
          var ss, os, ds, as, cs;
          isDefined(n) && isDefined(n[es.info.uuid])
            ? (isDefined(n) &&
                isDefined(n[es.info.uuid]) &&
                delete n[es.info.uuid],
              0 < ns.mutationRecord.length
                ? 0 < ns.performanceRecord.length
                  ? ((ss = ns.performanceRecord.pop()),
                    (os = ns.mutationRecord.pop()),
                    (es.info.duration =
                      0 < ss - os
                        ? ss - es.info.timestamp
                        : os - es.info.timestamp))
                  : (es.info.duration =
                      ns.mutationRecord.pop() - es.info.timestamp)
                : 0 < ns.performanceRecord.length &&
                  (es.info.duration =
                    ns.performanceRecord.pop() - es.info.timestamp),
              ns.turnOffRecord(),
              ns.stopPageActivityObserver(),
              isDefined(es) &&
                isDefined(h$4) &&
                0 < h$4.length &&
                (es.info.wri = h$4),
              ({
                type: ss,
                ent: os,
                sin: ds,
                data: as,
              } = routeService({ p: es })),
              (cs = u$1.getEviData("value")),
              c$5({
                t: GC.ROUTE_CHANGE_END + rs.id,
                routeData: { k: ss, ent: os, sin: ds, v: as, evi: cs },
              }),
              isDefined(h$4) && (h$4 = []))
            : (ns.turnOffRecord(), ns.stopPageActivityObserver());
        }),
        isDefined(n) && (n[es.info.uuid] = ts),
        (m$4 = Et);
    }
  }
  function H$2() {
    E$6.findElesFun(!0);
  }
  let b$1 = class {
    constructor(Et) {
      (this.currentLocation = extend({}, Et)), (m$4 = this.currentLocation);
    }
    trackHistory() {
      const Et = history.pushState,
        es = history.replaceState;
      isDefined(Et) &&
        !isDefined(Et.$hasHooked) &&
        ((history.pushState = function (ts, is, ns) {
          Et.apply(this, [ts, is, ns]), T$2();
        }),
        (history.pushState.$hasHooked = !0)),
        isDefined(es) &&
          !isDefined(history.replaceState.$hasHooked) &&
          ((history.replaceState = function (ts, is, ns) {
            es.apply(this, [ts, is, ns]), T$2();
          }),
          (history.replaceState.$hasHooked = !0)),
        window.addEventListener("popstate", T$2);
    }
    trackHashchage() {
      window.addEventListener("hashchange", T$2);
    }
    init() {
      this.trackHistory(), this.trackHashchage();
    }
  };
  function k() {
    var Et = new b$1(isDefined(window.location) ? window.location : "");
    Et.init();
  }
  function U$3(Et, es, ts) {
    if (!isReadable(Et.file) && es)
      try {
        for (
          var is,
            ns = /[@(\s]+?([\S]+):(\d+):(\d+)\)?/,
            rs = /[@(\s]+?([\S]+):(\d+)\)?/,
            ss = /([^@(\s)]+):(\d+):(\d+)/,
            os = /([^@(\s)]+):(\d+)/,
            ds = es.split(`
`),
            as = !0,
            cs = function (hs) {
              return (hs = Number(hs)), isNaN(hs) ? 0 : hs;
            },
            fs = 0;
          fs < ds.length;
          fs++
        )
          if (((is = ds[fs]), ns.test(is) || rs.test(is))) {
            if (!as || !ts) {
              var us = last(is.split(/\s+/)),
                ls = ss.exec(us) || os.exec(us);
              (Et.file = ls[1].replace(/^\(/, "")),
                (Et.line = cs(ls[2])),
                (Et.column = cs(ls[3]));
              break;
            }
            (as = !1), (ds[fs] = "");
          }
        ts &&
          (Et.stack = ds
            .join(
              `
`
            )
            .replace(
              /\n+/g,
              `
`
            )
            .replace(/^\n/, ""));
      } catch (hs) {
        log("C146");
      }
  }
  function v$3(Et, es, ts) {
    var is;
    isDefined(es) &&
      ((is = es.name || (es.constructor && es.constructor.name)),
      (Et.name = (is && toString(is)) || ""),
      isReadable(Et.message) ||
        (Et.message = (isReadable(is) ? is + ": " : "") + es.message),
      isReadable(Et.file) || (Et.file = es.fileName),
      isDefined(Et.line) ||
        ((Et.line = es.lineNumber), (Et.column = es.columnNumber)),
      (Et.stack = es.stack),
      (Et.framework = getFramework()),
      U$3(Et, Et.stack, ts));
  }
  var w$2 = new e(function (Et) {
    c$5({ t: GC.ERROR_DATA, p: Et });
  }, E$6.sett.debounce);
  function y(Et, es) {
    (Et = {
      info: extend(Et, {
        message: withLength(Et.message, 200),
        duration: 0,
        type: isDefined(Et.type) ? Et.type : 0,
        count: 1,
        file: withLength(Et.file, 200) || "<anonymous>",
        stack: withLength(Et.stack, 5e3),
        framework: getFramework(),
      }),
    }),
      isDefined(es) && (Et.ext = es),
      w$2.event(Et);
  }
  function h$3() {
    window.onerror = hack(window.onerror, function (Et, es, ts, is, ns) {
      (Et = extend(
        { message: Et, line: ts, column: is, file: es, type: 3 },
        getTime()
      )),
        v$3(Et, ns),
        y(Et);
    });
  }
  function $$1() {
    h$3(),
      v$a(GC.PAGE_READY, function () {
        h$3();
      }),
      addListener(
        window,
        "error",
        function (Et) {
          var es = Et.target || Et.srcElement;
          isDefined(es) &&
            (es instanceof HTMLScriptElement ||
              es instanceof HTMLLinkElement ||
              es instanceof HTMLImageElement) &&
            c$5({
              t: GC.ERROR_DATA,
              p: {
                info: extend(
                  {
                    message: xpath(es),
                    duration: 0,
                    type: 1,
                    count: 1,
                    file: withLength(es.src || Et.filename, 200),
                    line: 0,
                    column: 0,
                    stack: "",
                    framework: getFramework(),
                  },
                  getTime()
                ),
              },
            });
        },
        !0
      ),
      addListener(
        window,
        "unhandledrejection",
        function (Et) {
          var es;
          isDefined(Et) &&
            (isString(Et.reason)
              ? ((es = extend(
                  { message: Et.reason, line: 0, column: 0 },
                  getTime()
                )),
                isDefined(Et.type) && (es.type = 2),
                y(es))
              : N$1(Et.reason));
        },
        !0
      );
  }
  function N$1(Et) {
    if (!isDefined(Et)) return log("C122");
    var es,
      ts = getTime();
    typeof Et == "string"
      ? ((ts.message = Et), v$3(ts, (Et = new Error(Et)), !0))
      : window.ErrorEvent && Et instanceof ErrorEvent
      ? (extend(ts, {
          message: Et.message,
          line: Et.lineno,
          column: Et.colno,
          file: Et.filename,
        }),
        v$3(ts, Et.error),
        isReadable(ts.file) || (Et.target && (ts.file = Et.target.baseURI)))
      : (v$3(ts, Et),
        typeof Et.type == "number" ? (ts.type = Et.type) : (ts.type = 3),
        (es = Et.ext)),
      y(ts, es);
  }
  function g$1() {
    console && console.error && (console.error = h$2(console.error, null, d$3));
  }
  function h$2(Et, es, ts) {
    var is;
    return Et.$original
      ? Et
      : (((is = function () {
          var ns = args(arguments);
          try {
            return (
              isDefined(es) && es.apply(this, ns),
              ns[0] instanceof Error && N$1(ns[0]),
              Et.apply(this, ns)
            );
          } catch (rs) {
            throw rs;
          } finally {
            ts.apply(this, ns);
          }
        }).$original = Et),
        is);
  }
  function d$3() {
    var Et;
    console.$bonree ||
      ((Et = { lv: "error", msg: E$1(args(arguments)) }),
      c$5({ t: GC.CONSOLE_DATA, p: { info: Et } }));
  }
  function E$1(Et) {
    return Et && isArray(Et)
      ? map(Et, function (es) {
          return S((es = es === void 0 ? String(es) : es));
        }).join(" ")
      : Et;
  }
  function S(Et) {
    let es;
    if (isString(Et)) return Et;
    if (Et instanceof Error || Et instanceof Function) return String(Et);
    try {
      es = stringify(Et);
    } catch (ts) {
      es = String(Et);
    }
    return es;
  }
  function Reactive(Et) {
    for (var es in ((this.data = Et), (this.computed = {}), Et))
      Et.hasOwnProperty(es) && this.defineReactive(es, Et[es]);
  }
  w$2.equalsWith(function (Et, es) {
    function ts(is) {
      return is.message + is.line + is.column;
    }
    return ts(Et.info) === ts(es.info);
  }),
    v$a(GC.FLUSH_DATA, function () {
      w$2.flush();
    }),
    (Reactive.prototype.defineReactive = function (Et, es) {
      var ts = this;
      Object.defineProperty(this.data, Et, {
        get: function () {
          return es;
        },
        set: function (is) {
          (es = is), ts.notifyComputed(Et);
        },
      });
    }),
    (Reactive.prototype.defineComputed = function (Et, es) {
      var ts = this;
      Object.defineProperty(this.computed, Et, {
        get: function () {
          return es.call(ts);
        },
      });
    }),
    (Reactive.prototype.notifyComputed = function (Et) {
      for (var es in this.computed)
        this.computed.hasOwnProperty(es) &&
          (this.computed[es].value = this.computed[es].get());
    });
  var m$3 = !1,
    Q = [],
    w$1 = [];
  let R, d$2, p;
  const N = new Reactive({ FP: null, FCP: null, LCP: null });
  var I$3 = [],
    L$4 = [],
    X = !1,
    l = 0;
  const B$2 = (Et, es) => {
      try {
        PerformanceObserver.supportedEntryTypes.includes(Et) &&
          new PerformanceObserver((ts) => {
            es(ts.getEntries());
          }).observe({ type: Et, buffered: !0 });
      } catch (ts) {
        log("C114");
      }
    },
    re = (Et) => {
      forEach(Et, function (es) {
        es.name === "first-paint" &&
          ((R = (es[GC.START_TIME] && es[GC.START_TIME]) || ""),
          (N.data.FP = (es[GC.START_TIME] && es[GC.START_TIME]) || ""),
          N.computed.allin),
          es.name === "first-contentful-paint" &&
            ((d$2 = (es[GC.START_TIME] && es[GC.START_TIME]) || ""),
            (N.data.FCP = (es[GC.START_TIME] && es[GC.START_TIME]) || ""),
            N.computed.allin);
      }),
        !R && d$2
          ? ((R = d$2), (N.data.FP = d$2), N.computed.allin)
          : !d$2 && R && ((d$2 = R), (N.data.FCP = R), N.computed.allin);
    },
    Ee$2 = (Et) => {
      let es = 0,
        ts = 0;
      for (var is of Et) is.size > es && ((es = is.size), (ts = is.startTime));
      (p = ts), (N.data.LCP = ts || 0), N.computed.allin;
    },
    oe = (Et) => {
      Q = Et;
    };
  function ie() {
    B$2("largest-contentful-paint", Ee$2), B$2("longtask", oe);
  }
  function ae() {
    B$2("paint", re);
  }
  function _e() {
    var Et, es, ts;
    return u$1.state
      ? ((isDefined(R) && isDefined(d$2)) ||
          !window.performance.getEntriesByType ||
          forEach(window.performance.getEntriesByType("paint"), function (is) {
            is.name === "first-paint" &&
              (R = (is[GC.START_TIME] && is[GC.START_TIME]) || 0),
              is.name === "first-contentful-paint" &&
                (d$2 = (is[GC.START_TIME] && is[GC.START_TIME]) || 0);
          }),
        isDefined(R) ||
          ((es = (Et = window.performance.timing)[GC.NAVIGATION_START]),
          Et.msFirstPaint && (log("C111"), (R = Et.msFirstPaint - es)),
          window.chrome &&
            window.chrome.loadTimes &&
            (ts = window.chrome.loadTimes()) &&
            ts.firstPaintTime &&
            (log("C112"), (R = ts.firstPaintTime - es)),
          /^((?!chrome|android).)*safari/i.test(navigator.userAgent) &&
            (log("C159"),
            Et.responseEnd
              ? (R = Et.responseEnd - es)
              : Et.domInteractive && (R = Et.domInteractive - es))),
        isDefined(d$2) || (d$2 = R),
        (isDefined(p) && p != 0) || (p = d$2),
        {
          fp: R ? Math.round(R) : 0,
          fcp: d$2 ? Math.round(d$2) : 0,
          lcp: p ? Math.round(p) : 0,
        })
      : log("C110");
  }
  function _(Et, es) {
    return 0 < Et ? Et - es : 0;
  }
  function fe() {
    var Et =
        window.performance || window.msPerformance || window.webkitPerformance,
      es = Et.getEntriesByType("resource") || [];
    return es.length === 0
      ? isDefined(Et.timing)
        ? 0 < Et.timing[GC.LOAD_EVENT_END] - Et.timing[GC.NAVIGATION_START]
          ? Et.timing[GC.LOAD_EVENT_END] - Et.timing[GC.NAVIGATION_START]
          : 0
        : 10
      : ((Et = map(es, function (ts) {
          return ts.responseEnd;
        }).sort((ts, is) => is - ts)),
        Math.round(Et[0]));
  }
  function Re() {
    var Et = document.querySelector(".tox-sidebar-wrap");
    Et && Et.classList.add("rr-block");
  }
  function q$1() {
    Re();
    let Et = d$5({ p: { info: { url: E$6.sett.pageUrl } } }, E$6.sett).p.info
      .url;
    if (
      (E$6.setData("pageUrl", Et),
      c$5({ t: GC.PAGE_LOAD }),
      ae(),
      window === window.top)
    ) {
      const es = PerformanceObserver.supportedEntryTypes || null;
      es && es.includes("largest-contentful-paint")
        ? N.defineComputed("allin", function () {
            return (
              this.data.FP !== null &&
                this.data.FCP !== null &&
                this.data.LCP !== null &&
                delay(function () {
                  P$1();
                }),
              this.data.FP !== null &&
                this.data.FCP !== null &&
                this.data.LCP !== null
            );
          })
        : delay(function () {
            P$1();
          }),
        parentReceiveMsg(),
        isDefined(E$6.sett.RecordConfiguration || E$6.sett.mc) &&
          (isDefined(window.BonreeRecord) &&
          isDefined(window.BonreeRecord.BonreeRecord)
            ? window.BonreeRecord.BonreeRecord(E$6.sett)
            : isDefined(window.BonreeAgent) &&
              isDefined(window.BonreeAgent.BonreeRecord) &&
              window.BonreeAgent.BonreeRecord(E$6.sett));
    } else sunLoaded(P$1), sunReceiveMsg(P$1);
  }
  function P$1(Et) {
    m$3 ||
      ((m$3 = !0),
      c$5({ t: GC.RESOURCE_DATA, p: Oe(), type: 1 }),
      c$5({ t: GC.RESOURCE_DATA, p: Se(), type: 2, special: X }),
      l === 0 &&
        (d$a(GC.LIFESTYLE_XHR_START),
        d$a(GC.LIFESTYLE_FETCH_START),
        d$a(GC.LIFESTYLE_REQUEST_END + "H5"),
        c$5({ t: GC.RESOURCE_DATA, p: {}, type: 3, revts: I$3 }),
        isEmpty(E$6.secondSett) ||
          c$5({ t: GC.RESOURCE_DATA, p: {}, type: 4, revts: L$4 }))),
      c$5({ t: GC.FLUSH_DATA, p: !!Et });
  }
  function Se() {
    var Et;
    return window.performance && window.performance.getEntriesByType
      ? ((Et = w$1.concat(window.performance.getEntriesByType("resource"))),
        (w$1 = []),
        map(Et, function (es) {
          var ts,
            is,
            ns = es[GC.INITIATOR_TYPE],
            rs = es.entryType,
            ss = getMineTypeByUrl(es.name);
          if (
            (isDefined(es.name) &&
              es.name.indexOf(E$6.sett.uploadAddrHttps) === -1) ||
            (isDefined(es.name) &&
              es.name.indexOf(E$6.sett.uploadAddrHttp) === -1)
          )
            return (
              (is = {}),
              ((ts = {}).name = d$5(
                { p: { info: { url: es.name } } },
                E$6.sett
              ).p.info.url),
              (ts[GC.START_TIME] = getFixedMetric(es, GC.START_TIME)),
              (ts[GC.INITIATOR_TYPE] = ns),
              (ts.entryType = rs),
              (ts.ret = ss),
              (is[GC.WORKER_START] = getFixedMetric(es, GC.WORKER_START)),
              (is[GC.REDIRECT_START] = getFixedMetric(es, GC.REDIRECT_START)),
              (is[GC.REDIRECT_END] = getFixedMetric(es, GC.REDIRECT_END)),
              (is[GC.FETCH_START] = getFixedMetric(es, GC.FETCH_START)),
              (is[GC.DOMAIN_LOOKUP_START] = getFixedMetric(
                es,
                GC.DOMAIN_LOOKUP_START
              )),
              (is[GC.DOMAIN_LOOKUP_END] = getFixedMetric(
                es,
                GC.DOMAIN_LOOKUP_END
              )),
              (is[GC.CONNECT_START] = getFixedMetric(es, GC.CONNECT_START)),
              (is[GC.CONNECT_END] = getFixedMetric(es, GC.CONNECT_END)),
              (is[GC.SECURE_CONNECTION_START] = getFixedMetric(
                es,
                GC.SECURE_CONNECTION_START
              )),
              (is[GC.REQUEST_START] = getFixedMetric(es, GC.REQUEST_START)),
              (is[GC.RESPONSE_START] = getFixedMetric(es, GC.RESPONSE_START)),
              (is[GC.RESPONSE_END] = getFixedMetric(es, GC.RESPONSE_END)),
              (is[GC.RESPONSE_STATUS] = es[GC.RESPONSE_STATUS]),
              (ts[GC.DURATION] = isDefined(es[GC.DURATION])
                ? getFixedMetric(es, GC.DURATION)
                : is[GC.RESPONSE_END] - is[GC.START_TIME]),
              isDefined(es[GC.DECODED_BODY_SIZE]) &&
                ((ts[GC.NEXT_HOP_PROTOCOL] = es[GC.NEXT_HOP_PROTOCOL]),
                (is[GC.TRANSFER_SIZE] = es[GC.TRANSFER_SIZE]),
                (is[GC.ENCODED_BODY_SIZE] =
                  es[GC.ENCODED_BODY_SIZE] >= Math.pow(2, 64)
                    ? Math.pow(2, 60)
                    : es[GC.ENCODED_BODY_SIZE]),
                (is[GC.DECODED_BODY_SIZE] = es[GC.DECODED_BODY_SIZE])),
              { info: ts, metric: is }
            );
        }))
      : (log("C116"), []);
  }
  function se(Et, es) {
    var ts =
      performance.timing.domContentLoadedEventEnd -
      performance.timing.domContentLoadedEventStart;
    {
      var is = Et,
        ns = es,
        rs = performance.getEntriesByType("resource"),
        ss = ts;
      let ds,
        as = is;
      for (; is + 5e3 <= 5e4; ) {
        as = is;
        var os = ns.filter(
          (cs) => cs.startTime < is + 5e3 && cs.startTime + cs.duration > is
        );
        if (os.length) {
          const cs = os[os.length - 1];
          is = cs.startTime + cs.duration;
        } else {
          if (
            !(
              2 <
              (ds = rs.filter(
                (cs) =>
                  !(
                    cs.startTime >= is + 5e3 || cs.startTime + cs.duration <= is
                  )
              )).length
            )
          )
            return Math.max(as, ss);
          {
            const cs = ds[0];
            is = cs.startTime + cs.duration;
          }
        }
      }
      return Math.max(as, ss);
    }
  }
  function Oe() {
    var Et,
      es,
      ts = window.screen || {},
      ts = {
        timestamp: now(0),
        title: u$1.title,
        referrer: document.referrer,
        charset: document.characterSet || document.charset || "",
        embed: window.top && window.self && window.top !== window.self ? 1 : 0,
        width: ts.width || 0,
        height: ts.height || 0,
        completed: u$1.state,
        param: (location && location.search) || "",
      },
      is = window.performance && window.performance.timing;
    return (
      (ts.supported = isDefined(is) ? 1 : 0),
      is
        ? ((is = {}),
          (Et =
            (es = window.performance.timing)[GC.NAVIGATION_START] ||
            es[GC.FETCH_START]),
          (is[GC.NAVIGATION_START] = Et || ""),
          (is[GC.UNLOAD_EVENT_START] = _(es[GC.UNLOAD_EVENT_START], Et)),
          (is[GC.UNLOAD_EVENT_END] = _(es[GC.UNLOAD_EVENT_END], Et)),
          (is[GC.REDIRECT_START] = _(es[GC.REDIRECT_START], Et)),
          (is[GC.REDIRECT_END] = _(es[GC.REDIRECT_END], Et)),
          (is[GC.FETCH_START] = _(es[GC.FETCH_START], Et)),
          (is[GC.DOMAIN_LOOKUP_START] = _(es[GC.DOMAIN_LOOKUP_START], Et)),
          (is[GC.DOMAIN_LOOKUP_END] = _(es[GC.DOMAIN_LOOKUP_END], Et)),
          (is[GC.CONNECT_START] = _(es[GC.CONNECT_START], Et)),
          (is[GC.CONNECT_END] = _(es[GC.CONNECT_END], Et)),
          (is[GC.SECURE_CONNECTION_START] = _(
            es[GC.SECURE_CONNECTION_START],
            Et
          )),
          (is[GC.REQUEST_START] = _(es[GC.REQUEST_START], Et)),
          (is[GC.RESPONSE_START] = _(es[GC.RESPONSE_START], Et)),
          (is[GC.RESPONSE_END] = _(es[GC.RESPONSE_END], Et)),
          (is[GC.DOM_LOADING] = _(es[GC.DOM_LOADING], Et)),
          (is[GC.DOM_INTERACTIVE] = _(es[GC.DOM_INTERACTIVE], Et)),
          (is[GC.DOM_CONTENT_LOADED_EVENT_START] = _(
            es[GC.DOM_CONTENT_LOADED_EVENT_START],
            Et
          )),
          (is[GC.DOM_CONTENT_LOADED_EVENT_END] = _(
            es[GC.DOM_CONTENT_LOADED_EVENT_END],
            Et
          )),
          (is[GC.DOM_COMPLETE] = _(es[GC.DOM_COMPLETE], Et)),
          (is[GC.LOAD_EVENT_START] = _(es[GC.LOAD_EVENT_START], Et)),
          (is[GC.LOAD_EVENT_END] = _(es[GC.LOAD_EVENT_END], Et)),
          (is[GC.FULL_RESOURCE_LOAD_TIME] = fe()),
          (ts[GC.DURATION] = u$1.state
            ? Math.max(0, is[GC.LOAD_EVENT_END], is[GC.LOAD_EVENT_START])
            : Math.round(tillNow() / 1e3)),
          window.performance.getEntriesByType &&
            isDefined(
              (es = last(window.performance.getEntriesByType("navigation")))
            ) &&
            ((ts.type = es.type),
            (ts[GC.NEXT_HOP_PROTOCOL] = es[GC.NEXT_HOP_PROTOCOL]),
            (is[GC.REDIRECT_COUNT] = es[GC.REDIRECT_COUNT]),
            (is[GC.TRANSFER_SIZE] = es[GC.TRANSFER_SIZE]),
            (is[GC.ENCODED_BODY_SIZE] = es[GC.ENCODED_BODY_SIZE]),
            (is[GC.DECODED_BODY_SIZE] = es[GC.DECODED_BODY_SIZE]),
            (is[GC.RESPONSE_STATUS] = es[GC.RESPONSE_STATUS])),
          extend(is, (Et = _e())),
          Et &&
            Et.fcp &&
            ((es = se(Et.fcp, Q) || 0), extend(is, { tti: Math.round(es) })),
          { info: ts, metric: is })
        : (log("C109"), (ts[GC.DURATION] = tillNow()), { info: ts })
    );
  }
  function de$1() {
    var Et;
    window.performance &&
      window.performance.getEntriesByType &&
      ((Et = function (es) {
        return function () {
          log("Dump when resource buffer is full");
          var ts = window.performance.getEntriesByType("resource"),
            ts =
              (c$5({ t: GC.RESOURCE_DUMP, p: ts }),
              m$3 || (w$1 = w$1.concat(ts)),
              es + "learResourceTimings");
          ts in window.performance && window.performance[ts]();
        };
      }),
      addListener(window.performance, "resourcetimingbufferfull", Et("c"), !1),
      addListener(
        window.performance,
        "webkitresourcetimingbufferfull",
        Et("webkitC"),
        !1
      ));
  }
  function Ne() {
    v$a(GC.LIFESTYLE_XHR_START, function (Et) {
      isDefined(Et.info) && (Et.info.isRelatedH5 = !0), (l += 1);
    }),
      v$a(GC.LIFESTYLE_FETCH_START, function (Et) {
        isDefined(Et.info) && (Et.info.isRelatedH5 = !0), (l += 1);
      }),
      v$a(GC.LIFESTYLE_REQUEST_END + "H5", function (Et) {
        --l;
        var es = Q$1(JSON.parse(JSON.stringify(Et.requestData)), E$6.sett, !0),
          ts = u$1.getEviData("value");
        I$3.push({ k: es.type, ent: es.ent, sin: es.sin, v: es.data, evi: ts }),
          !isEmpty(E$6.secondSett) &&
            checkMoudle("network") &&
            ((es = Q$1(
              JSON.parse(JSON.stringify(Et.requestData)),
              E$6.secondSett,
              !0
            )),
            L$4.push({
              k: es.type,
              ent: es.ent,
              sin: es.sin,
              v: es.data,
              evi: ts,
            })),
          l === 0 &&
            (d$a(GC.LIFESTYLE_XHR_START),
            d$a(GC.LIFESTYLE_FETCH_START),
            d$a(GC.LIFESTYLE_REQUEST_END + "H5"),
            c$5({ t: GC.RESOURCE_DATA, p: {}, type: 3, revts: I$3 }),
            isEmpty(E$6.secondSett) ||
              c$5({ t: GC.RESOURCE_DATA, p: {}, type: 4, revts: L$4 }));
      }),
      addListener(document, "DOMContentLoaded", function () {
        c$5({ t: GC.PAGE_READY });
      }),
      document.readyState !== "complete" || m$3
        ? on$1(window, "load", q$1)
        : (startWith(document.location.href, "about:") &&
            startWith(document.URL, "about:")) ||
          (q$1.call(), (X = !0)),
      on$1(
        window,
        "pagehide",
        function () {
          A$4(!0);
        },
        !1
      ),
      ie(),
      de$1();
  }
  var O$1 = [],
    A$1,
    D$2 = [],
    I$2 = [GC.XML_HTTP_REQUEST, GC.FETCH],
    b = function (Et, es) {
      return Et[GC.START_TIME] - es[GC.START_TIME];
    };
  function getCookieUserID() {
    var Et = g$6.cookieArr,
      es = g$6.configeManage;
    if (0 < Et.length)
      for (let is = 0, ns = Et.length - 1; is <= ns; is++) {
        var ts = getCookie(Et[is].rule);
        if (isDefined(ts) && u$3(ts) && Et[is].index <= g$6.isStopGetValue)
          return (es[Et[is].index].value = "" + ts), g$6.checkValueRight();
      }
  }
  function F(rs) {
    var es,
      ts = rs.url,
      is = rs[GC.TIMESTAMP],
      ns = I$2[rs.type],
      rs = map(D$2, function (os) {
        if (os.url === ts && I$2[os.type] === ns) return os;
      }),
      ss = (rs.sort(b), -1);
    if (
      (forEach(rs, function (os, ds) {
        if (os[GC.TIMESTAMP] === is) return (ss = ds), !1;
      }),
      !(ss < 0))
    )
      return (
        (rs = map(O$1, function (os, ds) {
          if (v$2(os, ts, ns)) return os;
        })),
        ss >= rs.length
          ? (log("C131"),
            (es = []),
            window.performance.getEntriesByType &&
              (es = map(
                window.performance.getEntriesByType("resource"),
                function (os) {
                  if (v$2(os, ts, ns)) return os;
                }
              )),
            (rs = rs.concat(es)))
          : log("C132"),
        rs.sort(b),
        rs.length < 1 || ss >= rs.length ? void log("C133") : rs[ss]
      );
    log("C130");
  }
  function m$2(Et) {
    return (
      (Et.initiatorType === GC.XML_HTTP_REQUEST ||
        Et.initiatorType === GC.FETCH) &&
      Et[GC.START_TIME] > A$1
    );
  }
  function v$2(Et, es, ts) {
    return m$2(Et) && endWith(Et.name, es) && Et.initiatorType === ts;
  }
  function L$3(Et) {
    return 0 < Et && Et < 600;
  }
  var extendMetrics = function (Et) {
      var es, ts, is;
      return (
        window.performance && window.performance.now
          ? L$3((es = Et.info).status || es.code)
            ? isDefined((ts = F(es)))
              ? ((is = Et.metric),
                (es[GC.START_TIME] = 1e3 * getFixedMetric(ts, GC.START_TIME)),
                (es[GC.TIMESTAMP] =
                  1e3 *
                  (es[GC.START_TIME] / 1e3 +
                    window.performance.timing.navigationStart)),
                (es[GC.DURATION] = 1e3 * getFixedMetric(ts, GC.DURATION)),
                (is[GC.REDIRECT_START] =
                  1e3 * getFixedMetric(ts, GC.REDIRECT_START)),
                (is[GC.REDIRECT_END] =
                  1e3 * getFixedMetric(ts, GC.REDIRECT_END)),
                (is[GC.FETCH_START] = 1e3 * getFixedMetric(ts, GC.FETCH_START)),
                (is[GC.DOMAIN_LOOKUP_START] =
                  1e3 * getFixedMetric(ts, GC.DOMAIN_LOOKUP_START)),
                (is[GC.DOMAIN_LOOKUP_END] =
                  1e3 * getFixedMetric(ts, GC.DOMAIN_LOOKUP_END)),
                (is[GC.CONNECT_START] =
                  1e3 * getFixedMetric(ts, GC.CONNECT_START)),
                (is[GC.CONNECT_END] = 1e3 * getFixedMetric(ts, GC.CONNECT_END)),
                (is[GC.SECURE_CONNECTION_START] =
                  1e3 * getFixedMetric(ts, GC.SECURE_CONNECTION_START)),
                (is[GC.RESPONSE_START] =
                  1e3 * getFixedMetric(ts, GC.RESPONSE_START)),
                (is[GC.REQUEST_START] =
                  1e3 * getFixedMetric(ts, GC.REQUEST_START)),
                (is[GC.RESPONSE_END] =
                  1e3 * getFixedMetric(ts, GC.RESPONSE_END)),
                isDefined(ts[GC.DECODED_BODY_SIZE]) &&
                  ((es[GC.NEXT_HOP_PROTOCOL] = ts[GC.NEXT_HOP_PROTOCOL]),
                  (is[GC.WORKER_START] =
                    1e3 * getFixedMetric(ts, GC.WORKER_START)),
                  (is[GC.TRANSFER_SIZE] = getFixedMetric(ts, GC.TRANSFER_SIZE)),
                  (is[GC.ENCODED_BODY_SIZE] = getFixedMetric(
                    ts,
                    GC.ENCODED_BODY_SIZE
                  )),
                  (is[GC.DECODED_BODY_SIZE] = getFixedMetric(
                    ts,
                    GC.DECODED_BODY_SIZE
                  ))))
              : log("C137")
            : log("C135")
          : log("C134"),
        Et
      );
    },
    polyfillMetric = function (Et) {
      var es = Et.info,
        ts = Et.metric;
      return (
        isDefined(es[GC.DURATION]) ||
          (es[GC.DURATION] = ts[GC.RESPONSE_END] - es[GC.START_TIME]),
        isDefined(es.callbackError) || (es.callbackError = 0),
        Et
      );
    },
    queueRequest = function (Et) {
      var es = Et.info;
      L$3(es.status || es.code) && D$2.push(Et.info);
    };
  function H$1() {
    (A$1 = tillNow() / 1e3 || 0),
      v$a(GC.RESOURCE_DUMP, function (Et) {
        (Et = map(Et.p, function (es) {
          if (m$2(es)) return es;
        })),
          (O$1 = O$1.concat(Et));
      });
  }
  class Z {
    constructor() {
      (this.list = {}), (this.isOpen = !1), (this.blackKey = []);
    }
    checkIsOpen() {
      (isDefined(E$6.sett.brss) && !E$6.sett.brss) ||
      (isDefined(E$6.secondSett.brss) && !E$6.secondSett.brss)
        ? (this.isOpen = !1)
        : (this.isOpen = !0);
    }
    getItem(es, ts, is) {
      var ns = es + "+" + ts;
      return isDefined(es) && this.list[ns]
        ? this.list[ns]
        : this.setItem(es, ts, is);
    }
    setItem(es, ts, is) {
      let {
          urlTotalList: ns,
          urlWhiteList: rs,
          urlBlackList: ss,
        } = isDefined(E$6.sett.traceConfig)
          ? E$6.sett.traceConfig
          : { urlTotalList: [], urlBlackList: [], urlWhiteList: [] },
        os =
          (isDefined(E$6.secondSett.traceConfig) &&
            (isDefined(E$6.secondSett.traceConfig.urlTotalList) &&
              (ns = isDefined(ns)
                ? ns.concat(E$6.secondSett.traceConfig.urlTotalList)
                : E$6.secondSett.traceConfig.urlTotalList),
            isDefined(E$6.secondSett.traceConfig.urlWhiteList) &&
              (rs = isDefined(rs)
                ? rs.concat(E$6.secondSett.traceConfig.urlWhiteList)
                : E$6.secondSett.traceConfig.urlWhiteList),
            isDefined(E$6.secondSett.traceConfig.urlBlackList)) &&
            (ss = isDefined(ss)
              ? ss.concat(E$6.secondSett.traceConfig.urlBlackList)
              : E$6.secondSett.traceConfig.urlBlackList),
          {});
      if (isDefined(ns) && 0 < ns.length)
        for (
          let ds = 0,
            as = (ns = 200 < ns.length ? ns.slice(0, 200) : ns).length - 1;
          ds <= as;
          ds++
        )
          extend(os, this.totalHead(ns[ds], es, ts, is));
      if (isDefined(rs) && 0 < rs.length)
        for (
          let ds = 0,
            as = (rs = 200 < rs.length ? rs.slice(0, 200) : rs).length - 1;
          ds <= as;
          ds++
        )
          this.whiteCheck(es, rs[ds]) &&
            extend(os, this.whiteHead(rs[ds], es, ts, is));
      if (isDefined(ss) && 0 < ss.length)
        for (
          let ds = 0,
            as = (ss = 200 < ss.length ? ss.slice(0, 200) : ss).length - 1;
          ds <= as;
          ds++
        )
          this.black(es, ss[ds])
            ? extend(os, this.blackHead(ss[ds], es, ts, is))
            : this.getBlackKey(ss[ds]);
      return (
        200 < Object.keys(os).length && (os = getElementForNum(os, 200)),
        (os = this.delBlackKey(os)),
        (this.list[es + "+" + ts] = os)
      );
    }
    delBlackKey(es) {
      if (0 < this.blackKey.length)
        for (let ts = 0, is = this.blackKey.length - 1; ts <= is; ts++)
          isDefined(es[this.blackKey[ts]]) && delete es[this.blackKey[ts]];
      return (this.blackKey = []), es;
    }
    getBlackKey(es) {
      var ts = es && es.reqHeaderRules;
      if (isDefined(ts) && 0 < ts.length && this.blackKey)
        for (let is = 0, ns = ts.length - 1; is <= ns; is++)
          ts[is] && ts[is].key && this.blackKey.push(ts[is].key);
    }
    totalHead(es, ts, is, ns) {
      var rs = {};
      return extend(rs, this.constructData(es, ts, is, ns)), rs;
    }
    whiteCheck(es, ts) {
      if (ts.reqHeaderRules && 0 < ts.reqHeaderRules.length) {
        if (includes([0, 1, 2, 3, 4], ts.type) === !1) return !1;
        switch (ts.type) {
          case 0:
            if (es == ts.rule) return !0;
            break;
          case 1:
            if (startWith(es, ts.rule)) return !0;
            break;
          case 2:
            if (endWith(es, ts.rule)) return !0;
            break;
          case 3:
            var is = new RegExp(ts.rule);
            if (is instanceof RegExp && is.test(es)) return !0;
            break;
          case 4:
            if (-1 < es.indexOf(ts.rule)) return !0;
            break;
          default:
            return !1;
        }
      }
      return !1;
    }
    whiteHead(es, ts, is, ns) {
      var rs = es.reqHeaderRules,
        ss = {};
      if (isDefined(rs) && 0 < rs.length)
        for (let os = 0, ds = rs.length - 1; os <= ds; os++)
          extend(ss, this.constructData(rs[os], ts, is, ns));
      return ss;
    }
    black(es, ts) {
      if (ts.reqHeaderRules && 0 < ts.reqHeaderRules.length) {
        if (includes([0, 1, 2, 3, 4], ts.type) === !1) return !1;
        switch (ts.type) {
          case 0:
            if (es == ts.rule) return !1;
            break;
          case 1:
            if (startWith(es, ts.rule)) return !1;
            break;
          case 2:
            if (endWith(es, ts.rule)) return !1;
            break;
          case 3:
            var is = new RegExp(ts.rule);
            if (is instanceof RegExp && is.test(es)) return !1;
            break;
          case 4:
            if (-1 < es.indexOf(ts.rule)) return !1;
            break;
          default:
            return !0;
        }
      }
      return !0;
    }
    blackHead(es, ts, is, ns) {
      var rs = es.reqHeaderRules,
        ss = {};
      if (isDefined(rs) && 0 < rs.length)
        for (let os = 0, ds = rs.length - 1; os <= ds; os++)
          extend(ss, this.constructData(rs[os], ts, is, ns));
      return ss;
    }
    checkKey(es, ts, is) {
      return (
        !(!is || is === 1) ||
        (!(!isDefined(es) || es.length > ts) &&
          (ts === 256 ? !!/^[0-9a-zA-Z_-]{1,256}$/.test(es) : trim(es) != ""))
      );
    }
    constructData(es, ts, is, ns) {
      var rs = {},
        ss = getUserAgent(),
        os =
          (ss && ss.osName + "/" + ss.osVersion) ||
          (E$6.sett.osType && E$6.sett.typeArr[E$6.sett.osType]) ||
          E$6.sett.typeArr[1],
        ds = es.rhsr;
      if (isDefined(es) && isDefined(es.type) && this.checkKey(es.key, 256)) {
        if (isDefined(es.value) && this.checkKey(es.value, 512, es.type) === !1)
          return;
        switch (es.type) {
          case 1:
            isDefined(es.value) && (rs[es.key] = es.value);
            break;
          case 2:
            rs[es.key] = { fun: uuidWithLength, len: 16 };
            break;
          case 3:
            rs[es.key] = { fun: uuidWithLength, len: 32 };
            break;
          case 4:
            rs[es.key] = {
              fun: skyData,
              len: 32,
              sky: !0,
              url: ts,
              pathname: is,
              rhsr: ds,
            };
            break;
          case 5:
            rs[es.key] = { fun: traceId, len: 32, sky: !1, rhsr: ds };
            break;
          case 6:
            rs[es.key] = "bnro=" + os + "_js/" + E$6.sett.agentVersion;
        }
      }
      return rs;
    }
  }
  let BWexample = new Z();
  function checkBlackAndWhite(Et, es) {
    if (
      isDefined(Et.url) &&
      ((Et =
        (Et = Et.url).indexOf("http") === 0
          ? (ts = Et.match(
              /^(https?\:)\/\/(([^:\/?#]*)(?:\:([0-9]+))?)([\/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/
            )) && {
              href: Et,
              protocol: ts[1],
              host: ts[2],
              hostname: ts[3],
              port: ts[4],
              pathname: ts[5],
              search: ts[6],
              hash: ts[7],
            }
          : (ts = Et.match(
              /^(file?\:)\/\/(([^:\/?#]*)(?:\:([0-9]+))?)([\/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/
            )) && {
              href: Et,
              protocol: ts[1],
              host: ts[2],
              hostname: ts[3],
              port: ts[4],
              pathname: ts[5],
              search: ts[6],
              hash: ts[7],
            }),
      isDefined(Et))
    )
      return (
        (ts = isDefined(Et.hostname) ? Et.hostname : ""),
        (Et = isDefined(Et.pathname) ? Et.pathname : ""),
        isDefined(ts) ? BWexample.getItem(ts, Et, es) : void 0
      );
    var ts;
  }
  function skyData(ds, os, ts) {
    var is = String(enBase64(skyUuid())),
      ns = String(enBase64(skyUuid())),
      rs = String(enBase64(E$6.sett.appName)),
      ss = String(enBase64(E$6.sett.appVersion)),
      os = (os && String(enBase64(os))) || String(enBase64("/")),
      ds = String(enBase64(ds));
    return !(0 <= ts && ts <= 100) || t(ts)
      ? `1-${is}-${ns}-0-${rs}-${ss}-${os}-` + ds
      : `0-${is}-${ns}-0-${rs}-${ss}-${os}-` + ds;
  }
  var h$1 = { isPeriod: !1, actionID: "", networkID: "" };
  function H(Et, es, ts) {
    !Et.$metric ||
      (isDefined((Et = Et.$metric.metric)[es]) && !ts) ||
      (Et[es] = tillNow());
  }
  function ue$1(Et, es, ts) {
    Et.$metric && (Et.$metric.info[es] = ts);
  }
  function safetySetErrorInfo(Et, es, ts, is, ns) {
    Et.$metric &&
      (((Et = Et.$metric.info)[es] = ts),
      (Et[GC.MESSAGE] = ns),
      (Et[GC.E_TYPE] = is));
  }
  function v$1(Et, es) {
    let ts = es;
    (es = getIP(
      (ts = getUrl((ts = typeof es != "string" ? es.href || "" : ts)))
    )),
      this.$$inner ||
        ((this.$metric = {
          info: {
            id: uuid(),
            url: ts.slice(0, 4096),
            ip: es[0] || "",
            port: es[1] || "",
            method: toUpper(Et),
            type: 0,
            protocalType: -1 < ts.indexOf("https") ? 2 : 1,
            reqUrlDta:
              (isDefined(E$6.sett.reqURLKey || E$6.secondSett.reqURLKey) &&
                getParams(ts)) ||
              "",
            reqhtData: {},
            reshtData: {},
          },
        }),
        isDefined(E$6.sett) &&
          isDefined(E$6.sett.pageViewId) &&
          (this.$metric.info.pageViewId = E$6.sett.pageViewId));
  }
  function x$1() {
    var Et,
      es = this;
    BWexample.checkIsOpen(),
      this.$metric &&
        isDefined(this.$metric.info) &&
        BWexample.isOpen &&
        ((this.$metric.info.timestamp = now()),
        isDefined((Et = checkBlackAndWhite(this.$metric.info, "_xhr")))) &&
        isObj(Et) &&
        forEachOwn(Et, function (ts, is) {
          var ns;
          isObj(ts)
            ? ((ns = (ns = ts).sky
                ? ts.fun(ts.url, ts.pathname, ts.rhsr)
                : ts.sky === !1
                ? ts.fun(ts.rhsr)
                : ts.fun(ts.len)),
              es.setRequestHeader(is, ns),
              L$2(is, ns, es.$metric))
            : (startWith(ts, "bnro=") &&
                (isDefined(E$6.secondSett.appId) &&
                isDefined(E$6.secondSett.sessionId)
                  ? (ts +=
                      "_xhr_XMLHttpRequest,rum=" +
                      E$6.sett.agentVersion +
                      "&js&" +
                      E$6.secondSett.appId +
                      "&" +
                      E$6.secondSett.sessionId)
                  : (ts += "_xhr_XMLHttpRequest")),
              L$2(is, ts, es.$metric),
              es.setRequestHeader(is, ts));
        });
  }
  function getParams(Et) {
    return isDefined(Et) ? String.prototype.split.call(Et, "?")[1] : "";
  }
  function de(Et) {
    if (this.$metric && !this.$$done) {
      this.$$done = !0;
      var es,
        ts = this.$metric,
        is = ts.info,
        ns = ts.metric;
      extendMetrics(ts), polyfillMetric(ts);
      try {
        if (
          ((!isDefined(ns[GC.DECODED_BODY_SIZE]) ||
            ns[GC.DECODED_BODY_SIZE] <= 0) &&
            ((es =
              this.responseType === "" || this.responseType === "text"
                ? getContentSize(this.responseText)
                : getContentSize(this.response)),
            (ns[GC.DECODED_BODY_SIZE] = es)),
          this.getAllResponseHeaders)
        ) {
          var rs = this.getAllResponseHeaders(),
            ss = rs,
            os = toLower(ss),
            ds = ss.trim().split(/[\r\n]+/),
            as = {},
            cs =
              (ds.forEach(function (ls) {
                var ls = ls.split(": "),
                  us = ls.shift(),
                  ls = ls.join(": ");
                as[us] = ls;
              }),
              (is.guid =
                (isDefined(as[GC.GUID_KEY]) && as[GC.GUID_KEY].split(",")[0]) ||
                ""),
              (is.xBrResponse =
                (isDefined(as[GC.X_BR_RESPONSE]) &&
                  as[GC.X_BR_RESPONSE].split(",")[0]) ||
                ""),
              (is.traceResponse =
                (isDefined(as[GC.TRACE_RESPONSE]) &&
                  as[GC.TRACE_RESPONSE].split(",")[0]) ||
                ""),
              (is[GC.RESPONSE_HEADER] = withLength(ss, 2e3)),
              []);
          if (
            (isDefined(E$6.sett.respHeaderTraceKey) &&
              0 < E$6.sett.respHeaderTraceKey.length) ||
            (isDefined(E$6.secondSett.respHeaderTraceKey) &&
              0 < E$6.secondSett.respHeaderTraceKey.length)
          ) {
            isDefined(E$6.secondSett.respHeaderTraceKey) &&
            0 < E$6.secondSett.respHeaderTraceKey.length
              ? (cs = isDefined(E$6.sett.respHeaderTraceKey)
                  ? E$6.sett.respHeaderTraceKey.concat(
                      E$6.secondSett.respHeaderTraceKey
                    )
                  : E$6.secondSett.respHeaderTraceKey)
              : isDefined(E$6.sett.respHeaderTraceKey) &&
                (cs = E$6.sett.respHeaderTraceKey);
            for (let fs = 0, us = cs.length - 1; fs <= us; fs++)
              -1 < os.indexOf(toLower(cs[fs])) &&
                (is.reshtData[cs[fs]] = this.getResponseHeader(cs[fs]));
          }
          getResponseHead(rs);
        }
      } catch (fs) {
        log("C123");
      }
      c$5({
        t: GC.REQUEST_DATA,
        p: ts,
        isRelatedH5: !!isDefined(ts.info.isRelatedH5),
      }),
        setTimeout(function () {
          getCookieUserID();
        }, 50);
    }
  }
  function getResponseHead(Et) {
    if (0 < (Et = Et.trim()).length) {
      let ns = Et.split(/[\r\n]+/),
        rs = {};
      ns.forEach(function (ds) {
        var ds = ds.split(": "),
          os = ds.shift(),
          ds = ds.join(": ");
        rs[os] = ds;
      });
      var es = g$6.responseArr,
        ts = g$6.configeManage;
      if (0 < es.length)
        for (let ss = 0, os = es.length - 1; ss <= os; ss++) {
          var is = es[ss].rule.toLowerCase();
          if (
            rs.hasOwnProperty(is) &&
            es[ss].index <= g$6.isStopGetValue &&
            u$3(rs[is])
          )
            return (
              (ts[es[ss].index].value = "" + rs[is]), g$6.checkValueRight()
            );
        }
    }
  }
  function U$2(Et) {
    return isFunction(prop(Et.onreadystatechange, "$$original"));
  }
  function $(Et) {
    return Et.readyState === 0 || Et.readyState === 4;
  }
  function pe$1() {
    D$1.call(this),
      U$2(this) ||
        ($(this)
          ? T$1.call(this)
          : (this.onreadystatechange = hack(
              this.onreadystatechange,
              D$1,
              T$1,
              q
            )));
  }
  function D$1() {
    isDefined(this) &&
      (isDefined(this.$metric) &&
        isDefined(this.$metric.info) &&
        isDefined(this.$metric.info.ai) &&
        !h$1.isPeriod &&
        h$1.networkID !== this.$metric.info.id &&
        ((h$1.isPeriod = !0),
        (h$1.actionID = this.$metric.info.ai),
        (h$1.networkID = this.$metric.info.id),
        c$5({ t: GC.XHR_CALLBACK_IDENTIFY, info: h$1 })),
      this.readyState === 2 && H(this, GC.RESPONSE_START),
      $(this)) &&
      (H(this, GC.RESPONSE_START),
      H(this, GC.RESPONSE_END),
      H(this, GC.CALLBACK_START));
  }
  function T$1() {
    if ($(this)) {
      (h$1.isPeriod = !1), c$5({ t: GC.XHR_CALLBACK_IDENTIFY, info: h$1 });
      let ts = now();
      H(this, GC.CALLBACK_END);
      var Et = this;
      if (this.$metric) {
        var es = 0;
        try {
          (es = this.status), (this.$metric.info[GC.E_TYPE] = "http");
        } catch (is) {
          log("C124");
        }
        es === 0 &&
          ((this.$metric.info[GC.E_TYPE] = "XHR"),
          (this.$metric.info[GC.MESSAGE] =
            "XHR internal services not available or Cross domain request")),
          (this.$metric.info.code = es),
          queueRequest(this.$metric),
          delay(function () {
            log("C125"), de.call(Et, ts);
          });
      }
    }
  }
  function q() {
    log("C126"), N$1(last(args(arguments))), ue$1(this, "callbackError", 1);
  }
  function L$2(Et, es, ts) {
    var is;
    (isDefined(E$6.sett.reqHeaderTraceKey) ||
      isDefined(E$6.secondSett.reqHeaderTraceKey)) &&
      ((is = []),
      isDefined(E$6.secondSett.reqHeaderTraceKey) &&
      0 < E$6.secondSett.reqHeaderTraceKey.length
        ? (is = isDefined(E$6.sett.reqHeaderTraceKey)
            ? E$6.sett.reqHeaderTraceKey.concat(
                E$6.secondSett.reqHeaderTraceKey
              )
            : E$6.secondSett.reqHeaderTraceKey)
        : isDefined(E$6.sett.reqHeaderTraceKey) &&
          (is = E$6.sett.reqHeaderTraceKey),
      isDefined(is)) &&
      includes(
        is.map(function (ns) {
          return ns.toLowerCase();
        }),
        Et.toLowerCase()
      ) &&
      (ts.info.reqhtData[Et] = es);
  }
  function M$1(Et) {
    if (!this.$$inner && isDefined(this.$metric)) {
      h$1.isPeriod &&
        ((this.$metric.info.ai = h$1.actionID),
        (this.$metric.info.parentNetworkID = h$1.networkID),
        c$5({ t: GC.LIFESTYLE_CALLBACK_REQUEST_START + this.$metric.info.ai })),
        c$5({
          t: GC.LIFESTYLE_XHR_START,
          info: isDefined(this.$metric.info) ? this.$metric.info : null,
        });
      var es,
        ts,
        is = this,
        ns =
          (isFunction(this.addEventListener)
            ? (forEach(["abort", "timeout", "error"], function (ss, os) {
                var ds = [
                  "User terminates XHR request",
                  "XHR request timeout",
                  "XHR request exception",
                ];
                addListener(
                  is,
                  ss,
                  function () {
                    safetySetErrorInfo(
                      is,
                      "code",
                      600 + Number(os),
                      "XHR",
                      ds[os]
                    );
                  },
                  !1
                );
              }),
              addListener(this, "readystatechange", pe$1, !1))
            : ((es = 3),
              (ts = function () {
                delay(function () {
                  if ($(is) && !U$2(is)) return T$1.call(is);
                  $(is) ||
                    ((is.onreadystatechange = hack(
                      is.onreadystatechange,
                      D$1,
                      T$1,
                      q
                    )),
                    0 <= --es && ts());
                });
              })()),
          (this.onreadystatechange = hack(
            this.onreadystatechange,
            D$1,
            T$1,
            q
          )),
          this.$metric.info),
        rs = (extend(ns, getTime()), (this.$metric.metric = {}));
      try {
        (ns[GC.REQUEST_BODY] = getRequestParam(Et)),
          (rs[GC.UPLOAD_BODY_SIZE] = getContentSize(Et));
      } catch (ss) {
        log("C127");
      }
    }
  }
  function Ee$1(Et, es) {
    if (u$3(es)) {
      var ts = g$6.requestArr,
        is = g$6.configeManage;
      if (0 < ts.length) {
        for (let ns = 0, rs = ts.length - 1; ns <= rs; ns++)
          if (ts[ns].rule == Et && ts[ns].index <= g$6.isStopGetValue)
            return (is[ts[ns].index].value = "" + es), g$6.checkValueRight();
      }
    }
  }
  function B$1(Et, es) {
    var ts;
    Ee$1(Et, es),
      isDefined(this.$metric) &&
        (L$2(Et, es, this.$metric),
        isDefined((ts = this.$metric.info)[GC.REQUEST_HEADER]) ||
          (ts[GC.REQUEST_HEADER] = ""),
        (ts[GC.REQUEST_HEADER] =
          (ts[GC.REQUEST_HEADER] &&
            ts[GC.REQUEST_HEADER] + GC.BREAK_LINE + Et + ":" + es) ||
          Et + ":" + es));
  }
  function le$1() {
    if (!window.XMLHttpRequest) return log("C128");
    var Et;
    XMLHttpRequest.prototype
      ? ((XMLHttpRequest.prototype.open = hack(
          XMLHttpRequest.prototype.open,
          v$1,
          x$1
        )),
        (XMLHttpRequest.prototype.send = hack(
          XMLHttpRequest.prototype.send,
          M$1
        )),
        (XMLHttpRequest.prototype.setRequestHeader = hack(
          XMLHttpRequest.prototype.setRequestHeader,
          B$1
        )))
      : (log("C129"),
        (Et = window.XMLHttpRequest),
        (window.XMLHttpRequest = function () {
          var es = new Et();
          return (
            (es.open = hack(es.open, v$1, x$1)),
            (es.send = hack(es.send, M$1)),
            (es.setRequestHeader = hack(es.setRequestHeader, B$1)),
            es
          );
        }));
  }
  var A = { isPeriod: !1, actionID: "", networkID: "" };
  function le(Et) {
    return getRequestParam(Et);
  }
  function ue(Et) {
    return getContentSize(Et);
  }
  function U$1(Et) {
    if (!isDefined(Et)) return "";
    var es = "";
    try {
      var ts,
        es = (
          window.Headers && Et instanceof Headers
            ? map(iterate(Et.entries()), function (ns) {
                return ns.join(":");
              })
            : ((ts = []),
              forEachOwn(Et, function (ns, rs) {
                ts.push(rs + ":" + ns);
              }),
              ts)
        ).join(GC.BREAK_LINE);
    } catch (is) {
      (es = ""), log("C150");
    }
    return es;
  }
  function D(Et) {
    return isDefined(Et) && typeof Et != "string";
  }
  function C$1(Et, es, ts) {
    return ts === "headers" && es
      ? D(Et) && Et[ts]
        ? extend(es[ts], Et[ts])
        : es[ts]
      : D(Et)
      ? Et[ts]
      : es
      ? es[ts]
      : null;
  }
  function pe(Et, es) {
    return {
      requestBody: le(C$1(Et, es, "body")),
      requestHeader: U$1(C$1(Et, es, "headers")),
    };
  }
  function he(is, ns) {
    var ts = getUrl((ts = D(is) ? is.url : is)),
      is = toUpper(C$1(is, ns, "method")) || "GET",
      ns = getIP(ts);
    return {
      id: uuid(),
      url: ts.slice(0, 4096),
      method: is,
      ip: ns[0] || "",
      port: ns[1] || "",
      protocalType: -1 < ts.indexOf("https") ? 2 : 1,
      reqUrlDta:
        (isDefined(E$6.sett.reqURLKey || E$6.secondSett.reqURLKey) &&
          getParams(ts)) ||
        "",
      requestType: 4,
    };
  }
  function O(Et, es) {
    var ts, is;
    Et &&
      (extendMetrics(Et),
      polyfillMetric(Et),
      (!isDefined((ts = Et.metric)[GC.DECODED_BODY_SIZE]) ||
        ts[GC.DECODED_BODY_SIZE] <= 0) &&
        ((is = Et.ext || {}),
        (ts[GC.DECODED_BODY_SIZE] = is.originalResponseSize || 0)),
      c$5({
        t: GC.REQUEST_DATA,
        p: Et,
        isRelatedH5: !!isDefined(Et.info.isRelatedH5),
      }),
      setTimeout(function () {
        getCookieUserID();
      }, 50));
  }
  function Ee() {
    var Et = window.fetch;
    window.fetch = function (os, ts) {
      let is = os;
      !os instanceof Request &&
        typeof os != "string" &&
        os &&
        (os.href || os.url) &&
        (is = os.href || os.url || "");
      var os = isDefined(window.$bonreeReplayUrl)
          ? window.$bonreeReplayUrl
          : null,
        ns = he(is, ts);
      if (
        (((!D(is) && is.indexOf(os) === -1) || D(is)) &&
          c$5({ t: GC.LIFESTYLE_FETCH_START, info: ns }),
        A.isPeriod &&
          ((ns.ai = A.actionID),
          (ns.parentNetworkID = A.networkID),
          c$5({ t: GC.LIFESTYLE_CALLBACK_REQUEST_START + ns.ai })),
        ((ns = extend(ns, { reqhtData: {}, reshtData: {} })).timestamp = now()),
        isDefined(E$6.sett) &&
          isDefined(E$6.sett.pageViewId) &&
          (ns.pageViewId = E$6.sett.pageViewId),
        BWexample.checkIsOpen(),
        BWexample.isOpen &&
          (extend(ns, { reqhtData: {}, reshtData: {} }),
          isDefined((os = checkBlackAndWhite(ns, "_fetch")))) &&
          isObj(os) &&
          forEachOwn(os, function (cs, fs) {
            let us = cs;
            if (
              (isObj(cs) &&
                (us = cs.sky
                  ? cs.fun(cs.url, cs.pathname, cs.rhsr)
                  : cs.sky === !1
                  ? cs.fun(cs.rhsr)
                  : cs.fun(cs.len)),
              startWith(cs, "bnro=") &&
                (isDefined(E$6.secondSett.appId) &&
                isDefined(E$6.secondSett.sessionId)
                  ? (us +=
                      "_fetch_fetch,rum=" +
                      E$6.sett.agentVersion +
                      "&js&" +
                      E$6.secondSett.appId +
                      "&" +
                      E$6.secondSett.sessionId)
                  : (us += "_fetch_fetch")),
              isDefined(ts))
            )
              if (isDefined(ts.headers)) {
                if (ts.headers instanceof Headers) {
                  var ls,
                    hs = {};
                  for (ls of ts.headers.entries()) hs[ls[0]] = ls[1];
                  ts.headers = hs;
                }
                extend(ts.headers, { [fs]: us });
              } else extend(ts, { headers: { [fs]: us } });
            else ts = { headers: { [fs]: us } };
          }),
        ts && ts.headers)
      ) {
        if (ts.headers instanceof Headers) {
          var rs,
            ss = {};
          for (rs of ts.headers.entries()) ss[rs[0]] = rs[1];
          ts.headers = ss;
        }
        x(ts.headers, ns);
      }
      (ns.type = 1), extend(ns, getTime());
      var os = Et(is, ts),
        ds = (extend(ns, pe(is, ts)), { info: ns }),
        as = (ds.metric = {});
      return (
        (as[GC.UPLOAD_BODY_SIZE] = ue(C$1(is, ts, "body"))),
        os
          .then(
            function (cs) {
              (ns.status = cs.status), (ns.statusText = cs.statusText);
              var fs = (as[GC.RESPONSE_END] = tillNow()),
                fs =
                  ((as[GC.RESPONSE_START] = as[GC.CALLBACK_START] = fs),
                  queueRequest(ds),
                  U$1(cs.headers)),
                us = fs,
                ls = toLower(us),
                hs = us.trim().split(/[\r\n]+/),
                gs = {};
              hs.forEach(function ($s) {
                var $s = $s.split(":"),
                  Es = $s.shift(),
                  $s = $s.join(": ");
                gs[Es] = $s;
              }),
                (ns.guid =
                  (isDefined(gs[GC.GUID_KEY]) &&
                    gs[GC.GUID_KEY].split(",")[0]) ||
                  ""),
                (ns.xBrResponse =
                  (isDefined(gs[GC.X_BR_RESPONSE]) &&
                    gs[GC.X_BR_RESPONSE].split(",")[0]) ||
                  ""),
                (ns.traceResponse =
                  (isDefined(gs[GC.TRACE_RESPONSE]) &&
                    gs[GC.TRACE_RESPONSE].split(",")[0]) ||
                  ""),
                (ns[GC.RESPONSE_HEADER] = withLength(us, 2e3));
              try {
                var ps = [];
                if (
                  (isDefined(E$6.sett.respHeaderTraceKey) &&
                    0 < E$6.sett.respHeaderTraceKey.length) ||
                  (isDefined(E$6.secondSett.respHeaderTraceKey) &&
                    0 < E$6.secondSett.respHeaderTraceKey.length)
                ) {
                  isDefined(E$6.secondSett.respHeaderTraceKey) &&
                  0 < E$6.secondSett.respHeaderTraceKey.length
                    ? (ps = isDefined(E$6.sett.respHeaderTraceKey)
                        ? E$6.sett.respHeaderTraceKey.concat(
                            E$6.secondSett.respHeaderTraceKey
                          )
                        : E$6.secondSett.respHeaderTraceKey)
                    : isDefined(E$6.sett.respHeaderTraceKey) &&
                      (ps = E$6.sett.respHeaderTraceKey);
                  for (let ms = 0, Es = ps.length - 1; ms <= Es; ms++)
                    -1 < ls.indexOf(toLower(ps[ms])) &&
                      (ns.reshtData[ps[ms]] = cs.headers.get(ps[ms]));
                }
              } catch (ms) {
                log("C148");
              }
              if (
                (getResponseHead(fs),
                (cs.$metric = ds),
                (as[GC.CALLBACK_END] = tillNow()),
                (hs = tryToClone(cs)),
                hs)
              )
                try {
                  const ms = {
                    bytesLimit: Number.POSITIVE_INFINITY,
                    collectStreamBody: !0,
                  };
                  readBytesFromStream(hs.body, ms, function (Es) {
                    (ds.ext = { originalResponseSize: Es }), O(ds, cs);
                  });
                } catch (ms) {
                  log("C149");
                }
              else O(ds);
              return cs;
            },
            function (cs) {
              var fs = (as[GC.RESPONSE_END] = tillNow());
              throw (
                ((as[GC.RESPONSE_START] =
                  as[GC.CALLBACK_START] =
                  as[GC.CALLBACK_END] =
                    fs),
                (ns.status =
                  window.TypeError && cs instanceof TypeError ? 602 : 600),
                (ns.eType = "FETCH"),
                (ns[GC.STATUS_TEXT] =
                  ns.status == 602
                    ? "FETCH request exception"
                    : "User terminates FETCH request"),
                O(ds),
                cs)
              );
            }
          )
          .catch((cs) => {
            throw ((cs.type = 2), cs);
          })
      );
    };
  }
  function x(Et, es) {
    if (isDefined(Et)) {
      var ts,
        is = g$6.requestArr,
        ns = g$6.configeManage;
      if (0 < is.length) {
        for (let rs = 0, ss = is.length - 1; rs <= ss; rs++)
          if (
            Et.hasOwnProperty(is[rs].rule) &&
            is[rs].index <= g$6.isStopGetValue &&
            u$3(Et[is[rs].rule])
          )
            return (
              (ns[is[rs].index].value = "" + Et[is[rs].rule]),
              g$6.checkValueRight()
            );
      }
      ((isDefined(E$6.sett.reqHeaderTraceKey) &&
        0 < E$6.sett.reqHeaderTraceKey.length) ||
        (isDefined(E$6.secondSett.reqHeaderTraceKey) &&
          0 < E$6.secondSett.reqHeaderTraceKey.length)) &&
        ((ts = []),
        isDefined(E$6.secondSett.reqHeaderTraceKey) &&
        0 < E$6.secondSett.reqHeaderTraceKey.length
          ? (ts = isDefined(E$6.sett.reqHeaderTraceKey)
              ? E$6.sett.reqHeaderTraceKey.concat(
                  E$6.secondSett.reqHeaderTraceKey
                )
              : E$6.secondSett.reqHeaderTraceKey)
          : isDefined(E$6.sett.reqHeaderTraceKey) &&
            (ts = E$6.sett.reqHeaderTraceKey),
        Object.keys(Et).map(function (rs) {
          includes(
            ts.map(function (ss) {
              return ss.toLowerCase();
            }),
            rs.toLowerCase()
          ) && (es.reqhtData[rs] = Et[rs]);
        }));
    }
  }
  function i$1() {
    if (!isFunction(window.fetch)) return log("C147");
    v$a(GC.XHR_CALLBACK_IDENTIFY, function (Et) {
      A = Et.info;
    }),
      Ee();
  }
  function r$1() {
    le$1(), i$1(), window.performance && window.performance.now && H$1();
  }
  var m$1 = 0;
  function v(Et) {
    m$1 = 1e3 * new Date().getTime();
  }
  function E(Et) {
    if (isDefined(Et))
      try {
        -1 < Et.constructor.toString().indexOf("String") &&
          (es = (
            isDefined(window.TextEncoder) ? new TextEncoder().encode(Et) : Et
          ).length),
          -1 < Et.constructor.toString().indexOf("ArrayBuffer") &&
            (es = Et.byteLength),
          -1 < Et.constructor.toString().indexOf("Blob") && (es = Et.size),
          -1 < Et.constructor.toString().indexOf("Array") &&
            (es = Et.byteLength),
          -1 < Et.constructor.toString().indexOf("Uint8Array") &&
            (es = Et.toString().length || 0);
        var es,
          ts,
          is,
          ns = isDefined(this.name) ? this.name : this.url.split("?")[0];
        /^[a-zA-Z0-9:_-\s@./]+$/.test(ns) !== !1 &&
          ((ts = new a$1(ns, "websocket")).setStatus(1),
          isDefined(ts.spanEvent) &&
            isDefined(ts.spanEvent.ic) &&
            (ts.spanEvent.ic = !1),
          ts.setTag("process", "send"),
          ts.setTag(
            "connectID",
            isDefined(this.identify) ? this.identify : uuid()
          ),
          ts.setData(
            "url",
            isDefined(this.handledUrl) ? this.handledUrl : this.url
          ),
          (is = 1e3 * new Date().getTime() - m$1) === 0 && (is = 999),
          !isDefined(this.readyState) ||
            (this.readyState !== 2 && this.readyState !== 3) ||
            (ts.setStatus(2),
            ts.setStatusCode(
              "WebSocket is already in CLOSING or CLOSED state."
            )),
          ts.setMetric("send", is, "us"),
          ts.setDuration(is),
          ts.setMetric("size", es, "byte"),
          ts.finish());
      } catch (rs) {
        console.error(rs);
      }
  }
  function T(Et) {
    return class extends Et {
      constructor(...is) {
        super(...is), c$5({ t: GC.WEBSOCKET_CONNECTION_START });
        var is = this.url,
          ts = is && -1 < is.indexOf("?") ? is.split("?")[0] : is,
          is = d$5({ p: { info: { url: is } } }, E$6.sett).p.info.url;
        (this.handledUrl = isDefined(is) ? is : ""),
          (this.identify = uuid()),
          (this.name = isDefined(ts) ? ts : ""),
          (this.hasHandleConnect = !1),
          (this.callTime = 1e3 * new Date().getTime()),
          (this.onOpen = (ns) => {
            var rs;
            /^[a-zA-Z0-9:_-\s@./]+$/.test(this.name) !== !1 &&
              (((rs = new a$1(this.name, "websocket")).spanEvent.st = 0),
              (rs.spanEvent.timestamp = this.callTime),
              rs.setStatus(1),
              isDefined(rs.spanEvent) &&
                isDefined(rs.spanEvent.ic) &&
                (rs.spanEvent.ic = !1),
              rs.setTag("process", "connect"),
              rs.setTag(
                "connectID",
                isDefined(this.identify) ? this.identify : uuid()
              ),
              rs.setData("url", this.handledUrl),
              rs.setDuration(1e3 * new Date().getTime() - this.callTime),
              rs.finish(),
              (this.hasHandleConnect = !0),
              c$5({ t: GC.WEBSOCKET_CONNECTION_END }));
          }),
          (this.onError = (ns) => {
            var rs;
            this.hasHandleConnect ||
              (/^[a-zA-Z0-9:_-\s@./]+$/.test(this.name) !== !1 &&
                (((rs = new a$1(this.name, "websocket")).spanEvent.st = 0),
                (rs.spanEvent.timestamp = this.callTime),
                rs.setStatus(2),
                isDefined(rs.spanEvent) &&
                  isDefined(rs.spanEvent.ic) &&
                  (rs.spanEvent.ic = !1),
                rs.setTag("process", "connect"),
                rs.setTag(
                  "connectID",
                  isDefined(this.identify) ? this.identify : uuid()
                ),
                rs.setData("url", this.handledUrl),
                rs.setDuration(1e3 * new Date().getTime() - this.callTime),
                rs.setStatusCode("Websocket connection failed"),
                rs.finish(),
                (this.hasHandleConnect = !0),
                c$5({ t: GC.WEBSOCKET_CONNECTION_END })));
          }),
          this.addEventListener("open", this.onOpen.bind(this)),
          this.addEventListener("error", this.onError.bind(this));
      }
      send(es) {
        v(), super.send(es), E.call(this, es);
      }
    };
  }
  function g() {
    if (E$6.sett.enableWebsocket !== !1)
      return window.WebSocket === void 0
        ? log("C157")
        : window.WebSocket.prototype === void 0
        ? log("C158")
        : void (window.WebSocket = T(window.WebSocket));
  }
  var d$1 = {
    config: NIL_FN,
    error: NIL_FN,
    recordCustomActionEnd: NIL_FN,
    setUserProperties: NIL_FN,
    incUserProperty: NIL_FN,
    removeUserProperty: NIL_FN,
  };
  const w = "bonree-version";
  function P() {
    if (
      typeof document == "undefined" ||
      !E$6.sett.probability ||
      window.bonreeRUM
    )
      return log("C105"), window.bonreeRUM;
    k(isDefined(window.location) ? window.location : ""),
      $$1(),
      Ne(),
      r$1(),
      g$1(),
      Z$1(),
      g();
    var Et = overwrite(d$1, {
        config: function (es, ts = !0, is = 0) {
          (isDefined(es.osType) &&
            es.osType === GC.ANDROID &&
            E$6.sett.osType === GC.ANDROID) ||
            (E$6.setConfig.call(E$6, es, ts, is),
            isDefined(es.appId) && w$9.setAppid(es));
        },
        error: N$1,
        recordCustomActionEnd: z,
      }),
      Et = (isDefined(window) && (window.bonreeRUM = Et), getCookie(w));
    (window.bonreeRUM.version = version),
      (Et && Et === version) ||
        (setCookie(w, version), !Et) ||
        resetSeesionId(),
      (window.bonreeRUM.startSpan = function (es, ts) {
        return new a$1(es, ts);
      }),
      (window.bonreeRUM.getSession = function () {
        return w$9.getSession();
      }),
      (window.bonreeRUM.getUserInfo = function () {
        return u$1.getUserInfo();
      }),
      (window.bonreeRUM.updateConfig = function (es) {
        isDefined(window.stopBonreeRecord) &&
          (window.stopBonreeRecord(), (window.stopBonreeRecordUpload = !0)),
          A$4(),
          w$9.setAppid(es);
      }),
      (window.bonreeJsBridge = ee),
      (window.bonreeRUM = extend(window.bonreeRUM, ee));
  }
  function r(Et) {
    var es = new Metric(Et.p, GC.ACTION),
      es =
        (es
          .info("t")
          .info("n")
          .info("sa")
          .info("i")
          .info("vn")
          .info("ic")
          .info("p", "", "p", !0)
          .info("lt")
          .info("is")
          .info("id")
          .info("m")
          .info("ice")
          .info("ci")
          .info("vt", 1, "vt")
          .info("vci", "", "vci")
          .info("ir"),
        isDefined(Et.p.info.me) && es.info("me"),
        es.build());
    return (
      isDefined(Et.revts) && 0 < Et.revts.length && (es.revts = Et.revts), es
    );
  }
  function i(Et) {
    return (
      (Et = new Metric(Et.p, GC.CONSOLE)),
      Et.info("lv").info("msg", "", "msg", !0),
      Et.build()
    );
  }
  function a(Et) {
    var es =
        typeof window != "undefined" &&
        window.navigator &&
        window.navigator.userAgent
          ? window.navigator.userAgent
          : "",
      ts = new Metric(Et.p, GC.ERROR),
      is =
        (isDefined(window.performance) &&
          isDefined(window.performance.timing) &&
          performance.timing.navigationStart) ||
        now();
    return (
      isDefined(window.BRLog) && window.BRLog.__sendErrorInfo(ts.data.info),
      ts
        .info(GC.PAGE_ID, "", "pvid")
        .info(GC.PAGE_URL, "", "url")
        .info(GC.ERROR_FILE, "", "n")
        .info(GC.MESSAGE, "", "m")
        .info(GC.ERROR_LINE, 0, "l")
        .info(GC.ERROR_COLUMN, 0, "col")
        .info(GC.PAGE_CREATE_TIME, 1e3 * is, "pct")
        .info(GC.PAGE_TITLE, document.title || "", "t")
        .info("type", 3, "ect")
        .info("ua", es, "ua")
        .info(GC.FRAME_WORK, "", "fw"),
      isDefined(Et.p.info[GC.NAME] && Et.p.info[GC.NAME] !== "") &&
        ts.info(GC.NAME, "", "et"),
      isDefined(Et.p.info[GC.ERROR_STACK]) && Et.p.info[GC.ERROR_STACK] !== ""
        ? ts.info(GC.ERROR_STACK, "", "sta")
        : isDefined(ts.data.info.file) &&
          ((ts.data.info[GC.ERROR_STACK] =
            "undefined at @" + ts.data.info.file),
          ts.info(
            GC.ERROR_STACK,
            "at undefined @ " + ts.data.info.file,
            "sta"
          )),
      isDefined(E$6.sett.isSinglePage)
        ? ts.info("pt", 2, "pt")
        : ts.info("pt", 1, "pt"),
      ts.build()
    );
  }
  let m = {
    pvid: "",
    url: "",
    wpi: {},
    wri: [],
    ic: !1,
    timestamp:
      isDefined(performance.timing) && performance.timing.navigationStart
        ? 1e3 * performance.timing.navigationStart
        : now(),
  };
  function h(Et) {
    isDefined(Et.p.info[GC.PAGE_ID]) && (m.pvid = Et.p.info[GC.PAGE_ID]),
      isDefined(Et.p.info[GC.PAGE_URL]) && (m.url = Et.p.info[GC.PAGE_URL]),
      isDefined(Et.p.info[GC.TITLE]) &&
        Et.p.info[GC.TITLE] != "" &&
        (m.vt = Et.p.info[GC.TITLE]);
    const es = new Metric(Et.p, GC.WEBVIEWDATA);
    es
      .metric(GC.NAVIGATION_START, "", "ns")
      .metric(GC.UNLOAD_EVENT_START, 0, "ues")
      .metric(GC.FULL_RESOURCE_LOAD_TIME, 0, "frlt")
      .metric(GC.UNLOAD_EVENT_END, 0, "uee")
      .metric(GC.REDIRECT_START, 0, "rds")
      .metric(GC.REDIRECT_END, 0, "rde")
      .metric(GC.FETCH_START, 0, "fs")
      .metric(GC.DOMAIN_LOOKUP_START, 0, "dls")
      .metric(GC.DOMAIN_LOOKUP_END, 0, "dle")
      .metric(GC.CONNECT_START, 0, "cs")
      .metric(GC.SECURE_CONNECTION_START, 0, "scs")
      .metric(GC.CONNECT_END, 0, "ce")
      .metric(GC.REQUEST_START, 0, "reqs")
      .metric(GC.RESPONSE_START, 0, "rsps")
      .metric(GC.RESPONSE_END, 0, "rspe")
      .metric(GC.DOM_LOADING, 0, "dl")
      .metric(GC.DOM_INTERACTIVE, 0, "di")
      .metric(GC.DOM_CONTENT_LOADED_EVENT_START, 0, "dcles")
      .metric(GC.DOM_CONTENT_LOADED_EVENT_END, 0, "dclee")
      .metric(GC.DOM_COMPLETE, 0, "dc")
      .metric(GC.LOAD_EVENT_START, 0, "les")
      .metric(GC.LOAD_EVENT_END, 0, "lee")
      .metric(GC.FIRST_PAINT, 0, "fp")
      .metric(GC.FIRST_CONTENTFUL_PAINT, 0, "fcp")
      .metric(GC.LARGEST_CONTENTFUL_PAINT, 0, "lcp")
      .metric(GC.TRANSFER_SIZE, 0, "ts")
      .metric(GC.ENCODED_BODY_SIZE, 0, "ebs")
      .metric(GC.DECODED_BODY_SIZE, 0, "dbs")
      .metric("tti", 0, "tti")
      .metric(GC.RESPONSE_STATUS, -1, "rs"),
      (m.wpi = es.build().data);
    var ts = window.top && window.self && window.top === window.self ? 1 : 0;
    m.wpi.imd = ts;
    try {
      const {
        type: ns,
        ent: rs,
        sin: ss,
        data: os,
      } = P$3(M(m.wpi, m.url, m.pvid));
      var is = u$1.getEviData("value");
      I$3.push(
        JSON.parse(JSON.stringify({ k: ns, ent: rs, sin: ss, v: os, evi: is }))
      ),
        (os.ru = d$5(
          { p: { info: { url: os.ru } } },
          E$6.secondSett
        ).p.info.url),
        L$4.push({ k: ns, ent: rs, sin: ss, v: os, evi: is });
    } catch (ns) {
      log("C99-WebviewPerformanceInfoHandle" + ns);
    }
  }
  function L$1(Et) {
    forEach(Et.p || [], function (es) {
      const ts = new Metric(es, GC.RESOURCE);
      ts
        .info(GC.START_TIME, 0, "st")
        .info(GC.NAME, "", "name")
        .info(GC.DURATION, 0, "dura")
        .info("ret", "", "rt")
        .metric(GC.FETCH_START, 0, "fs")
        .metric(GC.DOMAIN_LOOKUP_START, 0, "dls")
        .metric(GC.DOMAIN_LOOKUP_END, 0, "dle")
        .metric(GC.CONNECT_START, 0, "cs")
        .metric(GC.CONNECT_END, 0, "ce")
        .metric(GC.SECURE_CONNECTION_START, 0, "scs")
        .metric(GC.REQUEST_START, 0, "reqs")
        .metric(GC.RESPONSE_START, 0, "rsps")
        .metric(GC.RESPONSE_END, 0, "rspe")
        .metric(GC.TRANSFER_SIZE, 0, "ts")
        .metric(GC.ENCODED_BODY_SIZE, 0, "ebs")
        .metric(GC.DECODED_BODY_SIZE, 0, "dbs")
        .metric(GC.RESPONSE_STATUS, -1, "rs"),
        isDefined(es.info) &&
          isDefined(es.info[GC.INITIATOR_TYPE]) &&
          ts.info(GC.INITIATOR_TYPE, "", "it");
      var is = ts.build().data,
        ns = u$1.getEviData("value");
      if ((ns && (is.evi = ns), isDefined(is.it) && !Et.special)) {
        if (is.it !== "xmlhttprequest" && is.it !== "fetch") {
          m.wri.push(is);
          const { type: rs, ent: ss, sin: os, data: ds } = P$3(C(is));
          I$3.push(
            JSON.parse(
              JSON.stringify({ k: rs, ent: ss, sin: os, v: ds, evi: ns })
            )
          ),
            (ds.ru = d$5(
              { p: { info: { url: ds.ru } } },
              E$6.secondSett
            ).p.info.url),
            L$4.push({ k: rs, ent: ss, sin: os, v: ds, evi: ns });
        }
      } else m.wri.push(is);
    });
  }
  function U(Et) {
    var es, ts;
    return isEmpty(m.wpi)
      ? null
      : ((ts = u$1.getEviData("value")),
        (es = new Metric({ info: m }, GC.WEBVIEWDATA))
          .info("pvid", "", "pvid")
          .info("url", "", "url")
          .info("wpi", {}, "wpi")
          .info("ic", !1, "ic")
          .info("vt", "", "vt", !0)
          .info("evi", ts),
        0 < m.wri.length && es.info("wri", [], "wri"),
        isDefined(Et.revts) && 0 < Et.revts.length
          ? (((ts = es.build()).revts = Et.revts), ts)
          : es.build());
  }
  function M(Et, es, ts) {
    if (es !== "about:blank") {
      let is = Et,
        ns = getIP(es),
        rs = getMineTypeByUrl(es) || "text/html",
        ss = 1e3 * (is.dle - is.dls),
        os = (ss < 0 && (ss = 0), 1e3 * (is.ce - is.scs) || -1),
        ds =
          ((os < 0 || is.scs === 0) && (os = 0), 1e3 * (is.reqs - is.ce) || -1),
        as =
          (ds < -1 ? (ds = 999) : ds === -1 && (ds = 0),
          1e3 * (is.rsps - is.reqs) || -1),
        cs = (as < -1 ? (as = 999) : as === -1 && (as = 0), 0);
      return (
        (cs =
          is.rsps === 0
            ? 1e3 * (is.rspe - is.fs) || -1
            : 1e3 * (is.rspe - is.rsps) || -1) < -1
          ? (cs = 999)
          : cs === -1 && (cs = 0),
        (Et = {
          info: {
            id: uuid(),
            ru: es,
            m: "GET",
            ti: ns[0] || "",
            tp: ns[1] || "",
            dt: ss,
            sslt: os,
            rt: ds,
            rti: as,
            dti: cs,
            ds: 0,
            rds: 0,
            pt: -1 < es.indexOf("https") ? 2 : 1,
            ec: 200,
            art: 1,
            ret: rs,
            pvid: ts,
            ic: !1,
          },
        }),
        (Et.info.ct = 0 < is.ce - is.cs ? 1e3 * (is.ce - is.cs) : 0),
        Et.info.ti.length < 1 && delete Et.info.ti,
        Et
      );
    }
  }
  function C(fs) {
    let es = fs,
      ts = es.name.slice(0, 4096),
      is = 3;
    if (isDefined(es.it))
      switch (es.it) {
        case "xmlhttprequest":
          is = 3;
          break;
        case "beacon":
          is = 5;
          break;
        case "fetch":
          is = 4;
          break;
        default:
          is = 2;
      }
    let ns = getIP(ts),
      rs = getMineTypeByUrl(ts) || "text/html",
      ss = 1e3 * (es.dle - es.dls),
      os =
        ((ss < 0 || es.dura <= 10) && (ss = 0), 1e3 * (es.ce - es.scs) || -1),
      ds =
        ((os < 0 || es.dura <= 10 || es.scs === 0) && (os = 0),
        1e3 * (es.reqs - es.ce) || -1),
      as =
        (ds < -1 || es.dura <= 10 ? (ds = 999) : ds === -1 && (ds = 0),
        1e3 * (es.rsps - es.reqs) || -1),
      cs = (as < -1 || es.dura <= 10 ? (as = 999) : as === -1 && (as = 0), 0);
    (cs =
      es.rsps === 0
        ? 1e3 * (es.rspe - es.fs) || -1
        : 1e3 * (es.rspe - es.rsps) || -1) < -1 || es.dura <= 10
      ? (cs = 999)
      : cs === -1 && (cs = 0);
    var fs = {
        info: {
          timestamp:
            isDefined(es.st) &&
            isDefined(window.performance) &&
            isDefined(window.performance.timing)
              ? 1e3 * (window.performance.timing.navigationStart + es.st)
              : now(),
          id: uuid(),
          ru: ts,
          m: "GET",
          ti: ns[0] || "",
          tp: ns[1] || "",
          dt: ss,
          sslt: os,
          rt: ds,
          rti: as,
          dti: cs,
          ds: 0,
          rds: 0,
          pt: -1 < ts.indexOf("https") ? 2 : 1,
          ec: 200,
          art: is,
          ret: rs,
          ic: !1,
          pvid: isDefined(E$6.sett.pageViewId) ? E$6.sett.pageViewId : "",
        },
      },
      us = 1e3 * (es.ce - es.cs);
    return (fs.info.ct = 0 < us ? us : 0), fs;
  }
  function s$1(Et) {
    var es = new Metric(Et.p, GC.SPAN);
    return (
      es
        .info("st")
        .info("n", "", "n", !0)
        .info("t", "", "t")
        .info("du", 0, "du")
        .info("sta", 0, "sta")
        .info("ic", !1, "ic"),
      isDefined(Et.p.info) &&
        isDefined(Et.p.info.da) &&
        es.info("da", [], "da"),
      isDefined(Et.p.info) && isDefined(Et.p.info.m) && es.info("m", [], "m"),
      isDefined(Et.p.info) &&
        isDefined(Et.p.info.tag) &&
        es.info("tag", [], "tag"),
      isDefined(Et.p.info) &&
        isDefined(Et.p.info.stac) &&
        es.info("stac", "", "stac"),
      isDefined(Et.p.info) &&
        isDefined(Et.p.info.sub) &&
        es.info("sub", {}, "sub"),
      es.build()
    );
  }
  function L(Et) {
    v$a(Et, function (es) {
      if (!isDefined(es.p)) return log("C144");
      var ts = es.t;
      isDefined(es.p) &&
        isDefined(es.p.info) &&
        !isDefined(es.p.info[GC.PAGE_ID]) &&
        ((es.p.info[GC.PAGE_ID] = E$6.sett.pageViewId),
        (es.p.info[GC.PAGE_URL] = d$5(
          {
            p: {
              info: {
                url: isDefined(window.location) ? window.location.href : "",
              },
            },
          },
          E$6.sett
        ).p.info.url));
      let is = u$1.getEviData("value"),
        ns = {};
      switch (ts) {
        case GC.ERROR_DATA:
          v$5((ns = a(es)), v$b.webviewJSErrorEvent);
          break;
        case GC.CONSOLE_DATA:
          v$5((ns = i(es)), v$b.consoleEvent);
          break;
        case GC.REQUEST_DATA:
          (isDefined(es) && isDefined(es.p) && isDefined(es.p.info.ai)) ||
            (isDefined(es.isRelatedH5) && es.isRelatedH5) ||
            (isEmpty(E$6.secondSett) ||
              isEmpty((ns = Q$1(JSON.parse(stringify(es)), E$6.secondSett))) ||
              (isDefined(E$6.secondSett.osType) &&
              E$6.secondSett.osType !== GC.BROWSER
                ? v$b.NetworkEvent(
                    stringify({ ent: ns.ent, v: ns.data, evi: is }),
                    E$6.secondSett
                  )
                : pushQueueData(ns)),
            isEmpty((ns = Q$1(JSON.parse(stringify(es)), E$6.sett)))) ||
            (isDefined(E$6.sett.osType) && E$6.sett.osType !== GC.BROWSER
              ? v$b.NetworkEvent(
                  stringify({ ent: ns.ent, v: ns.data, evi: is }),
                  E$6.sett
                )
              : pushQueueData(ns)),
            isDefined(es) &&
              isDefined(es.p.info) &&
              isDefined(es.p.info.ai) &&
              c$5({
                t: GC.LIFESTYLE_REQUEST_END + es.p.info.ai,
                requestData: JSON.parse(stringify(es)),
                endTime: now(),
              }),
            isDefined(es.isRelatedH5) &&
              es.isRelatedH5 &&
              c$5({
                t: GC.LIFESTYLE_REQUEST_END + "H5",
                requestData: JSON.parse(stringify(es)),
                endTime: now(),
              }),
            c$5({
              t: GC.LIFESTYLE_REQUEST_END,
              requestData: JSON.parse(stringify(es)),
              endTime: now(),
            });
          break;
        case GC.SPAN_DATA:
          isDefined((ns = s$1(es)).data) &&
            c$5({ t: GC.SPAN_CALLBACK_DATA, websocketData: ns }),
            ns.isRelated || v$5(ns, v$b.spanEvent);
          break;
        case GC.RESOURCE_DATA:
          if (
            (es.type === 1 && h(es),
            es.type === 2 && L$1(es),
            es.type === 3 && isDefined((ns = U(es))))
          )
            if (isDefined(E$6.sett.osType) && E$6.sett.osType !== GC.BROWSER) {
              let ss =
                window.top && window.self && window.top === window.self ? 1 : 0;
              ns.imd = ss;
              var rs = { ent: ns.ent, v: ns.data, evi: ns.evi };
              isDefined(ns.revts) &&
                0 < ns.revts.length &&
                (ns.revts.map(function (os) {
                  return (
                    os.v.ru.split("?")[0] ==
                      window.location.href.split("?")[0] && (os.v.imd = ss),
                    ns.evi && (os.evi = ns.evi),
                    os
                  );
                }),
                (rs.revts = ns.revts)),
                checkMoudle("network") || delete rs.revts,
                v$b.webviewPerformanceTimingEvent(stringify(rs), E$6.sett, ss);
            } else pushQueueData(ns);
          if (es.type === 4 && isDefined((ns = U(es))))
            if (
              isDefined(E$6.secondSett.osType) &&
              E$6.secondSett.osType !== GC.BROWSER
            ) {
              let ss =
                window.top && window.self && window.top === window.self ? 1 : 0;
              (ns.imd = ss),
                (ns.data.url = d$5(
                  { p: { info: { url: ns.data.url } } },
                  E$6.secondSett
                ).p.info.url);
              var rs = { ent: ns.ent, v: ns.data, evi: ns.evi };
              isDefined(ns.revts) &&
                0 < ns.revts.length &&
                (ns.revts.map(function (ds) {
                  return (
                    ds.v.ru.split("?")[0] ==
                      window.location.href.split("?")[0] && (ds.v.imd = ss),
                    ns.evi && (ds.evi = ns.evi),
                    ds
                  );
                }),
                (rs.revts = ns.revts)),
                checkMoudle("network") || delete rs.revts,
                v$b.webviewPerformanceTimingEvent(
                  stringify(rs),
                  E$6.secondSett,
                  ss
                );
            } else pushQueueData(ns);
          break;
        case GC.TRACE_ACTION_DATA:
          (ns = r(es)),
            isDefined(es.type) &&
              es.type === 1 &&
              (isDefined(E$6.sett.osType) && E$6.sett.osType !== GC.BROWSER
                ? ((rs = { ent: ns.ent, v: ns.data, evi: is }),
                  isDefined(ns.revts) &&
                    0 < ns.revts.length &&
                    (rs.revts = ns.revts),
                  v$b.webviewActionEvent(stringify(rs), E$6.sett))
                : pushQueueData(ns)),
            isDefined(es.type) &&
              es.type === 2 &&
              (isDefined(E$6.secondSett.osType) &&
              E$6.secondSett.osType !== GC.BROWSER
                ? ((ns.data.vn = d$5(
                    { p: { info: { url: ns.data.vn } } },
                    E$6.secondSett
                  ).p.info.url),
                  (rs = { ent: ns.ent, v: ns.data, evi: is }),
                  isDefined(ns.revts) &&
                    0 < ns.revts.length &&
                    (rs.revts = ns.revts),
                  v$b.webviewActionEvent(stringify(rs), E$6.secondSett))
                : pushQueueData(ns));
          break;
        default:
          log("C118");
      }
    });
  }
  function I$1() {
    L([
      GC.ROUTE_DATA,
      GC.ERROR_DATA,
      GC.CONSOLE_DATA,
      GC.REQUEST_DATA,
      GC.TRACE_ACTION_DATA,
      GC.SPAN_DATA,
      GC.RESOURCE_DATA,
      GC.PAGE_DATA,
    ]);
  }
  let B = A$6();
  function d() {
    window.bonreeRUM
      ? log("C104")
      : ((window.BonreeRecord = { BonreeRecord }), P(), I$1(), V$1());
  }
  function s(Et) {
    if (
      (m$6(),
      document && v$8(),
      isDefined(window.getIsRunWithNetClient) && (Et.dataFusionInfo = "net"),
      isDefined(window.bonreeRUM))
    ) {
      if (isDefined(window.bonreeRUM.config))
        return void window.bonreeRUM.config(Et, !1, 1);
    } else E$6.setConfig(Et);
    (E$6.sett.initTime = now()), d();
  }
  B && d();
  const I = {
    BonreeRecord,
    BonreeStart: s,
    Sm4: D$5,
    getDeviceInfo,
    setExtraInfo: b$4,
    setUserID: S$4,
  };
  return (
    (window.BonreeAgent = I),
    (exports.BonreeRecord = BonreeRecord),
    (exports.BonreeStart = s),
    (exports.Sm4 = D$5),
    (exports.getDeviceInfo = getDeviceInfo),
    (exports.setExtraInfo = b$4),
    (exports.setUserID = S$4),
    exports
  );
})({});
